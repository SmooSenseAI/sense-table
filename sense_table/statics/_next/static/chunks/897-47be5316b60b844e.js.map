{"version":3,"file":"static/chunks/897-47be5316b60b844e.js","mappings":"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","sources":["webpack://_N_E/./src/components/IconControls/ColumnHideIcon.js","webpack://_N_E/./src/components/IconControls/ColumnPinIcon.js","webpack://_N_E/./src/components/IconControls/RenderTypeIcon.js","webpack://_N_E/./src/components/settings/IconColorMode.js","webpack://_N_E/./src/components/settings/IconFontSize.js","webpack://_N_E/./src/components/bottomBar/JsonViewingSettings.js","webpack://_N_E/./src/components/elements/license/verifyLicense.js","webpack://_N_E/./src/components/elements/license/IconLicense.js","webpack://_N_E/./src/components/settings/IconEnableDebugging.js","webpack://_N_E/./src/components/bottomBar/BottomBarWrapper.js","webpack://_N_E/./src/components/bottomBar/BottomIconCard.js","webpack://_N_E/./src/components/debugging/InspectState.js","webpack://_N_E/./src/components/elements/AutoLink.js","webpack://_N_E/./src/components/elements/BasicTable.js","webpack://_N_E/./src/components/elements/ClickCard.js","webpack://_N_E/./src/components/elements/Controls.js","webpack://_N_E/./src/components/elements/IconDropdown.js","webpack://_N_E/./src/components/elements/ImageBox.js","webpack://_N_E/./src/components/elements/JsonBox.js","webpack://_N_E/./src/components/elements/KeyboardShortcutsTable.js","webpack://_N_E/./src/components/elements/PanelControlsWrapper.js","webpack://_N_E/./src/components/elements/SqlCard.js","webpack://_N_E/./src/components/elements/StatusChip.js","webpack://_N_E/./src/components/elements/containers.js","webpack://_N_E/./src/components/elements/displays.js","webpack://_N_E/./src/components/filters/FiltersArrow.js","webpack://_N_E/./src/components/filters/FilteredCounts.js","webpack://_N_E/./src/components/folderBrowser/elements.js","webpack://_N_E/./src/components/folderBrowser/CustomTreeItem.js","webpack://_N_E/./src/components/folderBrowser/BreadCumbsNav.js","webpack://_N_E/./src/components/folderBrowser/FolderNavControls.js","webpack://_N_E/./src/components/folderBrowser/FolderNav.js","webpack://_N_E/./src/components/folderBrowser/folderViewers/ViewAlbum.js","webpack://_N_E/./src/components/folderBrowser/folderViewers/ChildrenStats.js","webpack://_N_E/./src/components/folderBrowser/folderViewers/FolderPeek.js","webpack://_N_E/./src/components/folderBrowser/folderViewers/FolderViewer.js","webpack://_N_E/./src/components/folderBrowser/fileViewers/ViewImage.js","webpack://_N_E/./src/components/folderBrowser/fileViewers/TextContentViewer.js","webpack://_N_E/./src/components/folderBrowser/fileViewers/ParquetPreview.js","webpack://_N_E/./src/components/folderBrowser/fileViewers/CsvPreview.js","webpack://_N_E/./src/components/folderBrowser/fileViewers/FileViewer.js","webpack://_N_E/./src/components/folderBrowser/Preview.js","webpack://_N_E/./src/components/layout/HorizontalSplitBox.js","webpack://_N_E/./src/components/folderBrowser/FolderBrowser.js","webpack://_N_E/./src/components/TopSpeedDial.js","webpack://_N_E/./src/components/Toast.js","webpack://_N_E/./src/components/layout/TopLevelPage.js","webpack://_N_E/./src/hooks/useLeavePageConfirmation.js","webpack://_N_E/./src/components/settings/CheckboxInSettings.js","webpack://_N_E/./src/components/settings/DropdownInSettings.js","webpack://_N_E/./src/components/settings/SliderInSettings.js","webpack://_N_E/./src/components/elements/MyTreeMap.js","webpack://_N_E/./src/components/elements/MyBarChart.js","webpack://_N_E/./src/components/filters/EnumFilterTable.js","webpack://_N_E/./src/components/table/ColumnStats/NullPie.js","webpack://_N_E/./src/components/table/ColumnStats/StatsCount.js","webpack://_N_E/./src/components/filters/NullFilterRadio.js","webpack://_N_E/./src/components/filters/ColumnFilterIcon.js","webpack://_N_E/./src/components/filters/FilterCardBottomButtons.js","webpack://_N_E/./src/components/filters/EnumFilter.js","webpack://_N_E/./src/components/filters/HistogramFilter.js","webpack://_N_E/./src/components/filters/TextFilter.js","webpack://_N_E/./src/components/filters/MiniTextFilter.js","webpack://_N_E/./src/components/table/ColumnStats/CellWithDistribution.js","webpack://_N_E/./src/components/table/ColumnStats/CellWithQuickFilter.js","webpack://_N_E/./src/components/table/ColumnStats/ColumnStatsCell.js","webpack://_N_E/./src/components/table/rightClickMenu/CellRightClickCard.js","webpack://_N_E/./src/components/table/rightClickMenu/IFrameVisualizationCell.js","webpack://_N_E/./src/components/table/rightClickMenu/TopButtons.js","webpack://_N_E/./src/configs/iconsForRenderType.js","webpack://_N_E/./src/hooks/useAGGridTheme.js","webpack://_N_E/./src/store/columnMetaSlice.js","webpack://_N_E/./src/hooks/useApiData.js","webpack://_N_E/./src/hooks/useCardinality.js","webpack://_N_E/./src/components/table/rightClickMenu/ImageBoxCell.js","webpack://_N_E/./src/components/elements/CellRightClickCard.js","webpack://_N_E/./src/components/table/rightClickMenu/MenuRow.js","webpack://_N_E/./src/components/table/rightClickMenu/CellRightClickMenu.js","webpack://_N_E/./src/components/table/ExpandableTextCell.js","webpack://_N_E/./src/components/table/rightClickMenu/JsonBoxCell.js","webpack://_N_E/./src/components/table/AGCell.js","webpack://_N_E/./src/hooks/useColumnDefs.js","webpack://_N_E/./src/hooks/useColumnPreference.js","webpack://_N_E/./src/utils/sql/columnStats.js","webpack://_N_E/./src/hooks/useColumnStats.js","webpack://_N_E/./src/hooks/useDrivedColumn.js","webpack://_N_E/./src/hooks/useFilters.js","webpack://_N_E/./src/hooks/useMUITheme.js","webpack://_N_E/./src/settings.schema.yaml","webpack://_N_E/./src/hooks/useSetting.js","webpack://_N_E/./src/store/rowDataSlice.js","webpack://_N_E/./src/utils/StringsUtils.js","webpack://_N_E/./src/utils/agGridUtils.js","webpack://_N_E/./src/utils/colors.js","webpack://_N_E/./src/utils/icons.js","webpack://_N_E/./src/utils/styles.js","webpack://_N_E/./src/utils/time.js","webpack://_N_E/./src/utils/typesUtils.js","webpack://_N_E/./src/utils/zIndex.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { updateDef } from '@/store/agColDefsSlice';\nimport { BooleanIconButton } from '@/components/elements/Controls';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport React from 'react';\n\nconst ColumnHideIcon = React.memo(({columnName, hide}) => {\n  const dispatch = useDispatch();\n  const isHidden = hide === true;\n\n\n  const toggleHide = () => {\n    dispatch(updateDef({field: columnName, name: 'hide', value: isHidden ? null : true}));\n  }\n\n\n  return (\n    <BooleanIconButton\n      iconOff={<VisibilityOffIcon />}\n      iconOn={<VisibilityIcon />}\n      tooltipOn=\"Show column\"\n      tooltipOff=\"Hide column\"\n      value={isHidden}\n      onClick={toggleHide}\n    />\n  );\n});\n\nColumnHideIcon.displayName = 'ColumnHideIcon';\n\nexport default ColumnHideIcon;","import { useDispatch } from 'react-redux';\nimport { updateDef } from '@/store/agColDefsSlice';\nimport PushPinOutlinedIcon from '@mui/icons-material/PushPinOutlined';\nimport PushPinIcon from '@mui/icons-material/PushPin';\nimport { IconDropdown } from '@/components/elements/IconDropdown';\nimport { MyIconButton } from '@/components/elements/Controls';\nimport React from 'react';\nimport { SX_TEXT_HOVER } from '@/utils/styles';\n\n\nconst PIN_ICONS = ({hide = false, pinned}) => {\n  const activeStyle = hide ? {\n    ...SX_TEXT_HOVER,\n    opacity: 0.5\n  } : {\n    color: 'primary.main',\n    '&:hover': {\n      color: 'primary.light'\n    }\n  };\n  const icons = {\n    left: <PushPinIcon sx={{transform: 'rotate(45deg)', ...activeStyle}}/>,\n    right: <PushPinIcon sx={{transform: 'rotate(-45deg)', ...activeStyle}}/>,\n    no: <PushPinOutlinedIcon />\n  };\n  return icons[pinned] || icons.no;\n}\n\nexport const ToggleColumnPinIcon = React.memo(({columnName, pinned, hide}) => {\n  const dispatch = useDispatch();\n\n  const icon = PIN_ICONS({hide, pinned});\n  const nextValue = {'left': 'right', 'right': 'no', 'no': 'left'}[pinned] || 'left';\n\n  const togglePin = () => {\n    dispatch(updateDef({field: columnName, name: 'pinned', value: nextValue}));\n  }\n\n  return <MyIconButton icon={icon} onClick={togglePin} disabled={hide}/>;\n});\n\n\nexport const DropdownColumnPinIcon = React.memo(({columnName, pinned}) => {\n  const dispatch = useDispatch();\n\n\n  const updatePin = (newPinned) => {\n    dispatch(updateDef({field: columnName, name: 'pinned', value: newPinned}));\n  }\n\n  const choices = [\n    {\n      icon: PIN_ICONS({pinned: 'left'}),\n      label: 'Pin to the left',\n      value: 'left'\n    },\n    {\n      icon: PIN_ICONS({pinned: 'no'}),\n      label: 'Do not pin',\n      value: 'no'\n    },\n    {\n      icon: PIN_ICONS({pinned: 'right'}),\n      label: 'Pin to the right',\n      value: 'right'\n    }\n  ]\n\n  return (\n    <IconDropdown\n      title=\"Pin to always visible?\"\n      choices={choices}\n      selectedValue={pinned || 'no'}\n      onChange={updatePin}\n    />\n  );\n});\n\nToggleColumnPinIcon.displayName = 'ToggleColumnPinIcon';\nDropdownColumnPinIcon.displayName = 'DropdownColumnPinIcon';\n","import _ from 'lodash';\nimport { useDispatch } from 'react-redux';\nimport { updateColumnPreference } from '@/store/columnPreferenceSlice';\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\nimport { setEqual } from '@/utils/helpers';\nimport { baselineColumnStatsSlice, filteredColumnStatsSlice } from '@/store/dataSlice';\nimport { IconDropdown } from '@/components/elements/IconDropdown';\nimport React from 'react';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { useSingleColumnPreference } from '@/hooks/useColumnPreference';\nimport { useSelector } from 'react-redux';\nimport { isMissing } from '@/utils/helpers';\nimport { useCardinality } from '@/hooks/useCardinality';\nimport { CircularProgress } from '@mui/material';\nimport { RENDER_TYPES } from '@/constants';\n\nimport { ICONS_FOR_RENDER_TYPE } from '@/configs/iconsForRenderType';\nimport useSetting from '@/hooks/useSetting';\n\n\nexport const RenderTypeIcon = React.memo(function RenderTypeIcon({ columnName }) {\n    const dispatch = useDispatch();\n    const meta = useSingleColumnMeta(columnName);\n    const pref = useSingleColumnPreference(columnName);\n    const {data: cardinalityData} = useCardinality(columnName) || {};\n    const { value: baseFontSize } = useSetting('baseFontSize');\n    const thresholdCategorical = useSelector(state => state.settings.thresholdCategorical);\n    if (isMissing(pref) || isMissing(meta) || isMissing(cardinalityData)) {\n        return <CircularProgress size={baseFontSize}/>;\n    }\n    const renderType = pref.renderType;\n    const canBeCategorical = cardinalityData?.cntD <= thresholdCategorical;\n    const getCandidates = () => {\n        if (meta.isDerived) {\n            return [pref.renderType];\n        } else if (meta.isNumeric) {\n            return [\n                RENDER_TYPES.NUMBER,\n                ...(canBeCategorical ? [RENDER_TYPES.CATEGORY] : []),\n            ];\n        } else if (meta.isString) {\n            return [\n                RENDER_TYPES.TEXT, RENDER_TYPES.IMAGE_URL, RENDER_TYPES.VIDEO_URL, RENDER_TYPES.JSON,\n                ...(canBeCategorical ? [RENDER_TYPES.CATEGORY] : []),\n            ];\n        } else if (meta.isBoolean) {\n            return [RENDER_TYPES.CATEGORY];\n        } else if (meta.isDatetime) {\n            return [RENDER_TYPES.TEXT];\n        } else if (!meta.isPrimitive) {\n            return [RENDER_TYPES.JSON];\n        } else {\n            return Object.keys(ICONS_FOR_RENDER_TYPE);\n        }\n    };\n\n\n\n    const choices = _.map(getCandidates(), candidate => ({\n        icon: ICONS_FOR_RENDER_TYPE[candidate] || <CircleOutlinedIcon/>,\n        label: candidate,\n        value: candidate\n    }));\n\n\n    const setRenderType = (newRenderType) => {\n        dispatch(updateColumnPreference({name: columnName, renderType: newRenderType}));\n\n        // Refresh stats if render type is changed between Category and Number\n        if (setEqual([renderType, newRenderType], [RENDER_TYPES.CATEGORY, RENDER_TYPES.NUMBER])) {\n            dispatch(baselineColumnStatsSlice.actions.setShouldRefresh({ name: columnName }));\n            dispatch(filteredColumnStatsSlice.actions.setShouldRefresh({ name: columnName }));\n        }\n\n    }\n\n\n    return (\n        <IconDropdown\n            title=\"Change render type\"\n            selectedValue={renderType}\n            choices={choices}\n            onChange={setRenderType}\n        />\n    );\n\n});\n\n\nexport default RenderTypeIcon;\n\n","import { IconButton } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSettings } from \"@/store/settingsSlice\";\nimport { SX_TEXT_HOVER } from \"@/utils/styles\";\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport LightModeOutlinedIcon from '@mui/icons-material/LightModeOutlined';\n\n\nexport const IconColorMode = React.memo(function IconColorMode() {\n    const dispatch = useDispatch();\n    const mode = useSelector(state => state.settings.mode);\n\n    const icon = mode === 'light' ? <LightModeOutlinedIcon/> : <DarkModeOutlinedIcon/>;\n\n    const handleClick = () => {\n        dispatch(updateSettings({mode: mode === 'light' ? 'dark' : 'light'}));\n\n    }\n\n    return (\n      <IconButton size=\"small\"\n        onClick={handleClick}\n        sx={{\n          ...SX_TEXT_HOVER\n        }}\n        >\n          {React.cloneElement(icon, {fontSize: 'small'})}\n        </IconButton>\n    );\n  });","import { IconButton } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSettings } from \"@/store/settingsSlice\";\nimport { SX_TEXT_HOVER } from \"@/utils/styles\";\nimport TextDecreaseOutlinedIcon from '@mui/icons-material/TextDecreaseOutlined';\nimport TextIncreaseOutlinedIcon from '@mui/icons-material/TextIncreaseOutlined';\n\nconst IconChangeFontSize = React.memo(function IconChangeFontSize({icon, change}) {\n    const dispatch = useDispatch();\n    const baseFontSize = useSelector(state => state.settings.baseFontSize);\n\n\n    const handleClick = () => {\n        const newFontSize = Math.min(Math.max(10, baseFontSize + change), 20);\n        dispatch(updateSettings({baseFontSize: newFontSize}));\n\n    }\n\n    return (\n      <IconButton size=\"small\"\n        onClick={handleClick}\n        sx={{\n          ...SX_TEXT_HOVER\n        }}\n        >\n          {React.cloneElement(icon, {fontSize: 'small'})}\n      </IconButton>\n    );\n});\n\nexport const IconFontSizeUp = React.memo(function IconFontSizeUp() {\n    return <IconChangeFontSize icon={<TextIncreaseOutlinedIcon/>} change={1} />;\n});\n\nexport const IconFontSizeDown = React.memo(function IconFontSizeDown() {\n    return <IconChangeFontSize icon={<TextDecreaseOutlinedIcon/>} change={-1} />;\n});","import { BottomIconCard } from '@/components/bottomBar/BottomIconCard';\nimport DataObjectOutlinedIcon from '@mui/icons-material/DataObjectOutlined';\nimport SliderInSettings from '@/components/settings/SliderInSettings';\n\nexport const BottomIconJsonViewingSettings = () => {\n    return (\n        <BottomIconCard title=\"Json viewing settings\" height={200} icon={<DataObjectOutlinedIcon/>}>\n            <SliderInSettings settingKey=\"jsonViewCollectionLimit\"/>\n\n        </BottomIconCard>\n    )\n  }","import { verify, etc } from '@noble/ed25519';\nimport { sha512 } from '@noble/hashes/sha2.js';\n\n// Set SHA-512 for ed25519\netc.sha512Sync = (...m) => sha512(etc.concatBytes(...m))\n\nfunction b64urlToBytes(b64url) {\n  try {\n    // 1. Replace URL-safe chars\n    let b64 = b64url.replace(/-/g, '+').replace(/_/g, '/')\n\n    // 2. Re-add padding if it’s missing\n    while (b64.length % 4) b64 += '='\n\n    // 3. Decode with atob → Uint8Array\n    const binary = atob(b64)\n    return Uint8Array.from(binary, ch => ch.charCodeAt(0))\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nfunction b64UrlToStr(b64url) {\n  return atob(b64url.replace(/-/g, '+').replace(/_/g, '/'));\n}\n\nexport const verifyLicense = async ({licenseKey}) => {\n  const actualDomain = window.location.hostname;\n  const invalidLicense = {domain: null, url_prefix: null, valid_until: null};\n\n  if (!licenseKey) {\n    return {errors: ['No license key'], license: invalidLicense};\n  }\n\n  if (['localhost', '127.0.0.1'].includes(actualDomain)) {\n    // No license check for localhost\n    return {errors: [], license: {\n      domain: actualDomain,\n      url_prefix: '*',\n      valid_until: '2099-01-01',\n    }};\n  }\n\n  const [signature, publicKey, messageCode] = licenseKey.split('|');\n  if (!signature || !publicKey || !messageCode) {\n    return {errors: ['Invalid license key'], license: invalidLicense};\n  }\n\n\n  const messageBytes = b64urlToBytes(messageCode);\n  const signatureBytes = b64urlToBytes(signature);\n  const publicKeyBytes = b64urlToBytes(publicKey);\n  if (!signatureBytes || !publicKeyBytes || !messageBytes) {\n    return {errors: ['Invalid license key'], license: invalidLicense};\n  }\n  const valid = await verify(signatureBytes, messageBytes, publicKeyBytes);\n  if (!valid) {\n    return {errors: ['The license key is invalid'], license: invalidLicense};\n  }\n\n  const {domain, url_prefix, valid_until} = JSON.parse(b64UrlToStr(messageCode));\n  const dateNow = new Date();\n  const validUntilDate = new Date(valid_until);\n\n  const errors = [];\n\n  if (domain !== actualDomain) {\n    errors.push(`Actual domain ${actualDomain} does not match the licensed domain ${domain}`);\n  }\n  if (dateNow > validUntilDate) {\n    errors.push(`License expired on ${valid_until}`);\n  }\n  if (!window.location.pathname.startsWith(url_prefix)) {\n    errors.push(`Actual url prefix ${window.location.pathname} does not match the licensed url prefix ${url_prefix}`);\n  }\n\n  return {errors, license: {domain, url_prefix, valid_until}};\n}\n","import { Box, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport React from \"react\";\nimport KeyIcon from '@mui/icons-material/Key';\nimport { BottomIconCard } from \"@/components/bottomBar/BottomIconCard\";\nimport { useState, useEffect } from \"react\";\nimport { MyButton } from \"@/components/elements/Controls\";\nimport { verifyLicense } from \"@/components/elements/license/verifyLicense\";\nimport _ from \"lodash\";\nimport { TitledList } from \"@/components/elements/displays\";\nimport { SectionHeader } from \"@/components/elements/displays\";\nimport useSetting from \"@/hooks/useSetting\";\nimport { isMissing } from \"@/utils/helpers\";\n\nconst LicenseInfo = ({license}) => {\n  const infoList = _.map(license, (value, key) => ({title: key, value: value || 'N/A'}));\n  return <TitledList items={infoList} />\n}\n\nexport const IconLicense = React.memo(function IconLicense() {\n    const { value: licenseKey } = useSetting('licenseKey');\n\n    const [open, setOpen] = useState(true);\n    const [errors, setErrors] = useState([]);\n    const [licenseFailed, setLicenseFailed] = useState(null);\n    const [license, setLicense] = useState({});\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n\n    useEffect(() => {\n\n      const performVerify = async () => {\n        const {errors, license} = await verifyLicense({licenseKey});\n        setErrors(errors);\n        setLicense(license);\n        setLicenseFailed(errors.length > 0);\n      }\n      if (isMissing(licenseFailed) && !isMissing(licenseKey)) {\n        performVerify();\n      }\n    }, [licenseFailed, licenseKey])\n\n    if (isMissing(licenseFailed) || isMissing(licenseKey)) {\n      return null;\n    } else if (errors.length === 0) {\n      return (\n        <BottomIconCard title=\"License\" icon={<KeyIcon/>} height={200}>\n          <Box sx={{display: 'flex', flexDirection: 'column', gap: 2, width: '100%', height: '100%'}}>\n            <LicenseInfo license={license} />\n          </Box>\n        </BottomIconCard>\n      )\n    } else {\n      return (\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle sx={{color: 'error.main'}}>\n            License is invalid\n          </DialogTitle>\n          <DialogContent>\n            <SectionHeader title=\"License granted to\" />\n            <LicenseInfo license={license} />\n\n            <SectionHeader title=\"Errors\" />\n              {errors.map((error, index) => (\n                <Typography key={index}>{error}</Typography>\n              ))}\n\n              <Typography sx={{my: 2, color: 'warning.light'}}>\n                For evaluation purpose, you can use <code>localhost</code> or <code>127.0.0.1</code> as the domain.\n              </Typography>\n          </DialogContent>\n          <DialogActions>\n            <MyButton onClick={handleClose}>\n              I will purchase license later\n            </MyButton>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n});","import { IconButton } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateSettings } from \"@/store/settingsSlice\";\nimport useSetting from \"@/hooks/useSetting\";\nimport BugReportOutlinedIcon from '@mui/icons-material/BugReportOutlined';\n\nexport const IconEnableDebugging = React.memo(function IconEnableDebugging() {\n    const dispatch = useDispatch();\n    const {value} = useSetting('enableDebugging');\n\n    const icon = <BugReportOutlinedIcon/>;\n\n    const handleClick = () => {\n        dispatch(updateSettings({enableDebugging: !value}));\n\n    }\n\n    return (\n      <IconButton size=\"small\"\n        onClick={handleClick}\n        sx={{\n          color: value ? 'primary.light' : 'text.secondary',\n          '&:hover': {\n              color: value ? 'primary.main' : 'text.primary',\n          }\n        }}\n        >\n          {React.cloneElement(icon, {fontSize: 'small'})}\n        </IconButton>\n    );\n  });","import { Box, Divider, Typography } from '@mui/material';\nimport React from 'react';\nimport { HEIGHT_BOTTOM_BAR } from '@/constants';\nimport { IconColorMode } from '@/components/settings/IconColorMode';\nimport { IconFontSizeUp, IconFontSizeDown } from '@/components/settings/IconFontSize';\nimport { BottomIconJsonViewingSettings } from '@/components/bottomBar/JsonViewingSettings';\nimport { SX_TEXT_HOVER } from '@/utils/styles';\nimport { MyTooltip } from '@/components/elements/displays';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { IconLicense } from '@/components/elements/license/IconLicense';\nimport { IconEnableDebugging } from '@/components/settings/IconEnableDebugging';\nimport { SENSE_TABLE_PAGE } from '@/constants';\nimport NextLink from 'next/link';\n\nexport const VerticalDivider = () => {\n    return <Divider orientation=\"vertical\" flexItem />;\n}\n\nexport const BottomSection = ({title, children}) => {\n    return (\n    <>\n        <VerticalDivider />\n        <Box sx={{\n            flex: 0, display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 0,\n        }}>\n            <Typography>{title}:</Typography>\n            {children}\n        </Box>\n    </>\n    )\n}\n\nexport const BottomStatus = ({k, v, maxWidth=200}) => {\n    const [copied, setCopied] = useState(false);\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(v);\n        setCopied(true);\n        setTimeout(() => {\n            setCopied(false);\n        }, 1000);\n    }\n    return (\n        <>\n            <VerticalDivider />\n            <Box sx={{...SX_TEXT_HOVER, display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 0.5}}>\n                <Typography>{k}:</Typography>\n                <MyTooltip title={copied ? 'Copied' : 'Click to copy to clipboard'}>\n                    <Typography\n                        className='truncate'\n                        sx={{cursor: 'pointer', maxWidth: maxWidth}}\n                        onClick={handleCopy}\n                    >\n                        {v}\n                    </Typography>\n                </MyTooltip>\n            </Box>\n\n        </>\n    )\n}\n\nconst BottomBarWrapper = React.memo(function BottomBarWrapper({children, settings}) {\n    const mode = useSelector(state => state.settings.mode);\n\n    const SectionSettings = () => {\n        return (\n            <BottomSection title=\"Settings\">\n                {settings}\n                <IconEnableDebugging />\n                <IconLicense />\n                <BottomIconJsonViewingSettings />\n                <IconFontSizeUp />\n                <IconFontSizeDown />\n                <IconColorMode />\n            </BottomSection>\n        )\n    }\n\n\n    return (\n        <Box sx={{\n            borderTop: '1px solid', borderColor: 'divider',\n            display: 'flex', flexDirection: 'row', alignItems: 'center',\n            justifyContent: 'space-between',\n            height: HEIGHT_BOTTOM_BAR,\n            px: 2, py: 0, gap: 1\n        }}>\n            <Box sx={{display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 0.5}}>\n                <NextLink href={SENSE_TABLE_PAGE} target=\"_blank\">\n                    <img src={`./SenseTable-${mode}.svg`} alt=\"SenseTable\" style={{minWidth: 100, height: 20}} />\n                </NextLink>\n\n            </Box>\n\n            {children}\n\n\n            <SectionSettings />\n\n        </Box>\n    );\n});\n\nexport default BottomBarWrapper;","import { Box, IconButton } from '@mui/material';\nimport React from 'react';\nimport ClickCard from '@/components/elements/ClickCard';\nimport { SX_TEXT_HOVER } from '@/utils/styles';\n\nexport const BottomIconCard = ({\n  title, children, icon, transformOriginHorizontal='right',\n   width=300, height=800, initMaximized=false, color='inherit'}) => {\n    const styledIcon = (\n        <IconButton size=\"small\" color={color} sx={color === 'inherit' ? SX_TEXT_HOVER: {}} >\n            {React.cloneElement(icon, {fontSize: 'small'})}\n        </IconButton>\n    );\n    return (\n      <Box sx={{flex: 0}}>\n        <ClickCard\n          trigger={styledIcon}\n          title={title}\n          tooltip={title}\n          height={height}\n          width={width}\n          initMaximized={initMaximized}\n          anchorVertical=\"top\"\n          anchorHorizontal=\"right\"\n          transformOriginVertical=\"bottom\"\n          transformOriginHorizontal={transformOriginHorizontal}\n          >\n            <Box sx={{display: 'flex', flexDirection: 'column', gap: 2, width: '100%', height: '100%'}}>\n              {children}\n            </Box>\n        </ClickCard>\n      </Box>\n    );\n  };\n\n\n\n","import { useSelector } from 'react-redux';\nimport { JsonBox } from '@/components/elements/JsonBox';\n\nconst InspectState = () => {\n  const state = useSelector((state) => state);\n\n  return (\n      <JsonBox obj={state} />\n  );\n};\n\nexport default InspectState;","import React from 'react';\nimport { proxyedUrl } from '@/utils/urls';\nimport NextLink from 'next/link';\nimport { Box, Typography } from '@mui/material';\nimport OpenInNewOutlinedIcon from '@mui/icons-material/OpenInNewOutlined';\nimport { MyIconButton } from '@/components/elements/Controls';\n\n\n\nexport const OpenUrlButton = React.memo(function OpenUrlButton({url}) {\n    return (\n        <NextLink href={url} target=\"_blank\" sx={{flex: 0}}>\n            <MyIconButton icon={<OpenInNewOutlinedIcon />} tooltip=\"Open in new tab\" />\n        </NextLink>\n    )\n})\n\nexport const AutoLink = React.memo(function AutoLink({url}) {\n    const proxyUrl = proxyedUrl(url);\n    return (\n      <Box sx={{display: 'flex', alignItems: 'center', gap: 0.5, maxWidth: '100%'}}>\n        <OpenUrlButton url={proxyUrl} />\n\n        <Typography variant=\"body2\" sx={{color: 'text.secondary', fontFamily: 'monospace'}} className=\"truncate\">\n        {url}\n        </Typography>\n\n\n      </Box>\n    );\n  });\n\n","import React from 'react';\nimport { AGGridResponsiveContainer } from '@/components/elements/displays';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useRef, useMemo, useCallback, useState } from 'react';\nimport useAGGridTheme from '@/hooks/useAGGridTheme';\nimport { Box } from '@mui/material';\nimport _ from 'lodash';\nimport { MiniJsonBox } from '@/components/elements/JsonBox';\n\nimport { AllCommunityModule, ModuleRegistry } from 'ag-grid-community';\nimport { isMissing } from '@/utils/helpers';\nimport { useEffect } from 'react';\n\nModuleRegistry.registerModules([AllCommunityModule]);\n\n\nexport const BasicTable = React.memo(function BasicTable({initRowData, overridingColDefs={}, overridingDefaultColDef={}, overridingGridOptions={}}) {\n    const agGridTheme = useAGGridTheme({});\n    const [rowData, setRowData] = useState([]);\n    const gridRef = useRef(null);\n\n    useEffect(() => {\n        setRowData([...initRowData]);\n    }, [initRowData]);\n\n    const defaultColDef = useMemo(() => ({\n        sortable: true,\n        resizable: true,\n        autoHeight: true,\n        maxWidth: 600,\n        minWidth: 50,\n        cellRenderer: (params) => {\n            if (!isMissing(params.value) && typeof params.value === 'object') {\n                return <MiniJsonBox obj={params.value} />;\n            }\n            return String(params.value);\n        },\n        ...overridingDefaultColDef,\n\n    }), [overridingDefaultColDef]);\n\n    const columnNames = useMemo(() => {\n        return _.union(...(rowData || []).map(item => _.keys(item)));\n    }, [rowData]);\n\n    const columnDefs = useMemo(() => {\n        return columnNames.map((columnName) => ({\n            field: columnName,\n            headerName: columnName,\n            ...(overridingColDefs[columnName] || {}),\n        }));\n    }, [columnNames, overridingColDefs]);\n\n    const onGridReady = useCallback((params) => {\n        params.api.sizeColumnsToFit();\n    }, []);\n\n\n    const handleGridSizeChanged = useCallback((params) => {\n        params.api.sizeColumnsToFit();\n    }, []);\n\n    const handleRowDataUpdated = useCallback((params) => {\n        params.api.sizeColumnsToFit();\n    }, []);\n\n\n\n    return (\n        <Box sx={{display: 'flex', flex: 1, flexDirection: 'column', height: '100%', width: '100%'}}>\n            <AGGridResponsiveContainer>\n                <AgGridReact\n                    domLayout='normal'\n                    ref={gridRef}\n                    theme={agGridTheme}\n                    rowData={rowData}\n                    columnDefs={columnDefs}\n                    onGridReady={onGridReady}\n                    onGridSizeChanged={handleGridSizeChanged}\n                    defaultColDef={defaultColDef}\n                    pagination={true}\n                    onRowDataUpdated={handleRowDataUpdated}\n                    {...overridingGridOptions}\n                />\n            </AGGridResponsiveContainer>\n        </Box>\n    );\n});\n","import { Box, Popover, Card, CardHeader, CardContent } from '@mui/material';\nimport { useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport OpenInFullIcon from '@mui/icons-material/OpenInFull';\nimport CloseFullscreenIcon from '@mui/icons-material/CloseFullscreen';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { MyTooltip } from '@/components/elements/displays';\nimport { MyIconButton } from '@/components/elements/Controls';\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nconst ClickCard = ({\n  trigger, tooltip = 'Click to open', children, title, width = 400, height = 300,\n  anchorVertical = 'bottom', anchorHorizontal = 'left', flex = 1,\n  transformOriginVertical = 'top', transformOriginHorizontal = 'left',\n  initMaximized = false,\n\n}) => {\n  const padding = 2;\n  const headerHeight = 60;\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isMaximized, setIsMaximized] = useState(initMaximized);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n    event.stopPropagation();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setAnchorEl(null);\n  };\n\n  const handleMaximizeToggle = () => {\n    setIsMaximized(!isMaximized);\n  };\n\n  const triggerElement = (\n  <Box onClick={handleClick} sx={{ cursor: 'pointer', flex: flex }}>\n    {trigger}\n  </Box>\n  );\n\n  const cardStyle = isMaximized ? {\n    width: '95vw',\n    height: '95vh',\n    margin: 0,\n    top: 0,\n    left: 0,\n    position: 'fixed',\n  } : {\n    width: width + padding * 2 * 8, height: height + padding * 2 * 8 + headerHeight\n  }\n\n  return (\n    <div style={{flex: flex, minWidth: 0}}>\n      {tooltip ? <MyTooltip title={tooltip}>{triggerElement}</MyTooltip> : triggerElement}\n\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: anchorVertical,\n          horizontal: anchorHorizontal,\n        }}\n        transformOrigin={{\n          vertical: transformOriginVertical,\n          horizontal: transformOriginHorizontal,\n        }}\n        slotProps={{\n          paper: {sx: cardStyle},\n        }}\n\n      >\n        <Card sx={{\n          width: '100%',\n          height: '100%',\n          boxShadow: 3, position: 'relative',\n          display: 'flex', flexDirection: 'column',\n          backgroundColor: 'background.card',\n          }}>\n          <CardHeader\n            title={title}\n            sx={{padding: padding, height: headerHeight}}\n            action={\n              <>\n                <MyIconButton icon={isMaximized ? <CloseFullscreenIcon /> : <OpenInFullIcon />} onClick={handleMaximizeToggle} />\n                <MyIconButton icon={<CloseIcon />} onClick={handleClose} />\n              </>\n            }\n          />\n          <CardContent sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flex: 1,\n            p: padding,\n            overflowY: 'auto',\n          }}>\n            {children}\n          </CardContent>\n        </Card>\n      </Popover>\n    </div>\n  );\n};\n\nClickCard.displayName = 'ClickCard';\n\nexport default ClickCard;\n\nexport const IconCard = ({title, children, icon, tooltip=null, iconSize='small', height=300}) => {\n  const styledIcon = <MyIconButton icon={icon} iconSize={iconSize} />;\n  return (\n    <Box sx={{flex: 0}}>\n      <ClickCard trigger={styledIcon} title={title} tooltip={tooltip} height={height}>\n        <Box sx={{display: 'flex', flexDirection: 'column', gap: 2}}>\n          {children}\n        </Box>\n      </ClickCard>\n    </Box>\n  );\n};\n\nIconCard.displayName = 'IconCard';\n\nexport const HelpCard = ({title, children}) => {\n  return (\n    <IconCard title={title} icon={<HelpOutlineIcon />} height={600}>\n      {children}\n    </IconCard>\n  );\n};\n\nHelpCard.displayName = 'HelpCard';\n\nexport const WarningCard = ({title, children}) => {\n  return (\n    <IconCard title={title} icon={<WarningAmberIcon sx={{color: 'warning.main'}} />}>\n      {children}\n    </IconCard>\n  );\n};\n\nWarningCard.displayName = 'WarningCard';\n\nexport const InfoCard = ({title, children}) => {\n  return (\n    <IconCard title={title} icon={<InfoOutlinedIcon />}>\n      {children}\n    </IconCard>\n  );\n};\n\nInfoCard.displayName = 'InfoCard';\n\nexport const SettingsCard = ({title, children, height=300}) => {\n  return (\n    <IconCard title={title} icon={<SettingsIcon />} height={height}>\n      {children}\n    </IconCard>\n  );\n};\n\nSettingsCard.displayName = 'SettingsCard';","import {\n  IconButton,\n  ButtonGroup, FormControlLabel,\n  Checkbox,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Slider,\n  Box,\n  Button, TextField,\n  Autocomplete\n} from '@mui/material';\nimport { zIndex } from '@/utils/zIndex';\nimport React from 'react';\nimport { MyTooltip } from '@/components/elements/displays';\nimport { SX_TEXT_HOVER } from '@/utils/styles';\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined';\nimport ContentPasteOutlinedIcon from '@mui/icons-material/ContentPasteOutlined';\nimport { useState } from 'react';\n\nexport const TooltipButton = React.memo(function TooltipButton({icon, title, onClick, placement=\"top\"}) {\n  return (\n    <MyTooltip title={title} placement={placement}>\n      <IconButton size=\"small\" onClick={onClick}>{icon}</IconButton>\n    </MyTooltip>\n  );\n});\n\nexport const BooleanIconButton = React.memo(function BooleanIconButton({\n  iconOn, iconOff, value, onClick,\n  tooltipOn=null, tooltipOff=null\n}) {\n\n  return (\n    <MyIconButton\n      icon={React.cloneElement((value ? iconOn : iconOff), {fontSize: 'small'})}\n      onClick={onClick}\n      tooltip={value ? tooltipOn : tooltipOff}\n      sx={{\n        color: value ? 'primary.main' : 'text.secondary',\n        '&:hover': {\n          color: value ? 'primary.light' : 'text.primary'\n        }\n      }}\n      >\n      </MyIconButton>\n  );\n});\n\n\nexport const MyIconButton = React.memo(function MyIconButton({icon, onClick=null, disabled=false, iconSize='small', tooltip=null, sx={}}) {\n  const styledIcon = React.cloneElement(icon || <CircleOutlinedIcon/>, {fontSize: iconSize});\n  const button = (\n    <IconButton size=\"small\" onClick={onClick} sx={{...SX_TEXT_HOVER, ...sx}} disabled={disabled}>\n      {styledIcon}\n    </IconButton>\n  );\n  if (tooltip) {\n    return <MyTooltip title={tooltip}>{button}</MyTooltip>\n  } else {\n    return button;\n  }\n});\n\nexport const MyButtonGroup = React.memo(function MyButtonGroup({children}) {\n  return (\n    <ButtonGroup variant=\"outlined\" size=\"small\" sx={{ p: 1, border: 1, borderColor: 'divider' }}>\n        {children}\n    </ButtonGroup>\n  );\n});\n\nexport const MyCheckbox = React.memo(function MyCheckbox({label, checked, onChange, disabled=false, maxWidth=200}) {\n    const cb = <Checkbox disabled={disabled} checked={checked} size=\"small\" onChange={(e) => onChange(e.target.checked)}/>;\n    const lb = (\n    <Typography\n      variant=\"body2\"\n      noWrap\n      sx={{\n        maxWidth: 200,\n        ...(disabled ? {color: 'text.tertiary'} : SX_TEXT_HOVER),\n        cursor: disabled ? 'not-allowed' : 'pointer',\n        userSelect: 'none',\n        WebkitUserSelect: 'none',\n        MozUserSelect: 'none',\n        msUserSelect: 'none',\n      }}\n      >\n        {label}\n      </Typography>\n  );\n    return <FormControlLabel control={cb} label={lb} sx={{width: '100%', maxWidth}}/>;\n});\n\n\n\nexport const MyDropdown = React.memo(function MyDropdown({options, value, onChange=null, label, width=null, myKey=null}) {\n    return  <FormControl size=\"small\" sx={{ width: width ? width : '100%'}}>\n    <InputLabel>{label}</InputLabel>\n    <Select\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      label={label}\n      MenuProps={{\n        sx: {\n          zIndex: zIndex.alwaysOnTop\n        }\n      }}\n    >\n      {options.map(option => (\n        <MenuItem key={myKey ? `${myKey}-${option}` : option} value={option}>{option}</MenuItem>\n      ))}\n    </Select>\n  </FormControl>;\n});\n\nexport const MyTypeaheadDropdown = React.memo(function MyTypeaheadDropdown({options, value, onChange, label, multiple = false}) {\n  return (\n    <Autocomplete\n        options={options}\n        value={value}\n        size=\"small\"\n        sx={{width: '100%'}}\n        multiple={multiple}\n        onChange={(event, newValue) => onChange(newValue)}\n        renderInput={(params) => <TextField {...params} label={label} size=\"small\" />}\n      />\n  );\n});\n\n\nexport const MySlider = React.memo(function MySlider({label, value, onChange, min, max, step=1, width=200}) {\n  return <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mt: 2, flex:1, width: '100%' }}>\n  <Typography variant=\"body2\" sx={{width: 100}}>{label}</Typography>\n    <Slider\n        value={value}\n        onChange={(e, newValue) => onChange(newValue)}\n        min={min}\n        max={max}\n        step={step}\n        size=\"small\"\n        valueLabelDisplay=\"auto\"\n        sx={{ width: width }}\n    />\n  </Box>\n\n});\n\n\nexport const MyTextField = React.memo(function MyTextField({\n  label, value, onValueChange, type='text', monospace=false, sx={}, color='text.primary'\n }) {\n  const onChange = (event) => {\n    onValueChange(event.target.value);\n  }\n  return <TextField\n            size='small'\n            type={type}\n            label={label}\n            variant='outlined'\n            value={value}\n            onChange={onChange}\n            slotProps={{input: {spellCheck: !monospace}}}\n            sx={{width: '100%', input: {fontFamily: monospace ? 'monospace' : 'inherit', color}, ...sx}}\n            />;\n});\n\nexport const MyNumberField = React.memo(function MyNumberField({label, value, onValueChange }) {\n  return <MyTextField label={label} value={value} onValueChange={onValueChange} type='number' />;\n});\n\nexport const MyButton = React.memo(function MyButton({\n  children, onClick, color='primary', variant='contained', size='small',\n  startIcon=null,\n}) {\n  return <Button\n            variant={variant}\n            size={size}\n            color={color}\n            onClick={onClick}\n            startIcon={startIcon}\n            sx={{textTransform: 'none', margin: 0.5, px: 1, py: 0.5, gap: 0.5, whiteSpace: 'nowrap'}}\n            >\n          {children}\n        </Button>;\n});\n\nexport const CopyToClipboardButton = React.memo(function CopyToClipboardButton({value}) {\n  const [copied, setCopied] = useState(false);\n  const handleCopy = () => {\n    navigator.clipboard.writeText(value);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  }\n  return (\n    <MyIconButton\n      icon={<ContentPasteOutlinedIcon />}\n      onClick={handleCopy}\n      tooltip={copied ? 'Copied!' : 'Copy to clipboard'}\n      iconSize=\"small\"\n    />\n  );\n});","import { Box, Popover, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport React from 'react';\nimport { MyIconButton } from '@/components/elements/Controls';\nimport _ from 'lodash';\nimport { isMissing } from '@/utils/helpers';\nimport { FormControlLabel, RadioGroup, Radio } from '@mui/material';\nimport { SX_TEXT_HOVER, SX_CARD } from '@/utils/styles';\n\nexport const IconDropdown = ({\n  title,\n  selectedValue, choices, onChange,\n}) => {\n\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  if (isMissing(selectedValue)) {\n    return null;\n  }\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setAnchorEl(null);\n  };\n\n  const handleClickRadio = (event) => {\n    onChange(event.target.value);\n    handleClose();\n  }\n  const iconLabel = (icon, label) => {\n    return <Box display=\"flex\" alignItems=\"center\" gap={1}>\n      { React.cloneElement(icon, {fontSize: 'small'})}\n      {label}\n    </Box>\n  };\n\n  const selectedIcon = _.find(choices, c => c.value === selectedValue)?.icon ;\n\n  const popoverContent = choices.length === 1 ? (\n    <Typography sx={{padding: 1}} variant=\"body2\">It can only be {choices[0].label}</Typography>\n  ) : (\n    <RadioGroup\n    value={selectedValue}\n    onChange={handleClickRadio}\n    >\n    {choices.map(({icon, label, value}) => (\n      <FormControlLabel\n      key={value}\n      value={value}\n      control={<Radio size=\"small\" />}\n      label={iconLabel(icon, label)}\n      sx={SX_TEXT_HOVER}\n      />\n    ))}\n    </RadioGroup>\n\n  )\n\n  return (\n    <Box>\n      <MyIconButton onClick={handleOpen} icon={selectedIcon}/>\n\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n      >\n        <Box sx={{...SX_CARD}}>\n            <Typography variant=\"h6\">{title}</Typography>\n            {popoverContent}\n        </Box>\n      </Popover>\n    </Box>\n  );\n};\n\n","'use client';\nimport { Box } from '@mui/material';\nimport { proxyedUrl } from '@/utils/urls';\nimport React from 'react';\nimport { AutoLink } from '@/components/elements/AutoLink';\n\n\nexport const ImageBox = React.memo(function ImageBox({url, size=500, cropSquare=false, showUrl=false}) {\n  const proxyUrl = proxyedUrl(url);\n  const imageStyle = cropSquare ? {\n    objectFit: 'cover', width: size, height: size\n  } : {\n    objectFit: 'contain', width: '100%', height: '100%'\n  };\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'column', gap: 1, maxWidth: size, maxHeight: size}}>\n      {showUrl && <AutoLink url={url} />}\n      <img src={proxyUrl} alt={url} style={imageStyle} />\n\n    </Box>\n  );\n});","\nimport { JSONTree } from 'react-json-tree';\nimport { Typography, Paper } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport CellRightClickCard from '@/components/table/rightClickMenu/CellRightClickCard';\nimport { Box } from '@mui/material';\nimport { CopyToClipboardButton, BooleanIconButton } from '@/components/elements/Controls';\nimport { useState } from 'react';\nimport TitleIcon from '@mui/icons-material/Title';\nimport SortByAlphaIcon from '@mui/icons-material/SortByAlpha';\n\nconst valueRenderer = (raw, value) => {\n  const type = typeof value === 'object' && value === null\n    ? 'null'\n    : Array.isArray(value)\n    ? 'array'\n    : typeof value;\n  return (\n    <span>\n      {raw} <span style={{ color: '#888', fontStyle: 'italic' }}>({type})</span>\n    </span>\n  );\n};\n\n\nexport const JsonBox = ({ obj }) => {\n  const jsonString = JSON.stringify(obj);\n  const [showType, setShowType] = useState(false);\n  const [sorted, setSorted] = useState(false);\n  const jsonViewCollectionLimit = useSelector(state => state.settings.jsonViewCollectionLimit) || 10;\n\n   return (\n    <Paper sx={{ p: 0, width: '100%', height: '100%', overflow: 'auto' }}>\n      <Box sx={{display: 'flex', flexDirection: 'row', gap: 1, alignItems: 'center'}}>\n        <CopyToClipboardButton value={jsonString} />\n        <BooleanIconButton\n          iconOn={<TitleIcon />}\n          iconOff={<TitleIcon />}\n          value={showType}\n          onClick={() => setShowType(!showType)}\n          tooltip=\"Show type\"\n        />\n        <BooleanIconButton\n          iconOn={<SortByAlphaIcon />}\n          iconOff={<SortByAlphaIcon />}\n          value={sorted}\n          onClick={() => setSorted(!sorted)}\n          tooltip=\"Sort keys\"\n        />\n\n      </Box>\n\n      <JSONTree\n          data={obj}\n          hideRoot={true}\n          collectionLimit={jsonViewCollectionLimit}\n          valueRenderer={showType ? valueRenderer : undefined}\n          sortObjectKeys={sorted}\n        />\n    </Paper>\n   );\n};\n\n\nexport const MiniJsonBox = ({ obj }) => {\n  const tableMaxRowHeight = useSelector(state => state.settings.tableMaxRowHeight);\n  if (!obj) {\n    return <Typography variant=\"body2\">{obj}</Typography>;\n  }\n\n\n  return (\n    <Box>\n      <Typography variant=\"body2\" color=\"inherit\" sx={{\n        overflow: 'hidden', maxHeight: tableMaxRowHeight, whiteSpace: 'normal',\n      }}>\n        {JSON.stringify(obj)}\n      </Typography>\n\n      <CellRightClickCard sx={{width: 400}}>\n        <JsonBox obj={obj} />\n        </CellRightClickCard>\n    </Box>\n  );\n};\n\n\n","import {\n    Table, TableBody, TableCell, TableContainer, TableRow,\n    Paper, Stack, Chip, Typography, Box\n} from '@mui/material'\nimport React from 'react';\nimport { SX_TEXT_HOVER } from '@/utils/styles';\n\nconst KeyChip = ({ label }) => (\n    <Chip\n    label={label}\n    size=\"small\"\n    sx={{\n        fontFamily: 'monospace',\n        borderRadius: '6px',\n        bgcolor: 'background.card',\n    }}\n    variant=\"outlined\"\n    />\n)\n\nexport const ShortcutRow = React.memo(function ShortcutRow({ keys, descriptions }) {\n    return (\n    <TableRow>\n        <TableCell sx={{width: '100px', textAlign: 'right'}}>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                {keys.map((key, i) => (\n                    <KeyChip key={i} label={key} />\n                ))}\n            </Stack>\n        </TableCell>\n        <TableCell>\n        <Box sx={{display: 'flex', flexDirection: 'column', gap: 1}}>\n            {descriptions.map((description, i) => (\n                <Typography key={i} variant=\"body2\" sx={{...SX_TEXT_HOVER}}>\n                    {description}\n                </Typography>\n            ))}\n        </Box>\n        </TableCell>\n    </TableRow>\n    )\n});\n\n\nexport const KeyboardShortcutsTable = React.memo(function KeyboardShortcutsTable({children}) {\n    return (\n        <TableContainer component={Paper}>\n        <Table>\n        <TableBody>\n            {children}\n        </TableBody>\n        </Table>\n        </TableContainer>\n    )\n});\n\nKeyboardShortcutsTable.displayName = 'KeyboardShortcutsTable';","import { Box } from '@mui/material';\n\nconst PanelControlsWrapper = ({children, sx}) => {\n    return (\n    <Box sx={{\n        width: '100%',\n        flex: 0,\n        p: 1,\n        marginTop: 1,\n\n        display: 'flex',\n        gap: 2,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        backgroundColor: 'background.paper',\n        ...sx\n    }}>\n        {children}\n    </Box>\n    )\n};\n\nexport default PanelControlsWrapper;","import { useSelector } from 'react-redux';\nimport ClickCard from '@/components/elements/ClickCard';\nimport { ReadOnlySQL } from '@/components/elements/displays';\nimport { timeAgo } from '@/utils/time';\nimport { Box, Typography } from '@mui/material';\nimport { TextWithAddon } from '@/components/elements/displays';\nimport React from 'react';\nimport { SQLIcon } from '@/utils/icons';\nimport StatusChip from '@/components/elements/StatusChip';\nimport { BasicTable } from '@/components/elements/BasicTable';\nimport { ChipList } from '@/components/elements/displays';\nimport { MyIconButton } from '@/components/elements/Controls';\n\nconst SqlCard = React.memo(({sqlKey}) => {\n    const sql = useSelector((state) => state.sql[sqlKey]);\n    if (!sql) {\n        return null;\n    };\n\n    const styledIcon = <MyIconButton icon={<SQLIcon/>} iconSize=\"medium\" />;\n\n    return (\n        <Box sx={{flex: 0, height: '100%'}}>\n            <ClickCard title={<TextWithAddon text={`SQL ${sqlKey}`} addon={<StatusChip status={sql.status}/>}/>} tooltip={null} trigger={styledIcon}>\n                <Box sx={{flex: 1, display: 'flex', flexDirection: 'column', gap: 1, height: '100%'}}>\n                    {sql.error && <Typography variant=\"body1\" color=\"error\">{sql.error}</Typography>}\n                    <ChipList items={[\n                        `Last updated: ${timeAgo(sql.lastUpdated)}`,\n                        `Runtime: ${sql?.runtime?.toFixed(5)} seconds`,\n                    ]} />\n                    <Box sx={{flex: 1, overflow: 'auto'}}>\n                        <ReadOnlySQL value={sql.query} />\n                    </Box>\n                    <Box sx={{flex: 1}}>\n                        <BasicTable initRowData={sql.data} />\n                    </Box>\n                </Box>\n            </ClickCard>\n        </Box>\n    );\n});\n\nSqlCard.displayName = 'SqlCard';\n\nexport default SqlCard;","import { Chip } from '@mui/material';\nimport React from 'react';\nimport { isMissing } from '@/utils/helpers';\n\nconst StatusChip = React.memo(function StatusChip({status}) {\n    if (isMissing(status)) {\n        return null;\n    } else {\n        const color = {\n            running: 'warning',\n            success: 'success',\n            error: 'error',\n        }[status] || 'default';\n\n        return <Chip label={status} size=\"small\" color={color} variant=\"outlined\"/>\n    }\n});\n\n\nexport default StatusChip;","import React from 'react';\nimport { Box } from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport useMUITheme from '@/hooks/useMUITheme';\n\nexport const FloatingRightContainer = React.memo(function FloatingRightContainer({children, sx}) {\n    const muiTheme = useMUITheme();\n    return (\n        <Box sx={{\n            position: 'absolute', right: 0, top: 0, display: 'flex', flexDirection: 'row', gap: 0,\n            backgroundColor: alpha(muiTheme.palette.background.card, 0.5),\n            height: '100%',\n            ...sx,\n        }}>\n            {children}\n        </Box>\n    )\n})\n\nexport const RowBoxes = React.memo(function RowBoxes({children}) {\n    const validChildren = React.Children.toArray(children).filter(child => {\n      if (typeof child === 'string') {\n        return child.trim().length > 0; // ignore pure whitespace strings\n      } else {\n        return true;\n      }\n    });\n\n    return (\n      <Box sx={{\n        flex: 1, width: '100%', height: '100%', minWidth: 0,\n        display: 'flex', flexDirection: 'row', gap: 1, alignItems: 'center'\n      }}>\n        {validChildren.map((child, index) => (\n          <Box key={index} sx={{flex: 1, minWidth: 0}}>\n            {child}\n          </Box>\n        ))}\n      </Box>\n    );\n  });\n\n\n","import { Chip, Box, Typography, Tooltip, List, ListItem, ListItemText } from '@mui/material';\nimport { sql } from '@codemirror/lang-sql';\nimport CodeMirror from '@uiw/react-codemirror';\nimport React from 'react';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { useSelector } from 'react-redux';\nimport NextLink from 'next/link';\nimport { proxyedUrl } from '@/utils/urls';\nimport ContentPasteOutlinedIcon from '@mui/icons-material/ContentPasteOutlined';\n\nexport const ChipList = React.memo(function ChipList({items}) {\n  return (\n  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, alignItems: 'center' }}>\n      {(items || []).map((item, index) => {\n        return (\n            <Chip\n              key={index}\n              label={item}\n              size=\"small\"\n              sx={{\n                border: '1px solid',\n                borderColor: 'divider',\n                '&:hover': {\n                  borderColor: 'text.secondary',\n                },\n              }}\n            />\n\n        );\n      })}\n  </Box>\n  );\n});\n\nexport const MyTooltip = React.memo(function MyTooltip({title, placement=\"top\", children}) {\n  const content = (\n    <Box>\n      <Typography variant=\"body2\" sx={{padding: 1,}}>{title}</Typography>\n    </Box>\n  );\n  return (\n    <Tooltip title={content} arrow placement={placement} enterDelay={300}>\n      {children}\n    </Tooltip>\n  );\n});\n\nexport const SectionHeader = React.memo(function SectionHeader({title}) {\n    return (\n    <Typography variant=\"h6\" sx={{mt: 2}} gutterBottom>\n        {title}\n    </Typography>\n    )\n});\n\nexport const TextSegments = React.memo(function TextSegments({variant='body2', segments}) {\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'row', gap: 1, alignItems: 'center'}}>\n      {segments.map((seg, index) => (\n        <Typography key={index} variant={variant} sx={seg.sx}>{seg.text}</Typography>\n      ))}\n    </Box>\n  )\n});\n\nexport const AGGridResponsiveContainer = React.memo(function AGGridResponsiveContainer({minWidth = 360, minHeight = 100, children}) {\n  return (\n    <Box sx={{ p: 0, minWidth, minHeight, display: 'flex', flex: 1, position: 'relative' }}>\n      <Box sx={{ width: '100%', height: '100%', flex: 1 }}>\n        {children}\n      </Box>\n    </Box>\n  );\n});\n\nexport const TextWithAddon = React.memo(function TextWithAddon({text, addon}) {\n  return (\n    <Box sx={{display: 'flex', alignItems: 'center', gap: 1}}>\n      <Typography fontSize='inherit'>{text}</Typography>\n      {addon}\n    </Box>\n  );\n});\n\nexport const MiniParagraph = React.memo(function MiniParagraph({text}) {\n  return (\n    <Typography variant=\"body2\" sx={{mb: 1}}>{text}</Typography>\n  );\n});\n\n\nexport const ReadOnlySQL = React.memo(function ReadOnlySQL({value}) {\n  const theme = useSelector((state) => state.settings.mode);\n  return (\n    <CodeMirror\n      value={value}\n      extensions={[sql()]}\n      editable={false}\n      theme={theme === 'dark' ? oneDark : 'light'}\n      basicSetup={{\n        lineNumbers: false,\n        foldGutter: true,\n      }}\n    />\n  );\n});\n\nexport const TitledList = React.memo(function TitledList({ items }) {\n  return (\n    <List>\n      {items.map((item, index) => (\n        <ListItem key={index}>\n          <ListItemText primary={item.title} secondary={item.value}  />\n        </ListItem>\n      ))}\n    </List>\n  );\n});\n\nexport const TitledTextList = React.memo(function TitledTextList({dict}) {\n  const items = _.map(dict, (value, key) => ({title: key, value}));\n  return <TitledList items={items} />\n});\n\n\n\n\n\nexport const BorderedBox = React.memo(function BorderedBox({sx, children}) {\n  return (\n    <Box sx={{border: '1px solid', borderColor: 'divider', borderRadius: 1, padding: 1, ...sx}}>\n      {children}\n    </Box>\n  );\n});\n\nexport const MiddleText = React.memo(function MiddleText({text}) {\n  return (\n    <Typography variant=\"body1\" sx={{\n      display: 'flex', color: 'inherit', alignItems: 'center',\n      justifyContent: 'center', width: '100%', height: '100%',\n      padding: 1,\n      textAlign: 'center'}}>\n      {text}\n    </Typography>\n  )\n});\n\n\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { parseFilterItem } from '@/utils/sql/parseFilterItem';\nimport { ReadOnlySQL, SectionHeader } from '@/components/elements/displays';\nimport { map, size } from 'lodash';\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\nimport ClickCard from '@/components/elements/ClickCard';\nimport useFilters from '@/hooks/useFilters';\n\n\n\nconst FiltersArrow = () => {\n  const { filters, extraFilter, hasFilters } = useFilters();\n\n\n  const details = (\n    <>\n      <SectionHeader title={`${size(filters)} columns with filters`}/>\n      {map(filters, (ft, columnName) => (\n        <Box key={columnName}>\n          <ReadOnlySQL value={parseFilterItem(columnName, ft)}/>\n        </Box>\n      ))}\n\n      <SectionHeader title=\"Extra filter\"/>\n      <Box>\n        <ReadOnlySQL value={extraFilter}/>\n      </Box>\n\n    </>\n  );\n\n  return (\n    <ClickCard trigger={<ArrowRightAltIcon />} title=\"Filters\" tooltip='Filters'>\n      {details}\n    </ClickCard>\n  );\n};\n\nexport default FiltersArrow;","import { Box } from '@mui/material';\nimport FiltersArrow from './FiltersArrow';\nimport useFilters from '@/hooks/useFilters';\nimport { stringToColor } from '@/utils/colors';\nimport React from 'react';\n\n\nexport const FilteredCount = React.memo(({countBaseline, countFiltered, label, addColor = false, isPercentage = false}) => {\n    const {backgroundColor} = stringToColor(label);\n    const { hasFilters } = useFilters();\n    const colorBox = addColor ? <Box sx={{width: 15, height: 15, backgroundColor}} /> : null;\n    const showArrow = hasFilters && countBaseline !== countFiltered;\n\n    return (\n    <Box sx={{display: 'flex', alignItems: 'center', gap: 0.5}}>\n        {colorBox}\n        <Box>{label}: </Box>\n        <Box sx={{color: 'text.secondary', display: 'flex', alignItems: 'center', gap: 0.5, mr: 1}}>\n            {showArrow && <Box>{countBaseline.toLocaleString()}{isPercentage ? '%' : ''}</Box>}\n            {showArrow && <Box><FiltersArrow /></Box>}\n            <Box>{countFiltered?.toLocaleString()}{isPercentage ? '%' : ''}</Box>\n        </Box>\n    </Box>\n    );\n\n});\n\nFilteredCount.displayName = 'FilteredCount';","import React from 'react';\nimport NextLink from 'next/link';\nimport { MyIconButton } from '@/components/elements/Controls';\nimport OpenInNewOutlinedIcon from '@mui/icons-material/OpenInNewOutlined';\nimport { ROUTES } from '@/constants';\nimport path from 'path-browserify';\nimport { useSelector } from 'react-redux';\nimport { isMissing } from '@/utils/helpers';\nimport { useDispatch } from 'react-redux';\nimport { updateChildren } from '@/store/folderBrowserSlice';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { pathJoin } from '@/store/folderBrowserSlice';\n\nexport const OpenFolderInNewTabButton = React.memo(function OpenFolderInNewTabButton({itemId}) {\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n    if (isMissing(rootFolder)) {\n        return null;\n    }\n    return (\n        <NextLink href={`/${ROUTES.FolderBrowser}?rootFolder=${pathJoin(rootFolder, itemId)}`} target=\"_blank\">\n            <MyIconButton icon={<OpenInNewOutlinedIcon />} tooltip=\"Open in new tab\" />\n        </NextLink>\n    )\n})\n\nexport const OpenTableInNewTabButton = React.memo(function OpenTableInNewTabButton({itemId}) {\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n    const fullPath = pathJoin(rootFolder, itemId);\n    const ext = path.extname(itemId);\n    const format = ext.replace('.', '');\n    const url = `/${ROUTES.Table}?filePath=${fullPath}&fileFormat=${format}`;\n    if (isMissing(rootFolder)) {\n        return null;\n    } else if (['csv', 'parquet'].includes(format)) {\n        return (\n            <NextLink href={url} target=\"_blank\">\n                <MyIconButton icon={<OpenInNewOutlinedIcon />} tooltip=\"Open in new tab\" />\n            </NextLink>\n        )\n    } else {\n        return null;\n    }\n})\n\nexport const RefreshFolderButton = React.memo(function RefreshFolderButton({itemId}) {\n    const dispatch = useDispatch();\n    const refreshChildren = () => {\n        dispatch(updateChildren(itemId, true));\n    }\n    return (\n        <MyIconButton icon={<RefreshIcon />} onClick={refreshChildren} tooltip=\"Refresh\" />\n    )\n})\n","import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Typography from '@mui/material/Typography';\nimport { TreeItem } from '@mui/x-tree-view/TreeItem';\nimport FolderOutlinedIcon from '@mui/icons-material/FolderOutlined';\nimport { timeAgo, formatTime } from '@/utils/time';\nimport { filesize } from 'filesize';\nimport { isMissing } from '@/utils/helpers';\nimport { SX_TEXT_HOVER, SX_WIDTH_100 } from '@/utils/styles';\nimport { useTreeItemModel } from '@mui/x-tree-view/hooks';\nimport { toggleItemExpansion } from '@/store/folderBrowserSlice';\nimport { OpenFolderInNewTabButton, OpenTableInNewTabButton } from '@/components/folderBrowser/elements';\nimport { RefreshFolderButton } from '@/components/folderBrowser/elements';\nimport { FloatingRightContainer } from '@/components/elements/containers';\n\nconst CustomLabel = React.memo(function CustomLabel({ children, className, isDir, lastModified, size, itemId }) {\n    const showFileInfo = useSelector(state => state.settings.folderNavigationShowFileInfo);\n    const [isHovered, setIsHovered] = useState(false);\n\n    const getFileInfo = () => {\n        switch (showFileInfo) {\n            case 'size':\n                return isMissing(size) ? '' : filesize(size);\n            case 'lastModifiedRelative':\n                return timeAgo(lastModified);\n            case 'lastModifiedDateTime':\n                return formatTime(lastModified);\n            case 'none':\n                return '';\n            default:\n                return '';\n        }\n    }\n\n    const makeContent = () => {\n\n        return isDir ? (\n            <>\n                <FolderOutlinedIcon fontSize=\"small\"/>\n                <Typography className='truncate'>\n                    {children}\n                </Typography>\n                <FloatingRightContainer>\n                    {isHovered && <OpenFolderInNewTabButton itemId={itemId} />}\n                    {isHovered && <RefreshFolderButton itemId={itemId} />}\n                </FloatingRightContainer>\n            </>\n        ) : (\n            <>\n               <Typography className='truncate'>\n                    {children}\n                </Typography>\n                <Box sx={{flexGrow: 1}}></Box>\n                <Typography color=\"text.tertiary\" className='truncate' sx={{minWidth: '60px'}}>\n                    {getFileInfo()}\n                </Typography>\n                <FloatingRightContainer>\n                    {isHovered && <OpenTableInNewTabButton itemId={itemId} />}\n                </FloatingRightContainer>\n            </>\n        )\n    }\n\n    return (\n      <Box className={className} sx={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: 0.5,\n        cursor: 'pointer',\n        ...SX_TEXT_HOVER, ...SX_WIDTH_100,\n      }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      >\n        {makeContent()}\n      </Box>\n    );\n  });\n\nexport const CustomTreeItem = React.forwardRef(function CustomTreeItem(props, ref) {\n    const item = useTreeItemModel(props.itemId);\n    const dispatch = useDispatch();\n\n    const handleDoubleClick = (e) => {\n        e.stopPropagation();\n        if (item.isDir) {\n            dispatch(toggleItemExpansion(item.id));\n        }\n    }\n\n    return (\n        <TreeItem\n            {...props}\n            ref={ref}\n            className=\"select-none\"\n            slots={{\n                label: CustomLabel,\n            }}\n            onDoubleClick={handleDoubleClick}\n            slotProps={{\n                label: {\n                    isDir: item.isDir,\n                    lastModified: item.lastModified,\n                    size: item.size,\n                    itemId: item.id,\n                },\n            }}\n\n        />\n    );\n});\n","import React from 'react';\nimport { Breadcrumbs, Link, Typography } from '@mui/material';\nimport path from 'path-browserify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setViewingItemId } from '@/store/folderBrowserSlice';\nimport { Box } from '@mui/material';\nimport { SX_TEXT_HOVER, SX_WIDTH_100, SX_BORDER } from '@/utils/styles';\n\nexport const BreadCrumbLink = ({onClick, label}) => {\n    return (\n        <Link sx={{cursor: 'pointer', ...SX_TEXT_HOVER}} onClick={onClick} underline='hover'>\n            <Typography className='truncate'>\n                {label}\n            </Typography>\n        </Link>\n    )\n}\n\nconst BreadCrumbsNav = React.memo(function BreadCrumbsNav({id, isDir=false}) {\n    const dispatch = useDispatch();\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n    const segments = id.split(path.sep);\n\n    return (\n        <Box sx={{\n            display: 'flex', flexDirection: 'row', gap: 1, alignItems: 'center',\n            ...SX_WIDTH_100, backgroundColor: 'background.card', p: 1, ...SX_BORDER,\n        }}>\n            <Breadcrumbs sx={{\n                ...SX_TEXT_HOVER,\n                ...SX_WIDTH_100,\n            }}>\n                <BreadCrumbLink onClick={() => dispatch(setViewingItemId(''))} label={path.basename(rootFolder)} />\n                {segments.map((segment, index) => {\n                    const isLast = index === segments.length - 1;\n                    return (\n                    <Link\n                        key={index}\n                        underline={isLast ? 'none' : 'hover'}\n                        sx={{cursor: isLast ? 'default' : 'pointer', ...SX_WIDTH_100, ...(isLast ? {color: 'text.primary'} : SX_TEXT_HOVER)}}\n                        onClick={() => {\n                            if (!isLast) {\n                                dispatch(setViewingItemId(segments.slice(0, index + 1).join(path.sep)));\n                            }\n                        }}\n                    >\n                        <Typography className='truncate'>\n                            {segment}\n                        </Typography>\n                    </Link>\n                    );\n                })}\n            </Breadcrumbs>\n\n        </Box>\n    );\n});\n\nexport default BreadCrumbsNav;","import React from 'react';\nimport { Box } from '@mui/material';\nimport PanelControlsWrapper from '@/components/elements/PanelControlsWrapper';\nimport { HelpCard } from '@/components/elements/ClickCard';\nimport { SectionHeader } from '@/components/elements/displays';\nimport { KeyboardShortcutsTable, ShortcutRow } from '@/components/elements/KeyboardShortcutsTable';\nimport EastOutlinedIcon from '@mui/icons-material/EastOutlined';\nimport NorthOutlinedIcon from '@mui/icons-material/NorthOutlined';\nimport WestOutlinedIcon from '@mui/icons-material/WestOutlined';\nimport SouthOutlinedIcon from '@mui/icons-material/SouthOutlined';\nimport DropdownInSettings from '@/components/settings/DropdownInSettings';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CheckboxInSettings from '@/components/settings/CheckboxInSettings';\nimport { updateChildren, setExpandedItems } from '@/store/folderBrowserSlice';\n\nconst FolderNavHelpCard = React.memo(function FolderNavHelpCard({}) {\n\n    return (\n        <HelpCard title=\"Folder Navigation Help\">\n            <SectionHeader title=\"Keyboard Shortcuts\" />\n            <KeyboardShortcutsTable>\n                <ShortcutRow\n                    keys={[<NorthOutlinedIcon key=\"north\"/>]}\n                    descriptions={['Move to the previous item in the list.']}\n                />\n                <ShortcutRow\n                    keys={[<SouthOutlinedIcon key=\"south\"/>]}\n                    descriptions={['Move to preview the next item in the list.']}\n                />\n                <ShortcutRow\n                    keys={[<WestOutlinedIcon key=\"west\"/>]}\n                    descriptions={[\n                        'If you are viewing a file, it will change focus to its parent folder.',\n                        'If you are viewing a folder, it will collapse the folder view.'\n                    ]}\n                />\n                <ShortcutRow\n                    keys={[<EastOutlinedIcon key=\"east\"/>]}\n                    descriptions={['If you are viewing a folder, it will expand the folder and change focus to its child.']}\n                />\n            </KeyboardShortcutsTable>\n        </HelpCard>\n    );\n});\n\nexport const FolderNavControls = React.memo(function FolderNavControls({}) {\n    const dispatch = useDispatch();\n    const viewingItemId = useSelector(state => state.folderBrowser.viewingItemId);\n\n    const onShowHiddenChange = (value) => {\n        dispatch(updateChildren(''));\n        dispatch(updateChildren(viewingItemId));\n        dispatch(setExpandedItems([]));\n    }\n    return (\n        <PanelControlsWrapper>\n            <FolderNavHelpCard />\n            <Box sx={{flex: 1}} >\n                <DropdownInSettings settingKey=\"folderNavigationShowFileInfo\" shortLabel=\"Show info\" />\n            </Box>\n            <Box sx={{flex: 0}}>\n            <CheckboxInSettings\n                settingKey=\"folderBrowserShowHiddenFiles\"\n                shortLabel=\"Show hidden files\"\n                extraChange={onShowHiddenChange}\n            />\n            </Box>\n\n\n\n        </PanelControlsWrapper>\n    );\n});","import React from 'react';\nimport { Box, Breadcrumbs, CircularProgress } from '@mui/material';\nimport { RichTreeView } from '@mui/x-tree-view/RichTreeView';\nimport { useTreeViewApiRef } from '@mui/x-tree-view/hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateChildren, locateItem, pathBasename, pathDirname } from '@/store/folderBrowserSlice';\nimport { useEffect } from 'react';\nimport { setViewingItemId, setExpandedItems } from '@/store/folderBrowserSlice';\nimport { CustomTreeItem } from '@/components/folderBrowser/CustomTreeItem';\nimport path from 'path';\nimport { SX_TEXT_HOVER, SX_WIDTH_100, SX_BORDER } from '@/utils/styles';\nimport { BreadCrumbLink } from '@/components/folderBrowser/BreadCumbsNav';\nimport { FolderNavControls } from '@/components/folderBrowser/FolderNavControls';\nimport { updateSettings } from '@/store/settingsSlice';\nimport { useInitSettings } from '@/hooks/useApiData';\nimport { isMissing } from '@/utils/helpers';\n\nconst FolderNav = React.memo(function FolderNav({}) {\n    const dispatch = useDispatch();\n    useInitSettings();\n    const expandedItems = useSelector(state => state.folderBrowser.expandedItems);\n    const apiRef = useTreeViewApiRef();\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n    const treeData = useSelector(state => state.folderBrowser.treeData);\n    const viewingItemId = useSelector(state => state.folderBrowser.viewingItemId);\n\n    useEffect(() => {\n        if (viewingItemId && apiRef.current) {\n            //apiRef.current.setItemExpansion({itemId: viewingItemId, shouldBeExpanded: true});\n            apiRef.current.setItemSelection({itemId: viewingItemId, keepExistingSelection: false, shouldBeSelected: true});\n        }\n    }, [viewingItemId, apiRef]);\n\n    if (isMissing(rootFolder)) {\n        return <CircularProgress/>;\n    }\n\n    const rootParent = pathDirname(rootFolder);\n\n\n    const goToRootParent = () => {\n        dispatch(updateSettings({folderBrowserRootFolder: rootParent}));\n        dispatch(updateChildren(''));\n        dispatch(setViewingItemId(''));\n        dispatch(setExpandedItems([]));\n    }\n\n    const viewItem = (itemId) => {\n        const item = locateItem(treeData, itemId);\n        if (item.isDir) {\n            dispatch(updateChildren(itemId));\n        }\n        dispatch(setViewingItemId(itemId));\n    }\n\n    const onItemClick = (event, itemId) => {\n        viewItem(itemId);\n    }\n\n    const onItemExpansionToggle = (event, itemId, isExpanded) => {\n        if (isExpanded) {\n            dispatch(updateChildren(itemId));\n        }\n        if (event) {\n            event.stopPropagation();\n        }\n    }\n    const onItemSelectionToggle = (event, itemId, isSelected) => {\n        if (isSelected) {\n            viewItem(itemId);\n        }\n\n      };\n\n    const onItemFocus = (event, itemId) => {\n        viewItem(itemId);\n    }\n\n    return (\n        <Box sx={{\n            display: 'flex', flexDirection: 'column',\n            height: '100%', gap: 1,\n            backgroundColor: 'background.paper'\n        }}>\n            <FolderNavControls />\n            <Box sx={{\n                flex: 0, display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 1, p: 1,\n                mx: 1, ...SX_BORDER,\n                backgroundColor: 'background.card',\n\n                }}>\n\n                <Breadcrumbs sx={{...SX_TEXT_HOVER, ...SX_WIDTH_100}}>\n                    {rootParent !== '.' && (\n                        <BreadCrumbLink onClick={goToRootParent} label={pathBasename(rootParent)} />\n                    )}\n\n                    <BreadCrumbLink onClick={() => dispatch(setViewingItemId(''))} label={pathBasename(rootFolder)} />\n                </Breadcrumbs>\n\n            </Box>\n\n            <Box sx={{\n                flex: 1, overflow: 'auto', backgroundColor: 'background.card',\n                m: 1, borderRadius: 1, border: '1px solid', borderColor: 'divider'\n            }}>\n\n                <RichTreeView\n                    apiRef={apiRef}\n                    items={treeData}\n                    expandedItems={expandedItems}\n                    onExpandedItemsChange={(event, nodeIds) => {\n                        dispatch(setExpandedItems(nodeIds));\n                    }}\n                    onItemClick={onItemClick}\n                    expansionTrigger=\"iconContainer\"\n                    onItemExpansionToggle={onItemExpansionToggle}\n                    onItemSelectionToggle={onItemSelectionToggle}\n                    onItemFocus={onItemFocus}\n                    slots={{ item: CustomTreeItem }}\n                />\n            </Box>\n\n        </Box>\n    );\n});\n\n\nexport default FolderNav;","import React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { getFileUrl } from '@/utils/urls';\nimport { pathBasename } from '@/store/folderBrowserSlice';\n\nconst ViewAlbum = React.memo(function ViewAlbum({photoList}) {\n  const imageSize = useSelector(state => state.settings.folderBrowserImageSize);\n  const cropSquare = useSelector(state => state.settings.folderBrowserImageCropSquare);\n\n    if (!photoList) {\n        return null;\n    }\n\n    return (\n      <Box sx={{display: 'flex', flexDirection: 'column', gap: 2}}>\n\n      <Box sx={{\n        display: 'flex', flexWrap: 'wrap', gap: 0.5, flex: 1,\n        alignItems: 'flex-start'\n      }} >\n        {photoList.map((src, i) => (\n          <Box\n            key={i}\n            sx={{position: 'relative', height: imageSize, display: 'inline-block'}}\n          >\n          <Box\n            component=\"img\"\n            src={getFileUrl(src)}\n            alt={pathBasename(src)}\n            loading=\"lazy\"\n            sx={{\n              height: imageSize,\n              width: cropSquare ? imageSize : 'auto',\n              objectFit: cropSquare ? 'cover' : 'contain'\n            }}\n          />\n\n            <Box\n              sx={{\n                position: 'absolute', bottom: 0, color: 'text.primary',\n                backgroundColor: 'rgba(0, 0, 0, 0.5)', width: '100%', padding: 0.5,\n              }}\n            >\n              <Typography variant=\"body2\" className='truncate'>\n                  {pathBasename(src)}\n              </Typography>\n            </Box>\n\n        </Box>\n        ))}\n      </Box>\n      </Box>\n    );\n});\n\nexport default ViewAlbum;","import React from 'react';\nimport _ from 'lodash';\nimport path from 'path-browserify';\nimport { ChipList } from '@/components/elements/displays';\nimport { TextSegments } from '@/components/elements/displays';\n\nconst ChildrenStats = React.memo(function ChildrenStats({items}) {\n    const countFolder = _(items).filter('isDir').size();\n    const countFiles = _(items).filter(['isDir', false]).countBy(it => path.extname(it.id)).value();\n    const records = Object.entries({\n        ...(countFolder > 0 ? {folder: countFolder} : {}),\n        ...countFiles\n    });\n\n\n    return (\n        <ChipList items={records.map(([key, value]) => (\n            <TextSegments key={key} variant=\"body2\" segments={[\n                {text: key === 'folder' ? 'Subfolders' : `*${key}`, sx: {fontFamily: 'monospace'}},\n                {text: `x ${value.toLocaleString()}`, sx: {color: 'text.secondary'}},\n            ]} />\n        ))} />\n    );\n});\n\nexport default ChildrenStats;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, ImageList, ImageListItem, Button, Typography } from '@mui/material';\nimport { updateChildren, pathJoin } from '@/store/folderBrowserSlice';\nimport { useEffect } from 'react';\nimport ChildrenStats from '@/components/folderBrowser/folderViewers/ChildrenStats';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { locateItem, toggleItemExpansion } from '@/store/folderBrowserSlice';\nimport { isImage } from '@/utils/typesUtils';\nimport _ from 'lodash';\nimport { setViewingItemId } from '@/store/folderBrowserSlice';\nimport { SX_TEXT_HOVER, SX_WIDTH_100, SX_BORDER } from '@/utils/styles';\nimport { getFileUrl } from '@/utils/urls';\nimport { pathBasename } from '@/store/folderBrowserSlice';\n\nconst FolderPeekItem = React.memo(function FolderPeekItem({id}) {\n    const dispatch = useDispatch();\n    const items = useSelector(createSelector([\n        state => state.folderBrowser.treeData,\n    ], (treeData) => {\n        return locateItem(treeData, id).children;\n    }));\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n    const peekIntoSubfolders = useSelector(state => state.settings.folderBrowserPeekIntoSubfolders);\n\n\n    useEffect(() => {\n        dispatch(updateChildren(id));\n    }, [id, dispatch]);\n\n    switch (peekIntoSubfolders) {\n        case 'none':\n            return null;\n        case 'count_by_extension':\n            return (\n                <Box sx={{width: '100%'}}>\n                    <ChildrenStats items={items} />\n                </Box>\n            );\n        case 'images':\n            const imageList = items.filter(it => isImage(it.id)).map(it => pathJoin(rootFolder, it.id));\n            const imageSamples = imageList.slice(0, 4);\n            if (_.isEmpty(imageSamples)) {\n                return null;\n            }\n            return (\n                <ImageList\n                    sx={{width: '100%', overflow: 'hidden'}}\n                    cols={2}\n                >\n                    {imageSamples.map(it => <ImageListItem key={it}>\n                        <img src={getFileUrl(it)}\n                             style={{width: '100%', aspectRatio: '1 / 1', objectFit: 'cover'}}\n                             alt={pathBasename(it)} />\n                    </ImageListItem>)}\n                </ImageList>\n            );\n    }\n});\n\nconst FolderCardItem = React.memo(function FolderCardItem({id}) {\n    const dispatch = useDispatch();\n    const peekIntoSubfolders = useSelector(state => state.settings.folderBrowserPeekIntoSubfolders);\n    const onFolderClick = () => {\n        dispatch(setViewingItemId(id));\n        dispatch(toggleItemExpansion(id));\n    }\n    return (\n        <Box sx={{\n            display: 'flex', flexDirection: 'column', gap: 1, alignItems: 'left',\n            ...SX_BORDER, padding: 1,\n            ...SX_WIDTH_100,\n            backgroundColor: 'background.card',\n        }}>\n            <Button\n              variant=\"text\"\n              sx={{ textTransform: 'none', ...SX_TEXT_HOVER, justifyContent: 'flex-start' }}\n              onClick={onFolderClick}>\n                <Typography className='truncate'>\n                    {pathBasename(id)}\n                </Typography>\n            </Button>\n            {peekIntoSubfolders !== 'none' && <FolderPeekItem id={id} />}\n        </Box>\n    );\n})\n\nconst FolderPeek = React.memo(function FolderPeek({items}) {\n    return (\n        <Box sx={{\n            columnCount: 4,\n            columnGap: 1,\n            rowGap: 1,\n\n        }}>\n            {items.filter(it => it.isDir).map(it => (\n                <Box key={it.id} sx={{\n                    display: 'grid', gridTemplateRows: '1fr auto', breakInside: 'avoid', marginBottom: 1,\n                    ...SX_WIDTH_100,\n                }}>\n                    <FolderCardItem key={it.id} id={it.id} />\n                </Box>\n            ))}\n        </Box>\n    )\n});\n\nexport default FolderPeek;","import React from 'react';\nimport { Box } from '@mui/material';\nimport ViewAlbum from '@/components/folderBrowser/folderViewers/ViewAlbum';\nimport _ from 'lodash';\nimport path from 'path-browserify';\nimport { imageExtensions } from '@/utils/typesUtils';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MyDropdown } from '@/components/elements/Controls';\nimport { setViewFolderAs } from '@/store/folderBrowserSlice';\nimport { useEffect } from 'react';\nimport { isMissing } from '@/utils/helpers';\nimport FolderPeek from '@/components/folderBrowser/folderViewers/FolderPeek';\nimport ChildrenStats from '@/components/folderBrowser/folderViewers/ChildrenStats';\nimport BreadCrumbsNav from '@/components/folderBrowser/BreadCumbsNav';\nimport { pathJoin, parentName } from '@/store/folderBrowserSlice';\n\n\nconst FolderViewer = React.memo(function FolderViewer({viewingItem}) {\n    const dispatch = useDispatch();\n    const { id, label, children: items } = viewingItem;\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n    const countFiles = _(items).filter(['isDir', false]).countBy(it => path.extname(it.id)).value();\n    const hasParquet = _.keys(countFiles).includes('.parquet');\n    const hasImage = _.keys(countFiles).some(ext => imageExtensions.includes(ext));\n\n    const viewAsOptions = [\n        'default',\n        ...(hasParquet ? ['ParquetFolder'] : []),\n        ...(hasImage ? ['ImageFolder'] : [])\n    ];\n    const viewAs = useSelector(state => state.folderBrowser.viewFolderAs[id]);\n\n    useEffect(() => {\n        if (isMissing(viewAs) && _.size(countFiles) === 1) {\n            const ext = Object.keys(countFiles)[0];\n            if (imageExtensions.includes(ext)) {\n                dispatch(setViewFolderAs({id, viewAs: 'ImageFolder'}));\n            } else if (ext === '.parquet') {\n                dispatch(setViewFolderAs({id, viewAs: 'ParquetFolder'}));\n            }\n        }\n    }, [id, countFiles, dispatch, viewAs]);\n\n\n    const mainView = () => {\n        switch (viewAs || 'default') {\n            case 'ImageFolder':\n                return <ViewAlbum photoList={items.map(it => pathJoin(rootFolder, it.id))} />;\n            case 'ParquetFolder':\n                return 'TODO';\n            default:\n                return <FolderPeek items={items} />;\n        }\n    }\n\n    return (\n    <Box sx={{\n        width: '100%', height: '100%', display: 'flex', flexDirection: 'column',\n        padding: 2, gap: 2, alignItems: 'left', backgroundColor: 'background.paper'\n    }}>\n        <Box sx={{display: 'flex', flexDirection: 'row', gap: 2, alignItems: 'center'}}>\n            <BreadCrumbsNav id={id} isDir={true}/>\n            <Box sx={{flex: 1}}></Box>\n\n            <MyDropdown\n                options={viewAsOptions}\n                value={viewAs || 'default'}\n                label=\"View as\"\n                width=\"200px\"\n                onChange={(newValue) => {\n                    dispatch(setViewFolderAs({id, viewAs: newValue}));\n                }}\n            />\n\n\n        </Box>\n        <Box sx={{border: '1px solid', borderColor: 'divider', borderRadius: 1, padding: 1}}>\n            <ChildrenStats items={items} />\n        </Box>\n\n        <Box sx={{flex: 1, overflowY: 'auto'}}>\n            {mainView()}\n        </Box>\n    </Box>\n    );\n});\n\nexport default FolderViewer;","import React from 'react';\nimport { ImageBox } from '@/components/elements/ImageBox';\nimport { getFileUrl } from '@/utils/urls';\n\nconst ViewImage = React.memo(function ViewImage({fullPath}) {\n  const url = getFileUrl(fullPath);\n    return (\n      <ImageBox url={url} />\n    );\n});\n\nexport default ViewImage;","import React from 'react';\nimport { Box } from '@mui/material';\nimport { CircularProgress } from '@mui/material';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { python } from '@codemirror/lang-python';\nimport { sql } from '@codemirror/lang-sql';\nimport { markdown } from '@codemirror/lang-markdown';\nimport { useSelector } from 'react-redux';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport path from 'path-browserify';\nimport { JsonBox } from '@/components/elements/JsonBox';\nimport YAML from 'yaml';\nimport { getFileUrl } from '@/utils/urls';\n\nconst TextContentViewer = React.memo(function TextContentViewer({fullPath}) {\n    const theme = useSelector((state) => state.settings.mode);\n    const [content, setContent] = React.useState('');\n    const [isLoading, setIsLoading] = React.useState(true);\n    const ext = path.extname(fullPath);\n\n    React.useEffect(() => {\n        setIsLoading(true);\n        fetch(getFileUrl(fullPath))\n            .then(res => res.text())\n            .then(text => setContent(text))\n            .then(() => setIsLoading(false))\n            .catch(err => console.error('Error loading file content:', err));\n    }, [fullPath]);\n\n    if (isLoading) {\n        return (\n            <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%'}}>\n                <CircularProgress />\n            </Box>\n        );\n    } else if (['.json'].includes(ext)) {\n        try {\n            const obj = JSON.parse(content);\n            return <JsonBox obj={obj} />;\n        } catch (err) {\n            return <Box sx={{p: 2}}>{content}</Box>\n        }\n    } else if (['.yaml', '.yml'].includes(ext)) {\n        try {\n            const obj = YAML.parse(content);\n            return <JsonBox obj={obj} />;\n        } catch (err) {\n            return <Box sx={{p: 2}}>{content}</Box>\n        }\n    } else {\n        const extensionMap = {\n            '.py': python(),\n            '.sql': sql(),\n            '.md': markdown(),\n        }\n\n        return (\n            <Box sx={{}}>\n                <CodeMirror\n                    height=\"100%\"\n                    style={{height: '100%'}}\n                    value={content}\n                    editable={false}\n                    extensions={[extensionMap[ext]]}\n                    theme={theme === 'dark' ? oneDark : 'light'}\n                />\n            </Box>\n        );\n    }\n\n\n\n});\n\nexport default TextContentViewer;","import React, { useEffect } from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\nimport { fetchParquetMeta } from '@/utils/api';\nimport { useDispatch } from 'react-redux';\nimport { BasicTable } from '@/components/elements/BasicTable';\nimport { useSelector } from 'react-redux';\nimport SqlCard from '@/components/elements/SqlCard';\nimport { MyButton } from '@/components/elements/Controls';\nimport useMUITheme from '@/hooks/useMUITheme';\nimport Link from 'next/link';\nimport { ROUTES } from '@/constants';\nimport OpenInNewOutlinedIcon from '@mui/icons-material/OpenInNewOutlined';\n\nconst NumberCell = React.memo(function NumberCell({value}) {\n    const valueStr = value === null ? '' : value.toLocaleString();\n    return <Typography variant=\"body1\">{valueStr}</Typography>;\n});\n\nconst StringCell = React.memo(function StringCell({value}) {\n    const valueStr = value === null ? '' : value;\n    return <Typography variant=\"body1\" sx={{overflowWrap: 'anywhere', whiteSpace: 'normal'}}>\n        {valueStr}\n        </Typography>;\n});\n\nconst ParquetPreview = React.memo(function ParquetPreview({fullPath}) {\n    const dispatch = useDispatch();\n    const sqlKey = 'parquetMeta';\n    const sql = useSelector((state) => state.sql[sqlKey]);\n    const muiTheme = useMUITheme();\n\n    useEffect(() => {\n       fetchParquetMeta({dispatch, dataFile: fullPath, sqlKey});\n    }, [fullPath, dispatch, sqlKey]);\n\n    if (sql?.status === 'running') {\n        return <CircularProgress />;\n    }\n\n    if (!sql || !sql.data) {\n        return null;\n    }\n\n\n\n    const overridingColDefs = {\n        column_name: {\n            pinned: 'left',\n            cellStyle: {\n                color: muiTheme.palette.text.primary,\n            },\n        },\n        column_type: {\n            cellStyle: {\n                fontFamily: 'monospace',\n                whiteSpace: 'normal',\n                wordBreak: 'break-word',\n            },\n        },\n        cntAll: {\n            cellRenderer: params => <NumberCell value={params.value} />,\n        },\n        cntNull: {\n            cellRenderer: params => <NumberCell value={params.value} />,\n        },\n        min: {\n            cellRenderer: params => <StringCell value={params.value} />,\n        },\n        max: {\n            cellRenderer: params => <StringCell value={params.value} />,\n        },\n\n    };\n\n    return (\n        <Box sx={{display: 'flex', flex: 1, flexDirection: 'column', gap: 2, height: '100%', width: '100%'}}>\n            <Box sx={{flex: 0, display: 'flex', flexDirection: 'row', gap: 2, alignItems: 'center'}}>\n                <Typography variant=\"h6\">Previewing columns metadata from the parquet file</Typography>\n                <SqlCard sqlKey={sqlKey} />\n                <Box sx={{flex: 1}}></Box>\n                <Link target=\"_blank\" href={`${ROUTES.Table}?filePath=${fullPath}&fileFormat=parquet`}>\n                    <MyButton>Open <OpenInNewOutlinedIcon/></MyButton>\n                </Link>\n            </Box>\n            <Box sx={{flex: 1}}>\n                <BasicTable initRowData={sql.data} overridingColDefs={overridingColDefs} />\n            </Box>\n        </Box>\n    );\n});\n\nexport default ParquetPreview;","import React, { useEffect } from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { BasicTable } from '@/components/elements/BasicTable';\nimport { useSelector } from 'react-redux';\nimport SqlCard from '@/components/elements/SqlCard';\nimport { MyButton } from '@/components/elements/Controls';\nimport Link from 'next/link';\nimport { ROUTES } from '@/constants';\nimport OpenInNewOutlinedIcon from '@mui/icons-material/OpenInNewOutlined';\nimport { previewCsv } from '@/utils/api';\n\nconst CsvPreview = React.memo(function CsvPreview({fullPath}) {\n    const dispatch = useDispatch();\n    const sqlKey = 'csvPreview';\n    const sql = useSelector((state) => state.sql[sqlKey]);\n\n\n    useEffect(() => {\n       previewCsv({dispatch, dataFile: fullPath, sqlKey});\n    }, [fullPath, dispatch, sqlKey]);\n\n    if (sql?.status === 'running') {\n        return <CircularProgress />;\n    }\n\n    if (!sql || !sql.data) {\n        return null;\n    }\n\n\n    return (\n        <Box sx={{display: 'flex', flex: 1, flexDirection: 'column', gap: 2, height: '100%', width: '100%'}}>\n            <Box sx={{flex: 0, display: 'flex', flexDirection: 'row', gap: 2, alignItems: 'center'}}>\n                <Typography variant=\"h6\">Previewing CSV file</Typography>\n                <SqlCard sqlKey={sqlKey} />\n                <Box sx={{flex: 1}}></Box>\n                <Link target=\"_blank\" href={`${ROUTES.Table}?filePath=${fullPath}&fileFormat=csv`}>\n                    <MyButton>Open <OpenInNewOutlinedIcon/></MyButton>\n                </Link>\n            </Box>\n            <Box sx={{flex: 1}}>\n                <BasicTable initRowData={sql.data}/>\n            </Box>\n        </Box>\n    );\n});\n\nexport default CsvPreview;","import React from 'react';\nimport { Box } from '@mui/material';\nimport path from 'path-browserify';\nimport { imageExtensions } from '@/utils/typesUtils';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ViewImage from '@/components/folderBrowser/fileViewers/ViewImage';\nimport TextContentViewer from '@/components/folderBrowser/fileViewers/TextContentViewer';\nimport ParquetPreview from '@/components/folderBrowser/fileViewers/ParquetPreview';\nimport { TextSegments } from '@/components/elements/displays';\nimport BreadCrumbsNav from '@/components/folderBrowser/BreadCumbsNav';\nimport CsvPreview from '@/components/folderBrowser/fileViewers/CsvPreview';\nimport { pathJoin } from '@/store/folderBrowserSlice';\n\nconst FileViewer = React.memo(function FileViewer({viewingItem}) {\n    const dispatch = useDispatch();\n    const { id, label } = viewingItem;\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n\n    const fullPath = pathJoin(rootFolder, id);\n\n    const ext = path.extname(id);\n\n\n    const mainView = () => {\n\n        if (imageExtensions.includes(ext)) {\n            return <ViewImage fullPath={fullPath} />;\n        } else if (['.json', '.yaml', '.yml', '.py', '.sql', '.md'].includes(ext)) {\n            return <TextContentViewer fullPath={fullPath} />;\n        } else if (ext === '.parquet') {\n            return <ParquetPreview fullPath={fullPath} />;\n        } else if (ext === '.csv') {\n            return <CsvPreview fullPath={fullPath} />;\n        } else {\n            return <TextSegments segments={[\n                {text: 'I do not know how to preview the file with extension'},\n                {text: ext, sx: {fontFamily: 'monospace', color: 'warning.main'}},\n            ]} />\n        }\n    }\n\n    return (\n    <Box sx={{\n        width: '100%', height: '100%', display: 'flex', flexDirection: 'column',\n        padding: 2, gap: 2, alignItems: 'left',\n        backgroundColor: 'background.paper'\n    }}>\n        <Box sx={{display: 'flex', flexDirection: 'row', gap: 2, alignItems: 'center'}}>\n            <BreadCrumbsNav id={id} isDir={false} />\n            <Box sx={{flex: 1}}></Box>\n\n        </Box>\n\n        <Box sx={{height: '100%', width: '100%', overflow: 'auto'}}>\n            {mainView()}\n        </Box>\n    </Box>\n    );\n});\n\nexport default FileViewer;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { locateItem } from '@/store/folderBrowserSlice';\nimport { isMissing } from '@/utils/helpers';\nimport FolderViewer from '@/components/folderBrowser/folderViewers/FolderViewer';\nimport FileViewer from '@/components/folderBrowser/fileViewers/FileViewer';\nimport { useInitSettings } from '@/hooks/useApiData';\nimport { pathBasename } from '@/store/folderBrowserSlice';\n\n\nconst FolderItemPreview = React.memo(function FolderItemPreview() {\n    useInitSettings();\n    const rootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n    const viewingItem = useSelector(createSelector([\n        state => state.folderBrowser.viewingItemId,\n        state => state.folderBrowser.treeData,\n    ], (viewingItemId, treeData) => {\n        if (isMissing(rootFolder)) {\n            return null;\n        } else if (isMissing(viewingItemId) || isMissing(treeData) || viewingItemId === '') {\n            return {id: '', isDir: true, label: pathBasename(rootFolder), children: treeData};\n        } else {\n            return locateItem(treeData, viewingItemId);\n        }\n    }));\n\n\n    if (!viewingItem || isMissing(rootFolder)) {\n        return null;\n    }\n\n    const { isDir } = viewingItem || {};\n\n\n    if (isDir) {\n        return <FolderViewer viewingItem={viewingItem} />;\n    } else {\n        return <FileViewer viewingItem={viewingItem} />;\n    }\n\n});\n\nexport default FolderItemPreview;","import React, { useState, useRef, useEffect } from 'react';\nimport Box from '@mui/material/Box';\n\nexport default function HorizontalSplitBox({left, right, initLeftWidth='50%'}) {\n  const [leftWidth, setLeftWidth] = useState(initLeftWidth);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const containerRef = useRef(null);\n\n  // Track container width for percentage calculations\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        setContainerWidth(containerRef.current.clientWidth);\n      }\n    };\n\n    updateContainerWidth();\n\n    const resizeObserver = new ResizeObserver(updateContainerWidth);\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    return () => resizeObserver.disconnect();\n  }, []);\n\n  // Convert percentage to pixels if needed\n  const getPixelWidth = (width) => {\n    if (typeof width === 'string' && width.includes('%')) {\n      const percentage = parseFloat(width) / 100;\n      return containerWidth * percentage;\n    }\n    return parseFloat(width);\n  };\n\n  // Convert pixels back to percentage if original was percentage\n  const updateWidth = (newPixelWidth) => {\n    if (typeof initLeftWidth === 'string' && initLeftWidth.includes('%')) {\n      const percentage = (newPixelWidth / containerWidth) * 100;\n      setLeftWidth(`${Math.max(10, Math.min(90, percentage))}%`); // Clamp between 10% and 90%\n    } else {\n      setLeftWidth(Math.max(100, newPixelWidth)); // Min 100px for pixel values\n    }\n  };\n\n  const startDrag = (e) => {\n    const startX = e.clientX;\n    const startPixelWidth = getPixelWidth(leftWidth);\n\n    const onMouseMove = (e) => {\n      const delta = e.clientX - startX;\n      const newPixelWidth = startPixelWidth + delta;\n      updateWidth(newPixelWidth);\n    };\n\n    const onMouseUp = () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  const currentPixelWidth = getPixelWidth(leftWidth);\n\n  return (\n    <Box\n      ref={containerRef}\n      sx={{\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        overflow: 'auto',\n        maxHeight: '100%',\n        minHeight: 0,\n      }}\n    >\n      {/* Left Pane */}\n      <Box sx={{\n        width: `${currentPixelWidth}px`,\n        overflow: 'auto',\n        maxHeight: '100%',\n        minHeight: 0,\n      }}>\n        {left}\n      </Box>\n\n      {/* Divider */}\n      <Box\n        onMouseDown={startDrag}\n        sx={{\n          width: '2px',\n          bgcolor: 'divider',\n          cursor: 'col-resize',\n          '&:hover': { bgcolor: 'primary.main' },\n        }}\n      />\n\n      {/* Right Pane */}\n      <Box sx={{\n        flex: 1,\n        overflow: 'auto',\n        maxHeight: '100%',\n        minHeight: 0,\n      }}>\n        {right}\n      </Box>\n    </Box>\n  );\n}","\"use client\";\n\nimport React, { useEffect } from 'react';\nimport FolderNav from '@/components/folderBrowser/FolderNav';\nimport FolderItemPreview from '@/components/folderBrowser/Preview';\nimport { useSearchParams } from 'next/navigation';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { updateSettings } from '@/store/settingsSlice';\nimport { ROUTES } from '@/constants';\nimport HorizontalSplitBox from '@/components/layout/HorizontalSplitBox';\nimport { pathBasename } from '@/store/folderBrowserSlice';\nimport { updateChildren } from '@/store/folderBrowserSlice';\nimport useSetting from '@/hooks/useSetting';\n\nconst FolderBrowser = React.memo(function FolderBrowser() {\n  const dispatch = useDispatch();\n  const {value: defaultRootFolder} = useSetting('folderBrowserDefaultRootFolder');\n  const reduxRootFolder = useSelector(state => state.settings.folderBrowserRootFolder);\n  const searchParams = useSearchParams();\n  const userRequestedRootFolder = searchParams.get('rootFolder');\n  const hasTreeData = useSelector(state => state.folderBrowser.treeData.length > 0);\n\n  // Update document title based on rootFolder\n  useEffect(() => {\n    if (userRequestedRootFolder) {\n      const title = pathBasename(userRequestedRootFolder);\n      document.title = title;\n    }\n  }, [userRequestedRootFolder]);\n\n  useEffect(() => {\n    const rootFolder = userRequestedRootFolder || defaultRootFolder;\n    if (!reduxRootFolder && rootFolder) {\n      dispatch(updateSettings({folderBrowserRootFolder: rootFolder}));\n      dispatch(updateChildren(''));\n    }\n  }, [userRequestedRootFolder, dispatch, reduxRootFolder, defaultRootFolder]);\n\n  useEffect(() => {\n    if (!hasTreeData) {\n      dispatch(updateChildren(''));\n    }\n  }, [dispatch, hasTreeData]);\n\n\n  return (\n    <HorizontalSplitBox\n      left={<FolderNav />}\n      right={<FolderItemPreview/>}\n      initLeftWidth='30%'\n    />\n  );\n});\n\nFolderBrowser.displayName = ROUTES.FolderBrowser;\n\nexport default FolderBrowser;","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport SpeedDial from '@mui/material/SpeedDial';\nimport Typography from '@mui/material/Typography';\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\nimport ShareOutlinedIcon from '@mui/icons-material/ShareOutlined';\nimport HelpOutlineOutlinedIcon from '@mui/icons-material/HelpOutlineOutlined';\nimport { HEIGHT_BOTTOM_BAR } from '@/constants';\nimport BackHandOutlinedIcon from '@mui/icons-material/BackHandOutlined';\n\nconst actions = [\n    { icon: <ShareOutlinedIcon />, name: 'Share' },\n    { icon: <BackHandOutlinedIcon />, name: 'Try with my data' },\n    { icon: <HelpOutlineOutlinedIcon />, name: 'Help' },\n  ];\n\nexport default function TopSpeedDial() {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return null;\n\n    return (\n        <>\n        <Backdrop open={open} />\n        <SpeedDial\n            ariaLabel=\"SpeedDial\"\n            sx={{\n                position: 'absolute', bottom: HEIGHT_BOTTOM_BAR + 16, right: 16,\n            }}\n            icon={<SpeedDialIcon />}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            open={open}\n        >\n            Message\n            {actions.map((action) => (\n            <SpeedDialAction\n                key={action.name}\n                icon={action.icon}\n                slotProps={{\n                    tooltip: {\n                        open: true,\n                        placement: 'left-end',\n                        title: <Typography sx={{width: '150px', textAlign: 'right'}}>{action.name}</Typography>,\n                    },\n                }}\n                onClick={handleClose}\n            />\n            ))}\n        </SpeedDial>\n        </>\n    );\n\n}","import React from 'react';\nimport { Snackbar, Alert } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { hideToast } from '@/store/toastSlice';\n\nconst Toast = () => {\n  const dispatch = useDispatch();\n  const { open, message, severity, autoHideDuration } = useSelector((state) => state.toast);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    dispatch(hideToast());\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={autoHideDuration}\n      onClose={handleClose}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n    >\n      <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Toast;","\"use client\";\nimport { Box } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { useEffect, useState } from 'react';\nimport useMUITheme from \"@/hooks/useMUITheme\";\nimport useLeavePageConfirmation from '@/hooks/useLeavePageConfirmation';\nimport { HEIGHT_BOTTOM_BAR } from '@/constants';\nimport TopSpeedDial from '@/components/TopSpeedDial';\nimport useSetting from '@/hooks/useSetting';\nimport Toast from '@/components/Toast';\n\nconst TopLevelPage = ({children, bottomBar}) => {\n\n  const [mounted, setMounted] = useState(false);\n  const muiTheme = useMUITheme();\n  const { value: enableDebugging } = useSetting('enableDebugging');\n\n  useLeavePageConfirmation(!enableDebugging); // Confirm before leaving page\n\n  useEffect(() => {\n    setMounted(true);\n\n  }, []);\n\n  if (!mounted) {\n    return null; // or a loading state\n  }\n\n\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Box sx={{ width: '100%', height: '100vh', display: 'flex', flexDirection: 'column' }}>\n        <Box sx={{ flex: 1, height: `calc(100% - ${HEIGHT_BOTTOM_BAR}px)`}}>\n          {children}\n        </Box>\n        <Box sx={{flex: 0}}>\n          {bottomBar}\n        </Box>\n      </Box>\n      <TopSpeedDial />\n      <Toast />\n    </ThemeProvider>\n  );\n};\n\nexport default TopLevelPage;","import { useEffect } from 'react';\n\nexport default function useLeavePageConfirmation(shouldBlock=true) {\n  useEffect(() => {\n    function handleBeforeUnload(e) {\n      if (!shouldBlock) return;\n      e.preventDefault();\n      e.returnValue = ''; // Required for some browsers\n    }\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [shouldBlock]);\n}","import { useDispatch } from 'react-redux';\nimport { updateSettings } from '@/store/settingsSlice';\nimport { isMissing } from '@/utils/helpers';\nimport React from 'react';\nimport { MyCheckbox } from '@/components/elements/Controls';\nimport { CircularProgress } from '@mui/material';\nimport useSetting from '@/hooks/useSetting';\n\n\nconst CheckboxInSettings = React.memo(({settingKey, extraChange=null, shortLabel=null}) => {\n    const dispatch = useDispatch();\n    const {schema, initValue, value} = useSetting(settingKey);\n\n    if (isMissing(initValue)) {\n        return <CircularProgress />;\n    }\n\n\n    const setValue = (newValue) => {\n        dispatch(updateSettings({[settingKey]: newValue}));\n        if (extraChange) {\n            extraChange(newValue);\n        }\n    }\n\n    return (\n        <MyCheckbox label={shortLabel || schema.description} checked={value} onChange={setValue} />\n    );\n});\n\nCheckboxInSettings.displayName = 'CheckboxInSettings';\n\nexport default CheckboxInSettings;\n","import { useDispatch } from 'react-redux';\nimport { updateSettings } from '@/store/settingsSlice';\nimport { MyTooltip } from '@/components/elements/displays';\nimport { Box, Typography, FormControl, InputLabel, Select, MenuItem, CircularProgress } from '@mui/material';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { zIndex } from '@/utils/zIndex';\nimport useSetting from '@/hooks/useSetting';\nimport { isMissing } from '@/utils/helpers';\n\nconst DropdownInSettings = ({settingKey, shortLabel=null}) => {\n    const dispatch = useDispatch();\n    const {schema, initValue, value} = useSetting(settingKey);\n\n    if (isMissing(initValue)) {\n        return <CircularProgress />;\n    }\n\n    const changeValue = (value) => {\n        dispatch(updateSettings({[settingKey]: value}));\n    }\n    const labelElement = (\n        <Box sx={{display: 'flex', alignItems: 'center', gap: 1}}>\n            <MyTooltip title={settingKey}><InfoOutlinedIcon fontSize=\"small\"/></MyTooltip>\n            <Typography fontSize=\"inherit\">{shortLabel || schema.description}</Typography>\n        </Box>\n    );\n\n    return (\n        <FormControl sx={{ mt: 1, width: '100%'}} size=\"small\">\n            <InputLabel>{labelElement}</InputLabel>\n            <Select\n                value={value}\n                onChange={(e) => changeValue(e.target.value)}\n                label={labelElement}\n                MenuProps={{\n                    sx: {zIndex: zIndex.alwaysOnTop}\n                }}\n            >\n            {schema.enum.map((option, idx) => (\n                <MenuItem key={`${settingKey}-${idx}`} value={option}>{option}</MenuItem>\n            ))}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default DropdownInSettings;\n\n","import { useDispatch } from 'react-redux';\nimport { updateSettings } from '@/store/settingsSlice';\nimport { isMissing } from '@/utils/helpers';\nimport React from 'react';\nimport { Box, CircularProgress, Slider, Typography } from '@mui/material';\nimport InfoOutlineIcon from '@mui/icons-material/InfoOutline';\nimport { MyTooltip } from '@/components/elements/displays';\nimport useSetting from '@/hooks/useSetting';\n\nconst SliderInSettings = React.memo(({settingKey, extraChange=null, horizontal=false}) => {\n    const dispatch = useDispatch();\n    const {schema, initValue, value} = useSetting(settingKey);\n\n    if (isMissing(initValue)) {\n        return <CircularProgress />;\n    }\n\n    const setValue = (newValue) => {\n        dispatch(updateSettings({[settingKey]: newValue}));\n        if (extraChange) {\n            extraChange(newValue);\n        }\n    }\n\n    const infoIcon = (\n        <MyTooltip title={settingKey}>\n            <InfoOutlineIcon fontSize=\"small\"/>\n        </MyTooltip>\n    )\n\n    return (\n        <Box sx={{\n            display: 'flex',\n            flexDirection: horizontal ? 'row' : 'column',\n            alignItems: 'center',\n            gap: horizontal ? 1 : 0,\n        }}>\n\n            <Typography variant=\"body2\" sx={{\n                color: 'text.secondary', textAlign: 'left',\n                width: (horizontal ? 'auto' : '100%')\n            }} gutterBottom>\n              {infoIcon} {schema.description}: {value}\n            </Typography>\n            <Box sx={{ width: (horizontal ? '100px' : '100%')}}>\n                <Slider\n                    value={value}\n                    onChange={(e, newValue) => {\n                        setValue(newValue);\n                        e.stopPropagation();\n                    }}\n                    min={schema.minimum}\n                    max={schema.maximum}\n                    size=\"small\"\n                    step={schema.step || 1}\n                    valueLabelDisplay={horizontal ? 'off' : 'auto'}\n                    sx={{ width: '100%' }}\n                />\n            </Box>\n        </Box>\n\n    );\n});\n\nSliderInSettings.displayName = 'SliderInSettings';\n\nexport default SliderInSettings;\n","import { Treemap, ResponsiveContainer, Tooltip } from 'recharts';\nimport { map, filter } from 'lodash';\nimport { Box } from '@mui/material';\nimport { truncateText } from '@/utils/StringsUtils';\nimport useMUITheme from '@/hooks/useMUITheme';\nimport React from 'react';\n\nconst MyTreeMap = React.memo(({ columnStats, setClickedId, size=100 }) => {\n    const muiTheme = useMUITheme();\n\n    if (!columnStats || columnStats.cnt_values.length === 0) {\n        return <Box sx={{height: size, border: '1px solid', borderColor: 'divider', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>no data</Box>;\n    }\n    const { cnt_values, cnt_all } = columnStats;\n    const chartData = cnt_values;\n    const filteredData = map(filter(chartData, (item) => item.cnt > 0), ({value, cnt}) => ({name: value, value: cnt}));\n\n\n    const CustomizedContent = (props) => {\n        const { x, y, width, height, index, name } = props;\n        return (\n          <g onClick={() => setClickedId ? setClickedId(name) : null}>\n            <rect\n              x={x}\n              y={y}\n              width={width}\n              height={height}\n              style={{\n                fill: muiTheme.palette.plotFill,\n                stroke: muiTheme.palette.text.primary,\n                strokeWidth: 1,\n                cursor: 'pointer',\n              }}\n            />\n            {height > 20 && width > 30 && (\n                <text\n                    x={x + width / 2}\n                    y={y + height / 2}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fill={muiTheme.palette.text.primary}\n                    stroke={muiTheme.palette.text.primary}\n                    strokeWidth={1}\n                    fontSize={muiTheme.typography.fontSize}\n                    style={{\n                        maxWidth: width,\n                        overflow: 'hidden',\n                        whiteSpace: 'nowrap',\n                        textOverflow: 'ellipsis',\n                    }}\n            >\n                {truncateText(name, width)}\n            </text>\n            )}\n          </g>\n        );\n      };\n\n    const TreeMapTooltip = ({ active, payload }) => {\n        if (active && payload && payload.length) {\n            const value = payload[0].payload.name;\n            const cnt = payload[0].payload.value;\n            const percentage = cnt_all > 0 ? ((cnt / cnt_all) * 100).toFixed(2) : 0;\n\n            return (\n                <Box sx={{\n                    p: 1,\n                    bgcolor: 'background.card',\n                    color: 'text.secondary',\n                    borderRadius: 1,\n                    border: '1px solid',\n                    borderColor: muiTheme.palette.borderColor,\n                    fontSize: muiTheme.typography.fontSize,\n                }}>\n                    <Box sx={{ mb: 1, fontWeight: 'bold'}}>{`${value}`}</Box>\n                    <Box>cnt: {cnt.toLocaleString()}</Box>\n                    <Box>pct: {percentage}%</Box>\n                </Box>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <ResponsiveContainer minWidth={24} minHeight={24} width='100%' height={size} sx={{overflow: 'hidden'}}>\n            <Treemap\n                data={filteredData}\n                stroke=\"#fff\"\n                fill=\"#8884d8\"\n                isAnimationActive={false}\n                content={<CustomizedContent />}\n            >\n\n                {size >= 100 && <Tooltip content={<TreeMapTooltip />} isAnimationActive={false}/>}\n            </Treemap>\n\n        </ResponsiveContainer>\n    );\n});\n\nMyTreeMap.displayName = 'MyTreeMap';\n\nexport default MyTreeMap;\n\n","import { ResponsiveContainer, BarChart, Bar, Tooltip, XAxis, YAxis, Brush } from 'recharts';\nimport { Box, Typography } from '@mui/material';\nimport useMUITheme from '@/hooks/useMUITheme';\nimport React from 'react';\n\nexport const MyBarChart = React.memo(({\n    columnStats, size=24, showBrush=false, onRangeChange=null\n}) => {\n    const muiTheme = useMUITheme();\n\n    if (!columnStats) {\n        return 'no data';\n    }\n\n    const {cnt_values, cnt_all, bin} = columnStats;\n    const chartData = cnt_values;\n    const labelCutoff = 90;\n\n\n    const onBrushChange = ({startIndex, endIndex}) => {\n        const startValue = startIndex * bin.step + bin.min;\n        const endValue = (endIndex + 1) * bin.step + bin.min;\n        if (onRangeChange !== null) {\n            onRangeChange({startValue, endValue});\n        }\n      }\n\n    const BarTooltip = ({ active, payload, label }) => {\n        // Warning: it should be a Rechart bug. When I show Xaxis the lable is label, but when I hide it the label is index.\n\n        if (label !== undefined && active && payload && payload.length) {\n            const cnt = payload[0].value;\n            const percentage = cnt_all > 0 ? ((cnt / cnt_all) * 100).toFixed(3) : 0;\n            return (\n                <Box sx={{ p: 1, bgcolor: 'background.card', borderRadius: 1, border: '1px solid', borderColor: muiTheme.palette.borderColor }}>\n                    <Typography variant=\"body2\" sx={{ mb: 0.5, fontWeight: 'bold' }}>Range {`${label}`}</Typography>\n                    <Typography variant=\"body2\">Count: {cnt.toLocaleString()}</Typography>\n                    <Typography variant=\"body2\">Percentage: {percentage}%</Typography>\n                </Box>\n            );\n        }\n        return null;\n    };\n    const brush = () => (\n        <Brush\n        tickFormatter={() => ''}\n        dataKey=\"value\"\n        height={10}\n        travellerWidth={6}\n        stroke=\"CornflowerBlue\"\n        onChange={onBrushChange}\n        tickerFormat={null}\n        tickCount={10}\n        />\n    );\n\n    return (\n    <Box sx={{backgroundColor: 'background.card'}}>\n        <ResponsiveContainer minWidth={24} minHeight={24} width={'100%'} height={size}>\n            <BarChart data={chartData} barGap={0} barCategoryGap={0} >\n                {size > labelCutoff && <XAxis dataKey=\"value\" scale='auto' />}\n                {size > labelCutoff && <YAxis dataKey=\"cnt\" scale='auto'  />}\n                {size > labelCutoff && (<Tooltip content={<BarTooltip />} isAnimationActive={false} /> )}\n                <Bar\n                    dataKey=\"cnt\"\n                    fill={muiTheme.palette.plotFill}\n                    stroke={muiTheme.palette.text.secondary}\n                    strokeWidth={1}\n                    isAnimationActive={false}\n                >\n\n                </Bar>\n                {size > labelCutoff && showBrush && brush()}\n            </BarChart>\n        </ResponsiveContainer>\n    </Box>\n    );\n});\n\nMyBarChart.displayName = 'MyBarChart';\n\nexport default MyBarChart;","import { useMemo } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { AGGridResponsiveContainer } from '@/components/elements/displays';\nimport { useEffect, useRef, useCallback } from 'react';\nimport { COL_DEF_NUMBER, COL_DEF_PERCENT } from '@/utils/agGridUtils';\nimport { coalesce } from '@/utils/helpers';\nimport React from 'react';\nimport useAGGridTheme from '@/hooks/useAGGridTheme';\nimport useMUITheme from '@/hooks/useMUITheme';\nimport useFilters from '@/hooks/useFilters';\nimport { useSelector } from 'react-redux';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { AllCommunityModule, ModuleRegistry } from 'ag-grid-community';\nimport { buildProgressBarRenderer } from '@/utils/agGridUtils';\n\n// Register all Community features\nModuleRegistry.registerModules([AllCommunityModule]);\n\n\nconst ensureClickedValueIsVisible = ({clickedId, gridApi}) => {\n    if (clickedId) {\n        gridApi.forEachNode((node) => {\n            if (node.data.value === clickedId) {\n                gridApi.ensureNodeVisible(node);\n            }\n        });\n    }\n}\n\nconst updateSelection = ({including, gridApi}) => {\n    gridApi.forEachNode((node) => {\n        const targetValue = including.includes(node.data.value);\n        const currentValue = node.isSelected();\n        if (targetValue !== currentValue) {\n            node.setSelected(targetValue);\n        }\n    });\n};\n\n\nconst EnumFilterTable = React.memo(({\n    name,\n    bufferFilters,\n    setBufferFilters\n}) => {\n\n    const rowData = useSelector(createSelector([\n        state => state.baselineColumnStats[name]?.data,\n        state => state.filteredColumnStats[name]?.data,\n    ], (baselineData, filteredData) => {\n        return baselineData.cnt_values.map(({value, cnt}) => {\n            const filteredCnt = coalesce(filteredData.cnt_values.find((item) => item.value === value)?.cnt, 0);\n            return {\n                value,\n                baseline_cnt: cnt,\n                filtered_cnt: filteredCnt,\n                percent: parseFloat((100 * filteredCnt / filteredData.cnt_all).toFixed(3)),\n            };\n        });\n    }));\n    const { including, clickedId } = bufferFilters;\n\n    const { hasFilters } = useFilters();\n    const gridRef = useRef();\n    const agGridTheme = useAGGridTheme({});\n    const muiTheme = useMUITheme();\n\n\n    useEffect(() => {\n        if (gridRef.current && gridRef.current.api) {\n            const api = gridRef.current.api;\n            if (clickedId) {\n                ensureClickedValueIsVisible({clickedId, gridApi: api});\n                api.forEachNode((node) => {\n                    node.setSelected(node.data.value === clickedId);\n                });\n            }\n        }\n    }, [clickedId]);\n\n    useEffect(() => {\n        if (gridRef.current && gridRef.current.api) {\n            updateSelection({including, gridApi: gridRef.current.api});\n        }\n    }, [including]);\n\n\n\n    const colDefs = useMemo(() => [\n        {\n            headerName: 'Value',\n            field: 'value',\n            filter: 'agTextColumnFilter',\n        },\n        {\n            headerName: 'Percent',\n            field: 'percent',\n            ...COL_DEF_PERCENT(muiTheme),\n            cellRenderer: buildProgressBarRenderer({min: 0, max: 100, isPercent: true, muiTheme}),\n        },\n        {\n            headerName: hasFilters ? 'Filtered Count' : 'Count',\n            field: 'filtered_cnt',\n            ...COL_DEF_NUMBER(muiTheme),\n        },\n        {\n            headerName: 'Baseline Count',\n            field: 'baseline_cnt',\n            ...COL_DEF_NUMBER(muiTheme),\n            hide: !hasFilters,\n        },\n\n        {\n            headerName: 'Filtered / Baseline',\n            valueGetter: (params) => {\n                if (params.data.baseline_cnt === 0) {\n                    return 0;\n                }\n                return (100 * params.data.filtered_cnt / params.data.baseline_cnt).toFixed(1);\n            },\n            cellRenderer: buildProgressBarRenderer({min: 0, max: 100, isPercent: true, muiTheme}),\n            ...COL_DEF_PERCENT(muiTheme),\n            hide: !hasFilters,\n        },\n    ], [hasFilters, muiTheme]);\n\n    const defaultColDef = useMemo(() => ({\n        sortable: true,\n        filter: false,\n        resizable: true,\n        flex: 1,\n\n      }), []);\n\n\n\n\n    const onSelectionChanged = useCallback((params) => {\n        if (params.source === 'api') {\n            return; // No need to update the including array\n        }\n        const selectedNodes = params.api.getSelectedNodes();\n        if (selectedNodes.length > 1) {\n            setBufferFilters({...bufferFilters, clickedId: null});\n        }\n        const newIncluding = [];\n        params.api.forEachNode((node) => {\n            if (node.isSelected()) {\n                newIncluding.push(node.data.value);\n            }\n        });\n        setBufferFilters({...bufferFilters, including: newIncluding});\n    }, [setBufferFilters, bufferFilters]);\n\n\n    const getRowId = useCallback((params) => String(params.data.value), []);\n\n    const getRowStyle = useCallback((params) => {\n        if (params.data.value === clickedId) {\n            return {\n                color: muiTheme.palette.primary.light,\n            };\n        } else {\n            return {};\n        }\n    }, [clickedId, muiTheme]);\n\n\n    const onGridReady = useCallback((params) => {\n        updateSelection({including, gridApi: params.api});\n    }, [including]);\n\n    return (\n        <AGGridResponsiveContainer>\n            <AgGridReact\n                domLayout='normal'\n                ref={gridRef}\n                getRowId={getRowId}\n                theme={agGridTheme}\n                rowSelection={{\n                    mode: 'multiRow',\n                    headerCheckboxSelection: true,\n                    checkboxSelection: true,\n                }}\n                selectionColumnDef={{\n                   sortable: true,\n                   pinned: 'left',\n                }}\n                onSelectionChanged={onSelectionChanged}\n                rowData={rowData}\n                columnDefs={colDefs}\n                defaultColDef={defaultColDef}\n                getRowStyle={getRowStyle}\n                onGridReady={onGridReady}\n            />\n        </AGGridResponsiveContainer>\n    );\n});\n\nEnumFilterTable.displayName = 'EnumFilterTable';\nexport default EnumFilterTable;\n","import { PieChart, Pie, Cell } from 'recharts';\nimport { stringToColor } from '@/utils/colors';\nimport React from 'react';\nimport { isMissing } from '@/utils/helpers';\nimport { useFilteredColumnStats } from '@/hooks/useColumnStats';\nimport { useSelector } from 'react-redux';\nimport { CircularProgress } from '@mui/material';\n\nconst NullPie = React.memo(({columnName}) => {\n    const heightOfColumnDistribution = useSelector(state => state.settings.heightOfColumnDistribution);\n    const size = Math.min(heightOfColumnDistribution - 2, 48);\n\n    const { data } = useFilteredColumnStats(columnName) || {};\n\n    if (isMissing(data)) {\n        return <CircularProgress size={size}/>;\n    }\n\n    const nullPercentage = 100 * data.cnt_null / data.cnt_all;\n\n    const nullStatsData = [{\n        value: 'null', percent: nullPercentage\n    }, {\n        value: 'Not null', percent: 100 - nullPercentage\n    }];\n\n\n    return (\n        <PieChart width={size} height={size} style={{margin: 0, pointerEvents: 'none', userSelect: 'none'}}>\n            <Pie data={nullStatsData}\n                innerRadius={0}\n                outerRadius={size / 2 - 2}\n                paddingAngle={0}\n                dataKey=\"percent\"\n                nameKey=\"value\"\n                isAnimationActive={false}\n                onClick={null}\n                >\n                {nullStatsData.map((entry, index) => {\n                    const {color, backgroundColor} = stringToColor(entry.value);\n                    return <Cell key={`cell-${index}`} fill={backgroundColor} color={color} />\n                })}\n\n            </Pie>\n        </PieChart>\n    );\n});\n\nNullPie.displayName = 'NullPie';\n\nexport default NullPie;\n\n\n\n\n\n\n","import { ChipList } from '@/components/elements/displays';\nimport { FilteredCount } from '@/components/filters/FilteredCounts';\nimport NullPie from './NullPie';\nimport { Box } from '@mui/material';\nimport React from 'react';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { useBaselineColumnStats, useFilteredColumnStats } from '@/hooks/useColumnStats';\n\nconst StatsCount = React.memo(({ columnName }) => {\n  const meta = useSingleColumnMeta(columnName);\n  const { data: baseData } = useBaselineColumnStats(columnName) || {};\n  const { data: filteredData } = useFilteredColumnStats(columnName) || {};\n\n\n  if (!baseData || !filteredData) {\n    return null;\n  }\n\n  const items = meta.hasNull ? [\n    <FilteredCount label=\"null\" key='count-null'\n                   countBaseline={100 * baseData.cnt_null / baseData.cnt_all}\n                   countFiltered={100 * filteredData.cnt_null / filteredData.cnt_all}\n                   addColor={true}\n                   isPercentage={true}\n                   />,\n    <FilteredCount label=\"Not null\" key='count-not-null'\n                   countBaseline={100 * (baseData.cnt_all - baseData.cnt_null) / baseData.cnt_all}\n                   countFiltered={100 * (filteredData.cnt_all - filteredData.cnt_null) / filteredData.cnt_all}\n                   addColor={true}\n                   isPercentage={true}\n                   />,\n  ] : ['This column does not have null values'];\n\n  return (\n    <Box className='counts' sx={{\n      display: 'flex', flexDirection: 'row', gap: 1, alignItems: 'center', justifyContent: 'flex-start'\n      }}>\n        <NullPie columnName={columnName}/>\n        <ChipList items={items} />\n    </Box>\n  );\n});\n\nStatsCount.displayName = 'StatsCount';\n\nexport default StatsCount;","import { FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@mui/material';\nimport React from 'react';\n\n\nconst NullFilterRadio = React.memo(({filterNull, setFilterNull}) => {\n    const options = [\n        {label: 'Include', value: 'include'},\n        {label: 'Exclude', value: 'exclude'},\n        {label: 'Only NULL', value: 'only'}\n      ];\n\n    return (\n        <FormControl sx={{display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 2}}>\n            <FormLabel>How to filter NULL values?</FormLabel>\n            <RadioGroup\n                row\n                value={filterNull}\n                onChange={(e) => setFilterNull(e.target.value)}\n            >\n            {options.map(({label, value}) => (\n                <FormControlLabel key={value} value={value} control={<Radio size=\"small\" />} label={label} />\n            ))}\n            </RadioGroup>\n      </FormControl>\n    )\n});\n\nNullFilterRadio.displayName = 'NullFilterRadio';\n\nexport default NullFilterRadio;","import { useDispatch } from 'react-redux';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport FilterAltOutlinedIcon from '@mui/icons-material/FilterAltOutlined';\nimport { useSelector } from 'react-redux';\nimport ClickCard from '@/components/elements/ClickCard';\nimport { Box } from '@mui/material';\nimport { parseFilterItem } from '@/utils/sql/parseFilterItem';\nimport { ReadOnlySQL } from '@/components/elements/displays';\nimport { MyButton, MyIconButton } from '@/components/elements/Controls';\nimport { removeColumnFilterAndRefreshData } from '@/store/agColDefsSlice';\n\nconst ColumnFilterIcon = ({columnName}) => {\n    const dispatch = useDispatch();\n    const reduxFilter = useSelector(state => state.agColDefs.filters[columnName]);\n\n    const clearFilters = () => {\n        removeColumnFilterAndRefreshData(dispatch, columnName);\n      }\n\n    const icon = reduxFilter ? <FilterAltIcon sx={{color: 'primary.main'}} /> : <FilterAltOutlinedIcon/>;\n    const trigger = <MyIconButton icon={icon}/>;\n    const tooltip = reduxFilter ? 'Active ColumnFilter' : 'No active ColumnFilter';\n    const content = reduxFilter ? <ReadOnlySQL value={parseFilterItem(columnName, reduxFilter)}/> : null;\n\n    return <Box>\n        <ClickCard trigger={trigger} title={tooltip} tooltip={tooltip}>\n            <Box sx={{display: 'flex', flexDirection: 'column', gap: 1}}>\n                {content}\n            </Box>\n            <Box sx={{flex: 1}}></Box>\n\n            <Box sx={{display: 'flex', justifyContent: 'flex-start'}}>\n                <MyButton onClick={clearFilters} color=\"error\">Clear ColumnFilter</MyButton>\n            </Box>\n        </ClickCard>\n    </Box>;\n\n\n\n};\n\nexport default ColumnFilterIcon;\n\n","import { Box } from '@mui/material';\nimport React from 'react';\nimport { MyButton } from '@/components/elements/Controls';\nimport ColumnFilterIcon from './ColumnFilterIcon';\nimport { useFilteredColumnStats } from '@/hooks/useColumnStats';\nimport SqlCard from '@/components/elements/SqlCard';\n\nconst FilterCardBottomButtons = React.memo(({\n    columnName, cancelChanges, applyFilters\n}) => {\n\n    const { sqlKey } = useFilteredColumnStats(columnName);\n\n    return (\n        <Box sx={{display: 'flex', gap: 2, justifyContent: 'flex-end', alignItems: 'center', paddingTop: 1}}>\n\n\n            <ColumnFilterIcon columnName={columnName}/>\n            <SqlCard sqlKey={sqlKey} />\n\n            <Box sx={{flex: 1}}></Box>\n\n            <MyButton onClick={cancelChanges} color=\"tertiary\">Cancel changes</MyButton>\n            <MyButton onClick={applyFilters}>Apply filters</MyButton>\n\n        </Box>\n    )\n});\n\nFilterCardBottomButtons.displayName = 'FilterCardBottomButtons';\n\nexport default FilterCardBottomButtons;","import { Box } from '@mui/material';\nimport MyTreeMap from '@/components/elements/MyTreeMap';\nimport EnumFilterTable from './EnumFilterTable';\nimport { useState, useCallback, useMemo } from 'react';\nimport StatsCount from '@/components/table/ColumnStats/StatsCount';\nimport { useSelector, useDispatch } from 'react-redux';\nimport NullFilterRadio from './NullFilterRadio';\nimport { BorderedBox } from '@/components/elements/displays';\nimport FilterCardBottomButtons from './FilterCardBottomButtons';\nimport React from 'react';\nimport { useBaselineColumnStats, useFilteredColumnStats } from '@/hooks/useColumnStats';\nimport { setColumnFilterAndRefreshData } from '@/store/agColDefsSlice';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\n\nconst EnumFilter = React.memo(({ name }) => {\n  const dispatch = useDispatch();\n\n  const baselineColumnStats = useBaselineColumnStats(name);\n  const filteredColumnStats = useFilteredColumnStats(name);\n  const meta = useSingleColumnMeta(name);\n\n\n  const reduxFilters = useSelector(state => state.agColDefs.filters[name]);\n\n\n  const allValues = baselineColumnStats?.data?.cnt_values.map(({value}) => value);\n\n  const initialBufferFilters = useMemo(() => ({\n    including: reduxFilters?.including || allValues,\n    null: reduxFilters?.null || 'include',\n    clickedId: null\n  }), [reduxFilters, allValues]);\n\n  const [bufferFilters, setBufferFilters] = useState(initialBufferFilters);\n\n\n\n\n  const applyFilters = useCallback(() => {\n    const filter = {\n      including: bufferFilters.including,\n      null: !meta.hasNull ? 'N/A' : bufferFilters.null,\n      filterType: 'myEnum'\n    }\n    setColumnFilterAndRefreshData(dispatch, name, filter);\n  }, [bufferFilters.including, bufferFilters.null, meta.hasNull, dispatch, name]);\n\n  const handleClickedIdChangeInTreeMap = useCallback((value) => {\n    if (value !== null) {\n      setBufferFilters({...bufferFilters, null: 'exclude', including: [value], clickedId: value});\n    } else {\n      setBufferFilters({...bufferFilters, clickedId: null});\n    }\n  }, [bufferFilters, setBufferFilters]);\n\n  const cachedSetBufferFilters = useCallback((newBufferFilters) => {\n    setBufferFilters({...bufferFilters, ...newBufferFilters});\n  }, [bufferFilters]);\n\n  const handleNullChange = useCallback((value) => {\n    if (value === 'only') {\n      setBufferFilters({clickedId: null, including: [], null: value});\n    } else {\n      if (bufferFilters.including.length === 0) {\n        setBufferFilters({clickedId: null, including: allValues, null: value});\n      } else {\n        setBufferFilters({...bufferFilters, null: value});\n      }\n    }\n  }, [bufferFilters, allValues, setBufferFilters]);\n\n  const cancelChanges = useCallback(() => {\n    setBufferFilters(initialBufferFilters);\n  }, [initialBufferFilters]);\n\n\n  return (\n\n      <Box sx={{height: '100%', display: 'flex', flexDirection: 'column', gap: 1}}>\n\n        <BorderedBox sx={{display: 'flex', flexDirection: 'column', gap: 1}}>\n          <StatsCount columnName={name}/>\n          {!meta.hasNull ? null : <NullFilterRadio filterNull={bufferFilters.null} setFilterNull={handleNullChange}/>}\n        </BorderedBox>\n\n        <Box sx={{height: 100}}>\n            <MyTreeMap columnStats={filteredColumnStats.data} setClickedId={handleClickedIdChangeInTreeMap}/>\n        </Box>\n\n        <Box sx={{width: '100%', flex: 1, display: 'flex'}}>\n          <EnumFilterTable\n            name={name}\n            bufferFilters={useMemo(() => bufferFilters, [bufferFilters])}\n            setBufferFilters={cachedSetBufferFilters}\n           />\n        </Box>\n\n        <FilterCardBottomButtons columnName={name} cancelChanges={cancelChanges} applyFilters={applyFilters} />\n      </Box>\n\n );\n});\n\nEnumFilter.displayName = 'EnumFilter';\n\nexport default EnumFilter;","\nimport { Box, Typography } from '@mui/material';\nimport MyBarChart from '@/components/elements/MyBarChart';\nimport { useSelector } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { MyNumberField } from '@/components/elements/Controls';\nimport { InfoCard } from '@/components/elements/ClickCard';\nimport StatsCount from '@/components/table/ColumnStats/StatsCount';\nimport NullFilterRadio from './NullFilterRadio';\nimport { BorderedBox } from '@/components/elements/displays';\nimport { useFilteredColumnStats } from '@/hooks/useColumnStats';\nimport { TextWithAddon } from '@/components/elements/displays';\nimport FilterCardBottomButtons from './FilterCardBottomButtons';\nimport { setColumnFilterAndRefreshData } from '@/store/agColDefsSlice';\nimport { useDispatch } from 'react-redux';\nimport React from 'react';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\n\nconst HistogramFilter = React.memo(({ name }) => {\n  const dispatch = useDispatch();\n  const filteredColumnStats = useFilteredColumnStats(name);\n  const data = filteredColumnStats.data;\n  const meta = useSingleColumnMeta(name);\n  const { data: statsData} = useFilteredColumnStats(name) || {};\n  const reduxRange = useSelector(state => state.agColDefs.filters[name])?.range;\n  const reduxFilterNull = useSelector(state => state.agColDefs.filters[name])?.null;\n\n  const defaultRange = useMemo(() => [\n    reduxRange?.[0] ?? statsData?.bin?.min,\n    reduxRange?.[1] ?? statsData?.bin?.max\n  ], [reduxRange, statsData?.bin?.min, statsData?.bin?.max]);\n\n  const initialBufferFilters = useMemo(() => ({\n    range: defaultRange,\n    null: reduxFilterNull || 'include',\n  }), [defaultRange, reduxFilterNull]);\n\n  const [bufferFilters, setBufferFilters] = useState(initialBufferFilters);\n\n  // This is a trick to force the bar chart to re-render when the brush range changes\n  const [keyBarChart, setKeyBarChart] = useState(0);\n\n\n  const onRangeChange = ({startValue, endValue}) => {\n    setBufferFilters({null: 'exclude', range: [parseFloat(startValue), parseFloat(endValue)]});\n  }\n  const setLowerBound = (value) => {\n    setBufferFilters({null: 'exclude', range: [parseFloat(value), bufferFilters.range[1]]});\n  }\n  const setUpperBound = (value) => {\n    setBufferFilters({null: 'exclude', range: [bufferFilters.range[0], parseFloat(value)]});\n  }\n  const setFilterNull = (value) => {\n    setBufferFilters({...bufferFilters, null: value});\n  }\n\n  const applyFilters = () => {\n    const filter = {\n      filterType: 'myRange',\n      range: bufferFilters.range,\n      null: !meta.hasNull ? 'N/A' : bufferFilters.null,\n    };\n    setColumnFilterAndRefreshData(dispatch, name, filter);\n  }\n\n  const onCancelChanges = useCallback(() => {\n    setBufferFilters(initialBufferFilters);\n    setKeyBarChart(keyBarChart + 1);\n  }, [initialBufferFilters, keyBarChart]);\n\n\n  const rangeMinWarning = (\n    <InfoCard title=\"Range Min is inclusive\">\n      <Typography>\n        In the histogram above, lower bound of each bin is NOT inclusive.\n      </Typography>\n      <Typography>\n        {'When we translate the visual brush to SQL, the lower bound becomes inclusive, '}\n        {'in order to match people\\'s intuition.'}\n      </Typography>\n    </InfoCard>\n  );\n\n\n\n  return (\n    <Box sx={{height: '100%', display: 'flex', flexDirection: 'column', gap: 1}}>\n        <BorderedBox sx={{display: 'flex', flexDirection: 'column', gap: 1}}>\n          <StatsCount columnName={name}/>\n          {!meta.hasNull ? null : <NullFilterRadio filterNull={bufferFilters.null} setFilterNull={setFilterNull}/>}\n        </BorderedBox>\n\n\n        <MyBarChart key={keyBarChart} columnStats={data} size={150} showBrush={true} onRangeChange={onRangeChange}/>\n\n        <Box sx={{display: 'flex', gap: 2, mt: 2}}>\n          <MyNumberField\n            label={<TextWithAddon text=\"Range Min (Inclusive)\" addon={rangeMinWarning}/>}\n            value={bufferFilters.range[0]} onValueChange={setLowerBound}/>\n          <MyNumberField label=\"Range Max (Inclusive)\" value={bufferFilters.range[1]} onValueChange={setUpperBound}/>\n        </Box>\n        <FilterCardBottomButtons columnName={name} cancelChanges={onCancelChanges} applyFilters={applyFilters} />\n\n      </Box>\n\n\n );\n});\n\nHistogramFilter.displayName = 'HistogramFilter';\n\nexport default HistogramFilter;","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { MyTextField } from '@/components/elements/Controls';\nimport { setColumnFilterAndRefreshData } from '@/store/agColDefsSlice';\nimport React from 'react';\nimport StatsCount from '@/components/table/ColumnStats/StatsCount';\nimport NullFilterRadio from './NullFilterRadio';\nimport { BorderedBox } from '@/components/elements/displays';\nimport FilterCardBottomButtons from './FilterCardBottomButtons';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\n\n\nconst TextFilter = React.memo(({ name }) => {\n  const dispatch = useDispatch();\n  const meta = useSingleColumnMeta(name);\n  const reduxFilters = useSelector(state => state.agColDefs.filters[name]);\n  const initialBufferFilters = {\n    contains: reduxFilters?.contains || '',\n    null: reduxFilters?.null || 'include',\n  };\n  const [bufferFilters, setBufferFilters] = useState(initialBufferFilters);\n\n\n  const applyFilters = () => {\n    const filter = {\n      filterType: 'myText',\n      contains: bufferFilters.contains,\n      null: bufferFilters.null,\n    };\n    setColumnFilterAndRefreshData(dispatch, name, filter);\n  }\n\n  const onCancelChanges = () => {\n    setBufferFilters(initialBufferFilters);\n  }\n\n  const setFilterContains = (value) => {\n    setBufferFilters({null: 'exclude', contains: value});\n  }\n\n  const setFilterNull = (value) => {\n    setBufferFilters({...bufferFilters, null: value});\n  }\n\n\n  return (\n\n    <Box sx={{height: '100%', display: 'flex', flexDirection: 'column', gap: 1}}>\n\n        <BorderedBox sx={{display: 'flex', flexDirection: 'column', gap: 1, mb: 1}}>\n          <StatsCount columnName={name}/>\n          {!meta.hasNull ? null : <NullFilterRadio filterNull={bufferFilters.null} setFilterNull={setFilterNull}/>}\n        </BorderedBox>\n\n        <MyTextField value={bufferFilters.contains} label=\"Filter by text containing\" onValueChange={setFilterContains}/>\n\n        <FilterCardBottomButtons columnName={name} cancelChanges={onCancelChanges} applyFilters={applyFilters} />\n\n      </Box>\n\n\n );\n});\n\nTextFilter.displayName = 'TextFilter';\n\nexport default TextFilter;","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { setColumnFilterAndRefreshData, removeColumnFilterAndRefreshData } from '@/store/agColDefsSlice';\nimport React from 'react';\n\nconst MiniTextFilter = React.memo(({ name }) => {\n  const dispatch = useDispatch();\n  const reduxContains = useSelector(state => state.agColDefs.filters[name])?.contains || '';\n  const [filterContains, setFilterContains] = useState(reduxContains);\n\n\n  const applyFilters = () => {\n\n    if (filterContains.trim() === '') {\n      if (reduxContains === '') {\n        return;\n      } else {\n        removeColumnFilterAndRefreshData(dispatch, name);\n      }\n\n    } else {\n      const filter = {\n        filterType: 'myText',\n        contains: filterContains,\n        null: 'exclude'\n      };\n      setColumnFilterAndRefreshData(dispatch, name, filter);\n    }\n\n  }\n\n  return (\n\n    <TextField\n      hiddenLabel={Boolean(filterContains)}\n      size='small'\n      type='text'\n      label={filterContains ? null : 'Filter by text containing'}\n      variant='filled'\n      value={filterContains}\n      onChange={(e) => setFilterContains(e.target.value)}\n      onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            applyFilters();\n          }\n        }}\n      onBlur={applyFilters}\n      sx={{width: '100%'}}\n    />\n\n\n\n );\n});\n\nMiniTextFilter.displayName = 'MiniTextFilter';\n\nexport default MiniTextFilter;","import { Box } from '@mui/material';\nimport ClickCard from '@/components/elements/ClickCard';\nimport NullPie from '@/components/table/ColumnStats/NullPie';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { isMissing } from '@/utils/helpers';\n\nconst CellWithDistribution = React.memo(({ name, data, miniVisual, mainVisual, cardHeight='auto' }) => {\n    const height = useSelector((state) => state.settings.heightOfColumnDistribution);\n    const meta = useSingleColumnMeta(name);\n\n    if (isMissing(meta)) {\n        return null;\n    }\n\n      const trigger = (\n        <Box\n          className={'card-trigger'}\n          sx={{width: '100%', height, display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 1}}\n        >\n          <Box sx={{flex: 0}}>\n            <NullPie columnName={name}/>\n          </Box>\n          <Box sx={{flex: 1, minWidth: 0}}>\n            {miniVisual}\n          </Box>\n        </Box>\n      );\n\n      return (\n        <ClickCard trigger={trigger} tooltip={null} title={`${name} : ${meta.duckdbType}`} width={600} height={cardHeight}>\n          {mainVisual}\n        </ClickCard>\n      );\n});\n\nCellWithDistribution.displayName = 'CellWithDistribution';\n\nexport default CellWithDistribution;","import { Box } from '@mui/material';\nimport ClickCard from '@/components/elements/ClickCard';\nimport NullPie from '@/components/table/ColumnStats/NullPie';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { isMissing } from '@/utils/helpers';\n\n\nconst CellWithQuickFilter = React.memo(({ name, quickFilter, mainFilter }) => {\n  const height = useSelector((state) => state.settings.heightOfColumnDistribution);\n  const meta = useSingleColumnMeta(name);\n\n  if (isMissing(meta)) {\n    return null;\n  }\n\n  const trigger = <NullPie columnName={name}/>\n  const clickCard = (\n    <ClickCard\n      trigger={trigger}\n      tooltip={null}\n      title={`${name} : ${meta.duckdbType}`}\n      width={600}\n      height='auto'>\n      {mainFilter}\n    </ClickCard>\n  );\n  return (\n    <Box sx={{\n      width: '100%', height,\n      display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 1\n      }}>\n      <Box  sx={{flex: 0}}>\n        {clickCard}\n      </Box>\n      <Box sx={{flex: 1, minWidth: 0}}>\n        {quickFilter}\n      </Box>\n    </Box>\n  );\n\n});\n\nCellWithQuickFilter.displayName = 'CellWithQuickFilter';\n\nexport default CellWithQuickFilter;","'use client';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useBaselineColumnStats, useFilteredColumnStats } from '@/hooks/useColumnStats';\n\nimport MyTreeMap from '@/components/elements/MyTreeMap';\n\nimport MyBarChart from '@/components/elements/MyBarChart';\nimport EnumFilter from '@/components/filters/EnumFilter';\nimport HistogramFilter from '@/components/filters/HistogramFilter';\nimport TextFilter from '@/components/filters/TextFilter';\nimport React from 'react';\nimport MiniTextFilter from '@/components/filters/MiniTextFilter';\nimport { MyTooltip } from '@/components/elements/displays';\nimport CellWithDistribution from './CellWithDistribution';\nimport CellWithQuickFilter from './CellWithQuickFilter';\nimport { useSingleColumnPreference } from '@/hooks/useColumnPreference';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { RENDER_TYPES } from '@/constants';\nimport useSetting from '@/hooks/useSetting';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n\nconst TextCell = React.memo(function TextCell({text, height}) {\n\n  return (\n    <Box sx={{\n      display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', height,\n      }}>\n      <Typography variant=\"body1\">{text}</Typography>\n    </Box>\n  )\n});\n\nconst ColumnStatsCell = React.memo(({ name }) => {\n  const { value: height} = useSetting('heightOfColumnDistribution');\n\n  const colPref = useSingleColumnPreference(name);\n  const colMeta = useSingleColumnMeta(name);\n  const baselineColumnStats = useBaselineColumnStats(name);\n  const filteredColumnStats = useFilteredColumnStats(name);\n\n  const data = filteredColumnStats?.data;\n\n\n\n  if (colMeta?.allNull) {\n    return <TextCell text=\"All NULL\" height={height} />;\n  }\n\n  if (baselineColumnStats.loading || filteredColumnStats.loading) {\n    return <CircularProgress size={height} />\n  }\n\n  if (baselineColumnStats.error || filteredColumnStats.error) {\n    return <MyTooltip title={baselineColumnStats.error || filteredColumnStats.error}><ErrorIcon color=\"error\" /></MyTooltip>;\n  }\n\n\n\n  switch (colPref?.renderType) {\n    case RENDER_TYPES.NUMBER:\n      return (\n        <CellWithDistribution\n          name={name}\n          data={data}\n          miniVisual={<MyBarChart columnStats={data} size={height} />}\n          mainVisual={<HistogramFilter name={name}/>}\n        />\n      )\n    case RENDER_TYPES.CATEGORY:\n      return (\n        <CellWithDistribution\n          name={name}\n          data={data}\n          miniVisual={<MyTreeMap columnStats={data} size={height}/>}\n          mainVisual={<EnumFilter name={name}/>}\n          cardHeight={600}\n        />\n      )\n    case RENDER_TYPES.TEXT:\n      return (\n        <CellWithQuickFilter\n          name={name}\n          quickFilter={<MiniTextFilter name={name}/>}\n          mainFilter={<TextFilter name={name} data={data}/>}\n        />\n      )\n    default:\n      return (\n        <TextCell text={colPref?.renderType} height={height} />\n      )\n  }\n});\n\nColumnStatsCell.displayName = 'ColumnStatsCell';\n\nexport default ColumnStatsCell;","'use client';\n\nimport { useState } from 'react';\nimport { Box, Popover } from '@mui/material';\nimport React from 'react';\nimport { SX_CARD } from '@/utils/styles';\n\n\nconst CellRightClickCard = React.memo(function CellRightClickCard({children, sx}) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n\n  const handleOpenContextMenu = (event) => {\n    event.preventDefault();\n    setMenuAnchorEl(event.currentTarget);\n    setMenuOpen(true);\n  };\n\n  const handleCloseContextMenu = () => {\n    setMenuOpen(false);\n    setMenuAnchorEl(null);\n  };\n\n  return (\n          <Box onContextMenu={handleOpenContextMenu} sx={{\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n          }}>\n            {/* A transparent box taking full height to capture right click event */}\n            <Popover\n                open={menuOpen}\n                anchorEl={menuAnchorEl}\n                onClose={handleCloseContextMenu}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n            >\n              <Box sx={{\n                  ...SX_CARD,\n                  display: 'flex', flexDirection: 'column', gap: 1,\n                  ...sx, padding: 1\n              }}>\n\n                  {children}\n              </Box>\n            </Popover>\n          </Box>\n\n        )\n\n});\n\n\nexport default CellRightClickCard;","import React from 'react';\nimport useSetting from '@/hooks/useSetting';\nimport { Box, Divider } from '@mui/material';\nimport CellRightClickCard from '@/components/table/rightClickMenu/CellRightClickCard';\nimport { AutoLink } from '@/components/elements/AutoLink';\nimport { TopButtons } from '@/components/table/rightClickMenu/TopButtons';\n\n\nexport const IFrameVisualizationCell = React.memo(function IFrameVisualizationCell({name='', value, colDef=null}) {\n    const largeSize = 600;\n    const url = value;\n\n    const { value: size } = useSetting('tableMaxRowHeight');\n\n    if (!url) return String(value);\n\n    return (\n        <Box>\n            <iframe\n                style={{width: size, height: size, pointerEvents: 'none'}}\n                src={url + `&size=${size}`}\n            >\n            </iframe>\n        <CellRightClickCard sx={{width: largeSize + 10}}>\n            {name && colDef && <TopButtons name={name} value={value} colDef={colDef} showCopy={false} />}\n            <Divider />\n            <AutoLink url={url} />\n            <iframe style={{width: largeSize, height: largeSize}} src={url + `&size=${largeSize}`}></iframe>\n        </CellRightClickCard>\n        </Box>\n    );\n});\n\n","'use client';\nimport { RenderTypeIcon } from '@/components/IconControls/RenderTypeIcon';\nimport { DropdownColumnPinIcon } from '@/components/IconControls/ColumnPinIcon';\nimport ColumnHideIcon from '@/components/IconControls/ColumnHideIcon';\n\nimport { Box } from '@mui/material';\nimport React from 'react';\nimport { CopyToClipboardButton } from '@/components/elements/Controls';\n\n\n\nexport const TopButtons = React.memo(function TopButtons({name, value, colDef, showCopy=true}) {\n\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'row', gap: 1, alignItems: 'center', padding: 1}}>\n      {showCopy && <CopyToClipboardButton value={value} />}\n      <ColumnHideIcon columnName={name} hide={colDef?.hide}/>\n      <RenderTypeIcon columnName={name} />\n      <DropdownColumnPinIcon columnName={name} pinned={colDef?.pinned}/>\n\n    </Box>\n  )\n\n});\n\n\n","import BrushIcon from '@mui/icons-material/Brush';\nimport NumbersIcon from '@mui/icons-material/Numbers';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport ImageOutlinedIcon from '@mui/icons-material/ImageOutlined';\nimport CategoryOutlinedIcon from '@mui/icons-material/CategoryOutlined';\nimport VideoCameraBackOutlinedIcon from '@mui/icons-material/VideoCameraBackOutlined';\nimport React from 'react';\nimport DataObjectOutlinedIcon from '@mui/icons-material/DataObjectOutlined';\nimport { RENDER_TYPES } from '@/constants';\nimport LinkIcon from '@mui/icons-material/Link';\n\n\nexport const ICONS_FOR_RENDER_TYPE = {\n    [RENDER_TYPES.TEXT]: <TextFieldsIcon/>,\n    [RENDER_TYPES.NUMBER]: <NumbersIcon/>,\n    [RENDER_TYPES.CATEGORY]: <CategoryOutlinedIcon/>,\n    [RENDER_TYPES.IMAGE_URL]: <ImageOutlinedIcon/>,\n    [RENDER_TYPES.VIDEO_URL]: <VideoCameraBackOutlinedIcon/>,\n    [RENDER_TYPES.JSON]: <DataObjectOutlinedIcon/>,\n    [RENDER_TYPES.IFRAME]: <BrushIcon/>,\n    [RENDER_TYPES.LINK]: <LinkIcon/>,\n};","import { useSelector } from 'react-redux';\nimport { themeAlpine, colorSchemeDark, colorSchemeLight, iconOverrides } from 'ag-grid-community';\nimport useMUITheme from './useMUITheme';\n\nconst useAGGridTheme = ({noCellPadding=false}) => {\n  const mode = useSelector((state) => state.settings.mode) || 'light';\n  const muiTheme = useMUITheme();\n  const tableSpacing = 2;\n\n  const fontAwesomeIcons = iconOverrides({\n    type: 'font',\n    family: 'Font Awesome 6 Free',\n    cssImports: ['https://use.fontawesome.com/releases/v6.7.0/css/all.css'],\n    weight: 'bold', // Font Awesome requires bold font weight\n    icons: {\n        // use font codes documented by Font Awesome e.g. '\\u{f062}' == arrow-up\n        asc: '\\u{f062}',\n        desc: '\\u{f063}',\n        none: '\\u{f0dc}',\n    },\n})\n  const params = {\n    spacing: tableSpacing,\n    fontSize: muiTheme.typography.fontSize,\n    cellTextColor: muiTheme.palette.text.secondary,\n    backgroundColor: muiTheme.palette.background.paper,\n    headerBackgroundColor: muiTheme.palette.background.pinned,\n    headerTextColor: muiTheme.palette.text.primary,\n    selectedRowBackgroundColor: 'inherit'\n  };\n\n  if (noCellPadding) {\n    params.cellHorizontalPaddingScale = 0;\n    params.cellVerticalPaddingScale = 0;\n  }\n\n  return themeAlpine.withPart(mode === 'dark' ? colorSchemeDark : colorSchemeLight).withPart(\n    fontAwesomeIcons\n  ).withParams(params);\n}\n\nexport default useAGGridTheme;","import { columnMetaSlice } from './dataSlice';\nimport { runQuery } from '@/utils/api';\nimport _ from 'lodash';\nimport { matchDerivedColumns, addDerivedColumn } from '@/store/derivedColumnsSlice';\n\nfunction normalizeType(type) {\n  return type.toUpperCase().replace(/\\(\\d+,?\\d*\\)/, ''); // Remove parameters like in DECIMAL(10,2)\n}\n\nconst DUCKDB_TYPES = {\n  INTEGER: [ 'TINYINT', 'SMALLINT', 'INTEGER', 'BIGINT', 'HUGEINT',\n    'UTINYINT', 'USMALLINT', 'UINTEGER', 'UBIGINT'],\n  BOOLEAN: ['BOOLEAN'],\n  FLOAT: ['FLOAT', 'DOUBLE', 'DECIMAL', 'REAL'],\n  STRING: ['VARCHAR', 'CHAR', 'STRING', 'TEXT', 'BINARY'],\n  DATETIME: ['TIMESTAMP', 'DATE', 'TIME', 'TIMESTAMP_NS'],\n}\n\n\nfunction computeTypeShortcuts(type) {\n  const normalizedType = normalizeType(type);\n  const isInteger = DUCKDB_TYPES.INTEGER.includes(normalizedType);\n  const isFloat = DUCKDB_TYPES.FLOAT.includes(normalizedType);\n  const isString = DUCKDB_TYPES.STRING.includes(normalizedType);\n  const isNumeric = isInteger || isFloat;\n  const isBoolean = DUCKDB_TYPES.BOOLEAN.includes(normalizedType);\n  const isDatetime = DUCKDB_TYPES.DATETIME.includes(normalizedType);\n  const agType = isNumeric ? 'number' : isBoolean ? 'boolean' : isDatetime ? 'dateString' : 'text';  // TODO: deal with date\n  const isPrimitive = isNumeric || isBoolean || isString;\n\n  return {isInteger, isFloat, isNumeric, isBoolean, isString, isPrimitive, agType, isDatetime};\n}\n\nfunction parseValue(typeShortcuts, valueString) {\n  if (typeShortcuts.isInteger) {\n    return parseInt(valueString);\n  } else if (typeShortcuts.isFloat) {\n    return parseFloat(valueString);\n  } else if (typeShortcuts.isBoolean) {\n    return valueString === 'true';\n  } else if (typeShortcuts.isString) {\n    return valueString;\n  } else {\n    return valueString;\n  }\n}\n\nconst parseColumnMeta = (data) => {\n  return _(data).map(item => {\n    const typeShortcuts = computeTypeShortcuts(item.column_type);\n    const hasNull = item.cntNull > 0;\n    const allNull = item.cntAll > 0 && item.cntAll === item.cntNull;\n    const meta = {\n      name: item.column_name,\n      duckdbType: item.column_type,\n      singleValue: item.singleValue,\n      ...typeShortcuts,\n      min: parseValue(typeShortcuts, item.min),\n      max: parseValue(typeShortcuts, item.max),\n      isDerived: false,\n      hasNull,\n      allNull,\n      ..._.pick(item, ['cntAll', 'cntNull', 'maxCntDPerGroup', 'isPlainEncoding'])\n    };\n    return [item.column_name, meta];\n  }).fromPairs().value();\n};\n\n\nexport const fetchParquetMeta = async ({dispatch, tableExpr, sqlKey}) => {\n  const metaExpr = tableExpr.replace('read_parquet', 'parquet_metadata');\n  const conditionExcludeListDict = `\n    path_in_schema NOT LIKE '%, key_value, %' \n    AND path_in_schema NOT LIKE '%, list, element%'\n  `;\n  const queryStructColumns = `\n    SELECT DISTINCT REPLACE(path_in_schema, ', ', '.') AS column_name\n    FROM ${metaExpr}\n    WHERE path_in_schema LIKE '%, %' AND ${conditionExcludeListDict}\n    `;\n\n  const structColumnsData = await runQuery({dispatch, key: sqlKey, query: queryStructColumns, transformResult: 'dictOfLists'});\n  const structColumns = (structColumnsData?.column_name || []).filter(c => !c.includes(' '));\n\n\n  const allColumnsExpr = ['*', ..._.map(structColumns, c => `${c} AS \"${c}\"`)].join(',');\n\n\n  const query = `WITH meta AS (\n    SELECT \n        REPLACE(path_in_schema, ', ', '.') AS column_name, ---  TODO column name may contain spaces\n        SUM(num_values) AS cntAll,\n        SUM(stats_null_count) AS cntNull,\n        MIN(stats_min_value) AS min,\n        MAX(stats_max_value) AS max,\n        MAX(stats_distinct_count) AS maxCntDPerGroup,\n        BOOL_AND(encodings = 'PLAIN') AS isPlainEncoding\n    FROM ${metaExpr}\n    WHERE ${conditionExcludeListDict}\n    GROUP BY path_in_schema\n  )\n  SELECT column_name, column_type, cntAll,\n    --- Sometimes parquet metadata may be wrong for columns with all null values\n    (CASE WHEN (min IS NULL AND max IS NULL) THEN cntAll WHEN ((min IS NULL OR max IS NULL) AND cntNull = 0) THEN cntAll ELSE cntNull END) AS cntNull,\n    min, max, maxCntDPerGroup, isPlainEncoding,\n    (min = max AND min IS NOT NULL) AS singleValue\n  FROM (DESCRIBE SELECT ${allColumnsExpr} FROM ${tableExpr})\n      LEFT JOIN meta USING (column_name)\n  `;\n  return await runQuery({dispatch, key: sqlKey, query: query});\n}\n\nexport const fetchCsvMeta = async ({dispatch, tableExpr, sqlKey}) => {\n  const query = `\n  SELECT column_name, column_type, count AS cntAll, CEIL(count * null_percentage) AS cntNull, min, max\n  FROM (SUMMARIZE SELECT * FROM ${tableExpr})\n  `;\n  return await runQuery({dispatch, key: sqlKey, query: query});\n}\n\nexport const fetchColumnMeta = () => async (dispatch, getState) => {\n  const { data, loading, error, shouldRefresh } = getState().columnMeta || { data: null, loading: false, error: null, shouldRefresh: false };\n\n  if ((data || loading || error) && !shouldRefresh) return; // 👈 Already loading or loaded — skip!\n\n\n  dispatch(columnMetaSlice.actions.fetchStart());\n\n  try {\n    const { tableExpr, fileFormat } = getState().dataFile;\n    const categoricalThreshold = getState().settings.thresholdCategorical;\n    const sqlKey = 'columnMeta';\n    const fetcher = {\n      parquet: fetchParquetMeta,\n      csv: fetchCsvMeta,\n    }[fileFormat];\n    const data = await fetcher({dispatch, tableExpr, sqlKey, categoricalThreshold});\n\n    const initialOrder = _.map(data, 'column_name');\n    const meta = parseColumnMeta(data);\n    const countRows = data?.[0]?.cntAll;\n    const primitiveColumns = _.filter(initialOrder, c => meta[c].isPrimitive);\n\n    // Match potential derived columns for visualization\n    const derivedColumns = matchDerivedColumns(meta);\n    derivedColumns.forEach(col => {\n      dispatch(addDerivedColumn(col));\n    });\n\n    const parsedData = {\n      initialOrder, meta, primitiveColumns, countRows\n    };\n    dispatch(columnMetaSlice.actions.fetchSuccess(parsedData));\n  } catch (err) {\n    console.error(err);\n    dispatch(columnMetaSlice.actions.fetchError(err.message));\n  }\n};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchRowData } from '@/store/rowDataSlice';\nimport { initialState } from '@/store/dataSlice';\nimport { isMissing } from '@/utils/helpers';\nimport { fetchBoxPlotData } from '@/store/boxPlotSlice';\nimport { fetchBubblePlotData } from '@/store/bubblePlotSlice';\nimport { fetchColumnMeta } from '@/store/columnMetaSlice';\nimport { fetchHeatMap } from '@/store/heatMapSlice';\nimport { fetchHistogramData } from '@/store/histogramSlice';\nimport { useColumnDefs } from '@/hooks/useColumnDefs';\nimport { initSettingsSlice } from '@/store/dataSlice';\nimport { updateSettings } from '@/store/settingsSlice';\nimport { useFilteredColumnStats } from '@/hooks/useColumnStats';\nimport { useDerivedColumnMeta } from '@/hooks/useDrivedColumn';\nimport { API_PREFIX } from '@/utils/urls';\n\nconst useApiData = ({selector, action, shouldWait}) => {\n  const dispatch = useDispatch();\n\n  const { data, loading, error, shouldRefresh } = useSelector(selector) || initialState;\n  const dataIsNull = (data === null);\n\n  useEffect(() => {\n    if (!shouldWait && (dataIsNull || shouldRefresh)) {\n      dispatch(action);\n    }\n  }, [dispatch, dataIsNull, shouldRefresh, action, shouldWait]);\n\n  return { data, loading, error, dataIsNull };\n};\n\nexport const useAllColumnsMeta = () => {\n  const selector = state => state.columnMeta;\n  const action = fetchColumnMeta();\n  return useApiData({selector, action});\n};\n\nexport const useSingleColumnMeta = (columnName) => {\n  const { data, loading, error } = useAllColumnsMeta();\n\n  const dC = useDerivedColumnMeta(columnName);\n\n  if (dC) {\n    return dC;\n  } else {\n    return data?.meta[columnName];\n  }\n};\n\n\nexport const useRowData = () => {\n  const { columnDefs } = useColumnDefs();\n  const selector = state => state.rowData;\n  const action = fetchRowData();\n  return useApiData({selector, action, shouldWait: columnDefs.length === 0});\n};\n\nexport const useBoxPlotData = () => {\n  const selector = state => state.boxPlot;\n  const boxPlotColumns = useSelector(state => state.settings.boxPlotColumns) || [];\n  const shouldWait = boxPlotColumns.length === 0;\n  const action = fetchBoxPlotData({boxPlotColumns});\n  return useApiData({selector, action, shouldWait});\n};\n\nexport const useBubblePlotData = () => {\n  const selector = state => state.bubblePlot;\n  const bubblePlotXColumn = useSelector(state => state.settings.bubblePlotXColumn);\n  const bubblePlotYColumn = useSelector(state => state.settings.bubblePlotYColumn);\n  const { data: xStatsData} = useFilteredColumnStats(bubblePlotXColumn);\n  const xBin = xStatsData?.bin;\n  const { data: yStatsData} = useFilteredColumnStats(bubblePlotYColumn);\n  const yBin = yStatsData?.bin;\n  const shouldWait = isMissing(bubblePlotXColumn) || isMissing(bubblePlotYColumn) || isMissing(xBin) || isMissing(yBin);\n  const action = fetchBubblePlotData({bubblePlotXColumn, bubblePlotYColumn, xBin, yBin});\n  return useApiData({selector, action, shouldWait});\n};\n\nexport const useHeatMapData = () => {\n  const selector = state => state.heatMap;\n  const heatmapXColumn = useSelector(state => state.settings.heatmapXColumn);\n  const heatmapYColumn = useSelector(state => state.settings.heatmapYColumn);\n\n  const shouldWait = isMissing(heatmapXColumn) || isMissing(heatmapYColumn);\n  const action = fetchHeatMap({heatmapXColumn, heatmapYColumn});\n  return useApiData({selector, action, shouldWait});\n};\n\nexport const useHistogramData = () => {\n  const selector = state => state.histogram;\n\n  const histogramColumn = useSelector(state => state.settings.histogramColumn);\n  const { data: histogramStatsData} = useFilteredColumnStats(histogramColumn);\n  const bin = histogramStatsData?.bin;\n  const shouldWait = isMissing(histogramColumn) || isMissing(bin);\n  const action = fetchHistogramData({histogramColumn, bin});\n  return useApiData({selector, action, shouldWait});\n};\n\nexport const useInitSettings = () => {\n  const selector = state => state.initSettings;\n\n  const action = async (dispatch, getState) => {\n    const { data, loading, shouldRefresh } = getState().initSettings || initialState;\n    if ((data || loading) && !shouldRefresh) return; // 👈 Already loading or loaded — skip!\n\n    dispatch(initSettingsSlice.actions.fetchStart());\n    try {\n        const response = await fetch(`${API_PREFIX}/settings`);\n        const settings = await response.json();\n        dispatch(initSettingsSlice.actions.fetchSuccess(settings));\n        dispatch(updateSettings(settings));\n\n    } catch (err) {\n      console.error(err);\n      dispatch(initSettingsSlice.actions.fetchError(err.message));\n    }\n\n  };\n  return useApiData({selector, action});\n};","import { useSelector, useDispatch } from 'react-redux';\nimport { isMissing } from '@/utils/helpers';\nimport { runQuery } from '@/utils/api';\nimport { useEffect, useCallback } from 'react';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { sanitizeName } from '@/utils/sql/helpers';\nimport { cardinalitySlice } from '@/store/dataSlice';\n\n\nconst fetchCardinalityData = ({columnName, actions, sqlKey, query}) => async (dispatch, getState) => {\n  const { data, loading, error, shouldRefresh } = getState().cardinality[columnName] || {};\n  if ((data || loading) && !shouldRefresh) return; // 👈 Already loading or loaded — skip!\n\n  dispatch(actions.fetchStart({name: columnName}));\n\n  try {\n    const result = await runQuery({dispatch, key: sqlKey, query});\n    dispatch(actions.fetchSuccess({name: columnName, ...result[0]}));\n  } catch (err) {\n    console.error(`error fetching cntD for ${columnName}`, err);\n    dispatch(actions.fetchError({error: err.message, name: columnName}));\n  }\n};\n\n\nexport const useCardinality = (columnName) => {\n  const dispatch = useDispatch();\n  const actions = cardinalitySlice.actions;\n  const meta = useSingleColumnMeta(columnName);\n  const categoricalThreshold = useSelector(state => state.settings.thresholdCategorical);\n  const tableExpr = useSelector(state => state.dataFile.tableExpr);\n  const e = sanitizeName(columnName);\n\n  const query = `\n    SELECT approx_count_distinct(${e}) AS approxCntD,\n    CASE\n      WHEN approxCntD <= 1000 THEN COUNT(DISTINCT ${e})\n      ELSE NULL\n    END AS cntD,\n    CASE WHEN approxCntD <= 1000 THEN 'low' ELSE 'high' END AS cardinality\n    FROM ${tableExpr} WHERE ${e} IS NOT NULL\n  `;\n\n  const sqlKey = `cardinality-${columnName}`;\n  const { data, loading, error, shouldRefresh } = useSelector(state => state.cardinality[columnName]) || {};\n\n  const shouldInit = isMissing(data) && !loading && !error && !isMissing(query) && !isMissing(meta);\n\n  const inferCardinality = useCallback(({cnt, cardinality}) => {\n    dispatch(actions.fetchSuccess({name: columnName, approxCntD: cnt, cntD: cnt, cardinality}));\n  }, [dispatch, actions, columnName]);\n\n  useEffect(() => {\n    if (shouldInit || shouldRefresh) {\n      const { isBoolean, allNull, singleValue, isString, isInteger, maxCntDPerGroup, isPlainEncoding, isDerived } = meta;\n      if (isDerived) {\n        inferCardinality({cnt: null, cardinality: 'high'});\n      } else if (allNull) {\n        inferCardinality({cnt: 0, cardinality: 'low'});\n      } else if (singleValue) {\n        inferCardinality({cnt: 1, cardinality: 'low'});\n      } else if (isBoolean) {\n        inferCardinality({cnt: 2, cardinality: 'low'});\n      } else if (maxCntDPerGroup > categoricalThreshold || isPlainEncoding) {\n        // We know from metadata that this column cannot be low cardinality\n        inferCardinality({cnt: null, cardinality: 'high'});\n      } else if (isString || isInteger) {\n        dispatch(fetchCardinalityData({columnName, actions, sqlKey, query}));\n      } else {\n        inferCardinality({cnt: null, cardinality: 'unknown'});\n      }\n    }\n  }, [dispatch, shouldInit, shouldRefresh, columnName, query, actions, sqlKey, meta, categoricalThreshold, inferCardinality]);\n\n   return {data, loading, error, sqlKey};\n}\n","'use client';\nimport { Box, Divider } from '@mui/material';\nimport { proxyedUrl } from '@/utils/urls';\nimport React from 'react';\nimport useSetting from '@/hooks/useSetting';\nimport { ImageBox } from '@/components/elements/ImageBox';\nimport CellRightClickCard from '@/components/table/rightClickMenu/CellRightClickCard';\nimport { TopButtons } from '@/components/table/rightClickMenu/TopButtons';\n\nexport const ImageBoxCell = React.memo(function ImageBoxCell({name, value, colDef}) {\n  const url = value;\n  const {value: size } = useSetting('tableMaxRowHeight');\n  const largeSize = 500;\n  const proxyUrl = proxyedUrl(url);\n\n  return (\n    <Box>\n      <img src={proxyUrl} alt={name} style={{objectFit: 'cover', width: size, height: size}} />\n      <CellRightClickCard>\n        <TopButtons name={name} value={value} colDef={colDef} />\n        <Divider />\n        <ImageBox url={url} size={largeSize} cropSquare={false} showUrl={true} />\n      </CellRightClickCard>\n    </Box>\n  );\n});\n","'use client';\n\nimport { useState } from 'react';\nimport { Box, Popover } from '@mui/material';\nimport React from 'react';\nimport { SX_CARD } from '@/utils/styles';\n\n\nconst CellRightClickCard = React.memo(function CellRightClickCard({children, sx}) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n\n  const handleOpenContextMenu = (event) => {\n    event.preventDefault();\n    setMenuAnchorEl(event.currentTarget);\n    setMenuOpen(true);\n  };\n\n  const handleCloseContextMenu = () => {\n    setMenuOpen(false);\n    setMenuAnchorEl(null);\n  };\n\n  return (\n          <Box onContextMenu={handleOpenContextMenu} sx={{\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n          }}>\n            {/* A transparent box taking full height to capture right click event */}\n            <Popover\n                open={menuOpen}\n                anchorEl={menuAnchorEl}\n                onClose={handleCloseContextMenu}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n            >\n              <Box sx={{\n                  ...SX_CARD,\n                  display: 'flex', flexDirection: 'column', gap: 1,\n                  ...sx, padding: 1\n              }}>\n\n                  {children}\n              </Box>\n            </Popover>\n          </Box>\n\n        )\n\n});\n\n\nexport default CellRightClickCard;","\n\nimport { MenuItem, ListItemIcon, ListItemText } from '@mui/material';\nimport React from 'react';\n\nexport const MenuRow = React.memo(function MenuRow({icon, text, onClick}) {\n  return (\n    <MenuItem onClick={onClick}>\n      <ListItemIcon>\n        {React.cloneElement(icon, {fontSize: 'small'})}\n      </ListItemIcon>\n      <ListItemText>{text}</ListItemText>\n    </MenuItem>\n  )\n})\n\n","'use client';\n\nimport { useDispatch } from 'react-redux';\nimport { MenuList, Divider } from '@mui/material';\nimport React from 'react';\nimport GridViewOutlinedIcon from '@mui/icons-material/GridViewOutlined';\nimport { updateSettings } from '@/store/settingsSlice';\nimport { removeColumnFilterAndRefreshData } from '@/store/agColDefsSlice';\nimport FilterAltOffOutlinedIcon from '@mui/icons-material/FilterAltOffOutlined';\nimport { isMissing } from '@/utils/helpers';\nimport { useSelector } from 'react-redux';\nimport CellRightClickCard from '@/components/elements/CellRightClickCard';\nimport { MenuRow } from '@/components/table/rightClickMenu/MenuRow';\nimport { TopButtons } from '@/components/table/rightClickMenu/TopButtons';\n\n\n\nconst CellRightClickMenu = React.memo(function CellRightClickMenu({name, value, colDef}) {\n  const dispatch = useDispatch();\n\n  const hasFilter = !isMissing(useSelector(state => state.agColDefs.filters[name]));\n\n\n  const handleShowInGalleryCaption = () => {\n    dispatch(updateSettings({galleryCaptionColumn: name}));\n\n  };\n\n  const handleClearFilters = () => {\n    removeColumnFilterAndRefreshData(dispatch, name);\n\n  };\n\n\n  return (\n    <CellRightClickCard sx={{minWidth: 100}}>\n\n        <TopButtons name={name} value={value} colDef={colDef} />\n\n        <Divider />\n\n        <MenuList sx={{display: 'flex', flexDirection: 'column', gap: 0.5}}>\n            <MenuRow icon={<GridViewOutlinedIcon />} text=\"Show in Gallery caption\" onClick={handleShowInGalleryCaption} />\n            {hasFilter && <MenuRow icon={<FilterAltOffOutlinedIcon />} text=\"Clear filters\" onClick={handleClearFilters} />}\n        </MenuList>\n\n\n\n\n    </CellRightClickCard>\n\n    )\n\n});\n\n\nexport default CellRightClickMenu;","import React, { useEffect, useRef, useState } from 'react';\nimport { Box, Typography, Divider } from '@mui/material';\nimport CellRightClickCard from '@/components/elements/CellRightClickCard';\nimport CellRightClickMenu from '@/components/table/rightClickMenu/CellRightClickMenu';\nimport { isMissing } from '@/utils/helpers';\nimport { useSelector } from 'react-redux';\nimport { TopButtons } from '@/components/table/rightClickMenu/TopButtons';\n\nconst ExpandableTextCell = React.memo(({ columnName, text, colDef }) => {\n\n  const contentRef = useRef(null);\n  const [isOverflowed, setIsOverflowed] = useState(false);\n  const isJustClicked = useSelector(state => state.viewing.justClickedColumn === columnName);\n  const maxRowHeight = useSelector(state => state.settings.tableMaxRowHeight);\n\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      const el = contentRef.current;\n      if (el) {\n        setIsOverflowed(el.scrollHeight > el.clientHeight);\n      }\n    };\n    checkOverflow();\n\n    // Optional: recompute on window resize if width can change\n    window.addEventListener('resize', checkOverflow);\n    return () => window.removeEventListener('resize', checkOverflow);\n  }, [text]);\n\n\n  return (\n    <Box sx={{ maxHeight: maxRowHeight, overflow: 'hidden', }}>\n      <Typography\n        ref={contentRef}\n        variant=\"body2\"\n        sx={{\n          padding: 0.5,\n          overflow: 'hidden',\n          whiteSpace: 'normal',\n          wordBreak: 'break-word',\n          maxHeight: maxRowHeight,\n          color: isJustClicked ? 'primary.light' : 'text.secondary',\n        }}\n      >\n        {isMissing(text) ? '' : text}\n      </Typography>\n\n       {isOverflowed ? (\n        <CellRightClickCard sx={{width: 600}}>\n          <TopButtons name={columnName} value={text} colDef={colDef} />\n          <Divider />\n          <Typography\n            variant=\"body2\"\n            sx={{padding: 1}}\n          >\n            {text}\n          </Typography>\n        </CellRightClickCard>\n    ):  <CellRightClickMenu name={columnName} value={text} colDef={colDef} />}\n\n    </Box>\n  );\n});\n\nExpandableTextCell.displayName = 'ExpandableTextCell';\n\nexport default ExpandableTextCell;","\nimport { Typography } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport CellRightClickCard from '@/components/table/rightClickMenu/CellRightClickCard';\nimport { Box } from '@mui/material';\nimport { JsonBox } from '@/components/elements/JsonBox';\nimport { TopButtons } from '@/components/table/rightClickMenu/TopButtons';\nimport React from 'react';\nimport { Divider } from '@mui/material';\n\n\nexport const JsonBoxCell = React.memo(function JsonBoxCell({ name, value, colDef }) {\n  const obj = value;\n  const tableMaxRowHeight = useSelector(state => state.settings.tableMaxRowHeight);\n  if (!obj) {\n    return <Typography variant=\"body2\">{obj}</Typography>;\n  }\n\n\n  return (\n    <Box>\n      <Typography variant=\"body2\" color=\"inherit\" sx={{\n        padding: 0.5,\n        overflow: 'hidden', maxHeight: tableMaxRowHeight, whiteSpace: 'normal',\n      }}>\n        {JSON.stringify(obj)}\n      </Typography>\n\n      <CellRightClickCard sx={{width: 400}}>\n        <TopButtons name={name} value={value} colDef={colDef} showCopy={false} />\n        <Divider />\n        <JsonBox obj={obj} />\n      </CellRightClickCard>\n    </Box>\n  );\n});\n\n\n","'use client';\n\nimport { ImageBoxCell } from '@/components/table/rightClickMenu/ImageBoxCell';\n\nimport React from 'react';\nimport ExpandableTextCell from '@/components/table/ExpandableTextCell';\nimport { RENDER_TYPES } from '@/constants';\nimport { IFrameVisualizationCell } from '@/components/table/rightClickMenu/IFrameVisualizationCell';\nimport { useSingleColumnPreference } from '@/hooks/useColumnPreference';\nimport ColumnStatsCell from '@/components/table/ColumnStats/ColumnStatsCell';\nimport { JsonBoxCell } from '@/components/table/rightClickMenu/JsonBoxCell';\n\n\nconst AGCell = React.memo((props) => {\n\n  const { name, value, colDef } = props;\n  const colPref = useSingleColumnPreference(name);\n  const renderType = colPref?.renderType;\n\n  if (props.data?.isTopRow) {\n    return <ColumnStatsCell name={name}/>;\n  } else {\n    switch (renderType) {\n      case RENDER_TYPES.IMAGE_URL:\n        return <ImageBoxCell name={name} value={value} colPref={colPref}/>;\n      case RENDER_TYPES.JSON:\n        return <JsonBoxCell name={name} value={value} colDef={colDef} />;\n      case RENDER_TYPES.IFRAME:\n        return <IFrameVisualizationCell name={name} value={value} colDef={colDef}/>;\n      default:\n        return <ExpandableTextCell columnName={name} text={String(value)} colDef={colDef}/>;\n\n    }\n  }\n\n});\n\nAGCell.displayName = 'AGCell';\n\nexport default AGCell;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAllColumnsMeta } from '@/hooks/useApiData';\nimport { isMissing } from '@/utils/helpers';\nimport { setColumnDefs } from '@/store/agColDefsSlice';\nimport useMUITheme from '@/hooks/useMUITheme';\nimport AGCell from '@/components/table/AGCell';\nimport useSetting from '@/hooks/useSetting';\nimport _ from 'lodash';\nimport { useAllRenderTypes } from '@/hooks/useColumnPreference';\nimport { RENDER_TYPES } from '@/constants';\n\n\nexport const useColumnDefs = () => {\n  const dispatch = useDispatch();\n  const { data, loading, error } = useAllColumnsMeta() || {};\n  const columnDefs = useSelector((state) => state.agColDefs.columnDefs);\n  const derivedColumns = useSelector((state) => state.derivedColumns);\n  const shouldInit = !isMissing(data) && (isMissing(columnDefs) || _.isEmpty(columnDefs));\n\n  useEffect(() => {\n    if (shouldInit) {\n      // Initialize columnDefs\n      const { initialOrder, meta } = data;\n\n      const initialColumnDefs = initialOrder.map(name => ({\n        field: name, pinned: null, hide: false, cellDataType: meta[name].agType,\n      }));\n      const derivedColumnDefs = _.map(derivedColumns, (col) => ({\n        field: col.name, pinned: null, hide: false, cellDataType: 'text',\n      }));\n      const allColumnDefs = initialColumnDefs.concat(derivedColumnDefs);\n      dispatch(setColumnDefs(allColumnDefs));\n\n    }\n  }, [dispatch, shouldInit, data, derivedColumns]);\n\n  return { columnDefs, loading, error };\n};\n\nexport const useSingleColumnDef = (columnName) => {\n  const {columnDefs} = useColumnDefs();\n  return columnDefs.find(def => def.field === columnName);\n};\n\n\n\nexport const useDefaultColDef = () => {\n  const {value: defaultColumnWidth} = useSetting('tableDefaultColumnWidth');\n  return  {\n    sortable: true,\n    filter: false,\n    resizable: true,\n    minWidth: 80,\n    autoHeight: true,\n    width: defaultColumnWidth,\n    maxWidth: 800,\n    unSortIcon: true,\n    floatingFilter: false,\n    cellStyle: {\n      display: 'flex',\n      alignItems: 'center', // Vertically center the text\n      paddingBottom: '0px', // Remove bottom padding\n    },\n  };\n};\n\nconst headerTemplate = (muiTheme) => {\n  return `<div class=\"ag-cell-label-container\" \n              role=\"presentation\" \n              style=\"color: ${muiTheme.palette.primary.light}; background-color: ${muiTheme.palette.background.card}; font-size: ${muiTheme.typography.fontSize}px;\">\n          <span style=\"flex: 1;\"></span>\n          <div data-ref=\"eLabel\" \n               class=\"ag-header-cell-label\" \n               role=\"presentation\" \n               style=\"padding: 4px; max-width: 30px; margin-right: 15px;\">\n            <span data-ref=\"eSortOrder\" class=\"ag-header-icon ag-sort-order\"></span>\n            <span data-ref=\"eSortAsc\" class=\"ag-header-icon ag-sort-ascending-icon\" style=\"color: ${muiTheme.palette.primary.main};\"></span>\n            <span data-ref=\"eSortDesc\" class=\"ag-header-icon ag-sort-descending-icon\" style=\"color: ${muiTheme.palette.primary.main};\"></span>\n            <span data-ref=\"eSortNone\" class=\"ag-header-icon ag-sort-none-icon\" style=\"color: ${muiTheme.palette.text.tertiary};\"></span>\n            \n          </div>\n            \n          <span data-ref=\"eText\" \n                class=\"ag-header-cell-text header-button\" \n                style=\"cursor: move; margin-left: 15px;\"\n                role=\"columnheader\"></span>\n        </div>`;\n}\n\n\n\nconst cellStyle = (muiTheme) => {\n  return params => {\n    const isPinned = ['left', 'right'].includes(params.column.getPinned());\n    const usePadding = params.colDef.cellDataType === 'boolean' && !params.data?.isTopRow;\n    return {\n      backgroundColor: isPinned ? muiTheme.palette.background.pinned : muiTheme.palette.background.paper,\n      padding: usePadding ? '8px' : '0px',\n    }\n  }\n};\n\nexport const useExpandedColumnDefs = () => {\n  const {columnDefs} = useColumnDefs();\n  const muiTheme = useMUITheme();\n  const allRenderTypes = useAllRenderTypes();\n  const { value: tableMaxRowHeight} = useSetting('tableMaxRowHeight');\n\n  if (_.isEmpty(allRenderTypes) || _.isEmpty(columnDefs)) {\n    return [];\n  }\n\n  const expandedColumnDefs = (columnDefs || []).map(col => {\n    const renderType = allRenderTypes[col.field];\n    const d = {\n        ...col,\n        headerName: col.field,\n        cellRendererSelector: (params) => ({\n            component: (col.cellDataType === 'boolean' && !params.data?.isTopRow) ? 'agCheckboxCellRenderer' : AGCell,\n            componentParams: {\n              name: col.field,\n            },\n        }),\n        cellRendererParams: {\n          name: col.field,\n        },\n        cellStyle: cellStyle(muiTheme),\n        headerComponentParams : {\n          template: headerTemplate(muiTheme),\n        }\n      };\n    if ([RENDER_TYPES.IFRAME, RENDER_TYPES.IMAGE_URL, RENDER_TYPES.VIDEO_URL].includes(renderType)) {\n      d.width = tableMaxRowHeight;\n      d.sortable = false;\n      d.resizable = false;\n    }\n\n    return d;\n\n    }\n  );\n\n  return expandedColumnDefs;\n};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { decideRenderType } from '@/utils/typesUtils';\nimport _ from 'lodash';\nimport { isMissing } from '@/utils/helpers';\nimport { setColumnPreference } from '@/store/columnPreferenceSlice';\nimport { useCardinality } from '@/hooks/useCardinality';\nimport { RENDER_TYPES } from '@/constants';\nimport { useDerivedColumnPreference } from '@/hooks/useDrivedColumn';\nimport { createSelector } from 'reselect';\n\nfunction recommendRenderType(colMeta, thresholdCategorical, cntD) {\n\n  const ratioCondition = !isMissing(cntD) && (cntD / colMeta.cntAll) < 0.5;\n  const countCondition = cntD <= thresholdCategorical;\n  const isCategorical = ratioCondition && countCondition;\n  const exampleValues = [colMeta.min, colMeta.max];\n\n  if (colMeta.isDatetime) {\n    return RENDER_TYPES.TEXT;\n  } else if (!colMeta.isPrimitive) {\n    return RENDER_TYPES.JSON;\n  } else if (colMeta.isString) {\n    return isCategorical ? RENDER_TYPES.CATEGORY : decideRenderType(exampleValues);\n  } else if (colMeta.isNumeric) {\n      return isCategorical && colMeta.isInteger ? RENDER_TYPES.CATEGORY : RENDER_TYPES.NUMBER;\n  } else if (colMeta.isBoolean) {\n      return RENDER_TYPES.CATEGORY;\n  } else {\n    return decideRenderType(exampleValues);\n  }\n\n}\n\n\nexport const useAllRenderTypes = () => {\n  const renderTypeDict = useSelector(createSelector([\n    state => state.columnPreference.data,\n    state => state.derivedColumns,\n  ], (colPrefs, derivedColumns) => {\n    const regularTypes = _.mapValues(colPrefs, (colPref, colName) => {\n      return colPref.renderType;\n    });\n    const derivedTypes = _(derivedColumns || []).map(item => [item.name, item.renderType]).fromPairs().value();\n    return _.merge(regularTypes, derivedTypes);\n  }));\n\n  return renderTypeDict;\n};\n\nexport const useNumberColumns = () => {\n  const renderTypeDict = useAllRenderTypes() || {};\n  return _.filter(_.keys(renderTypeDict), (k) => renderTypeDict[k] === RENDER_TYPES.NUMBER);\n};\n\n\nexport const useSingleColumnPreference = (columnName) => {\n  const dispatch = useDispatch();\n  const meta = useSingleColumnMeta(columnName);\n  const data = useSelector(state => state.columnPreference.data[columnName]);\n  const dC = useDerivedColumnPreference(columnName);\n\n  const thresholdCategorical = useSelector(state => state.settings.thresholdCategorical);\n  const { data: cardinalityData } = useCardinality(columnName) || {};\n\n  const shouldInit = !isMissing(meta) && isMissing(dC) && !isMissing(cardinalityData) && (isMissing(data) || _.isEmpty(data));\n\n  useEffect(() => {\n    if (shouldInit) {\n      const {cntD} = cardinalityData;\n      const renderType = recommendRenderType(meta, thresholdCategorical, cntD);\n\n      dispatch(setColumnPreference({name: columnName, renderType}));\n    }\n  }, [dispatch, shouldInit, meta, thresholdCategorical, cardinalityData, columnName]);\n\n  if (dC) {\n    return dC;\n  } else {\n    return data;\n  }\n};\n\n\nexport const pickColumnsByRenderTypeList = ({state, renderTypeList}) => {\n  const allTypes = state.columnPreference.data || {};\n  const found = _.keys(_.pickBy(allTypes, (v, k) => renderTypeList.includes(v?.renderType)));\n  return found;\n}","\n\nexport const columnHistogramQuery = ({filteredColumnTableExpr, histogramNumberOfBins}) => {\n    return `\n      WITH filtered AS (\n        ${filteredColumnTableExpr}\n      ), stats AS (\n        SELECT \n            COUNT(*) AS cnt_all,\n            COUNT_IF(value IS NULL) AS cnt_null,\n            MIN(value) AS raw_min, \n            MAX(value) AS raw_max,\n            ${histogramNumberOfBins} AS raw_bins,\n            CASE WHEN raw_min = raw_max THEN 1 ELSE (raw_max::DOUBLE - raw_min::DOUBLE) / raw_bins END AS raw_step,\n            -FLOOR(LOG(raw_step))::INT AS round_to,\n            ROUND(raw_step, round_to) AS nice_step,\n            ROUND(FLOOR(raw_min / nice_step) * nice_step, round_to) AS nice_min,\n            ROUND(CEIL(raw_max / nice_step) * nice_step, round_to) AS nice_max,\n            ((nice_max - nice_min) / nice_step) + 1 AS nice_bins\n        FROM filtered\n        ), bins AS (\n        SELECT\n          FLOOR((value - stats.nice_min) / stats.nice_step) AS bin_idx,\n          COUNT(*) AS cnt\n        FROM\n          filtered, stats\n        GROUP BY 1 ORDER BY 1\n        ), grouped_bins AS (\n          SELECT ARRAY_AGG(STRUCT_PACK(binIdx:=bin_idx, cnt:=cnt)) AS cnt_values\n          FROM bins\n        )\n        SELECT\n          STRUCT_PACK(\n            min := stats.nice_min,\n            max := stats.nice_max,\n            count := stats.nice_bins,\n            step := stats.nice_step,\n            round_to := stats.round_to\n          ) AS bin,\n          STRUCT_PACK(\n            min := stats.raw_min,\n            max := stats.raw_max\n          ) AS range,\n          cnt_values,\n          stats.cnt_all,\n          stats.cnt_null,\n          stats.cnt_all - stats.cnt_null AS cnt_not_null\n        FROM grouped_bins, stats\n    `;\n}\n\nexport const columnCategoryQuery = ({filteredColumnTableExpr, thresholdCategorical}) => {\n    return `\n      WITH filtered AS (\n        ${filteredColumnTableExpr}\n      ), stats AS (\n        SELECT \n            COUNT(*) AS cnt_all,\n            COUNT_IF(value IS NULL) AS cnt_null,\n            MIN(value) AS min, \n            MAX(value) AS max\n        FROM filtered\n        ), bins AS (\n        SELECT value, COUNT(*) AS cnt\n        FROM filtered WHERE value IS NOT NULL\n        GROUP BY value ORDER BY cnt DESC\n        LIMIT ${thresholdCategorical}\n        ), grouped_bins AS (\n          SELECT ARRAY_AGG(STRUCT_PACK(value:=value, cnt:=cnt)) AS cnt_values\n          FROM bins\n        ) SELECT\n          STRUCT_PACK(\n            min := stats.min,\n            max := stats.max\n          ) AS range,\n          cnt_values,\n          stats.cnt_all,\n          stats.cnt_null,\n          stats.cnt_all - stats.cnt_null AS cnt_not_null\n        FROM grouped_bins, stats\n      `;\n}","import { useSelector, useDispatch } from 'react-redux';\nimport { useSingleColumnPreference } from '@/hooks/useColumnPreference';\nimport { baselineColumnStatsSlice, filteredColumnStatsSlice } from '@/store/dataSlice';\nimport { isMissing } from '@/utils/helpers';\nimport { runQuery } from '@/utils/api';\nimport { useEffect } from 'react';\nimport _ from 'lodash';\nimport useFilters from '@/hooks/useFilters';\nimport { updateSqlRecord } from '@/store/sqlSlice';\nimport { useSingleColumnMeta } from '@/hooks/useApiData';\nimport { sanitizeName } from '@/utils/sql/helpers';\nimport { columnHistogramQuery, columnCategoryQuery } from '@/utils/sql/columnStats';\nimport { updateCountFiltered, updateCountBaseline } from '@/store/viewingSlice';\nimport { padItems } from '@/utils/histogramBins';\nimport { RENDER_TYPES } from '@/constants';\n\nconst useColumnStatsQuery = ({columnName, applyFilters=false}) => {\n  const {baselineFiltersSql, allFiltersSql} = useFilters();\n  const filterSql = applyFilters ? allFiltersSql : baselineFiltersSql;\n  const tableExpr = useSelector(state => state.dataFile.tableExpr);\n  const meta = useSingleColumnMeta(columnName);\n  const {renderType} = useSingleColumnPreference(columnName) || {};\n  const thresholdCategorical = useSelector(state => state.settings.thresholdCategorical);\n  const histogramNumberOfBins = useSelector(state => state.settings.histogramNumberOfBins);\n\n  const resultTransformer = (result) => {\n    const cnt_values = result.filter(r => r.value !== null);\n    const cnt_all = _(result).map('cnt').sum();\n    const cnt_null = result.find(r => r.value === null)?.cnt || 0;\n    const cnt_not_null = cnt_all - cnt_null;\n    return {cnt_values, cnt_all, cnt_null, cnt_not_null};\n  }\n\n  const filteredColumnTableExpr = `SELECT ${sanitizeName(columnName)} AS value FROM ${tableExpr} WHERE ${filterSql || 'TRUE'}`;\n\n  switch (renderType) {\n    case RENDER_TYPES.CATEGORY:\n      return {\n        resultTransformer: (result) => result[0],\n        query: columnCategoryQuery({filteredColumnTableExpr, thresholdCategorical})\n      };\n\n    case RENDER_TYPES.NUMBER:\n      if (meta.allNull) {\n        return {};\n      }\n      const histogramTransformer = (result) => {\n        result = result[0];\n        const { min, step, round_to } = result.bin;\n        const cnt_values = padItems({min, step, round_to, cntValues: result.cnt_values});\n        return {...result, cnt_values};\n      }\n\n      return {\n        resultTransformer: histogramTransformer,\n        query: columnHistogramQuery({filteredColumnTableExpr, histogramNumberOfBins})\n      };\n\n    case RENDER_TYPES.TEXT:\n\n      return { resultTransformer, query: `\n      SELECT UNNEST([\n        {'value': 'not_null', 'cnt': COUNT_IF(${sanitizeName(columnName)} IS NOT NULL)},\n        {'value': NULL, 'cnt': COUNT_IF(${sanitizeName(columnName)} IS NULL) }\n        ], RECURSIVE:=TRUE)\n      FROM ${tableExpr}\n      WHERE ${filterSql || 'TRUE'}\n      `};\n    default:\n      return {};\n  }\n\n}\n\n\nconst fetchColumnStatsData = ({\n  columnName, actions, sqlKey, reduxKey, query, resultTransformer, totalCountAction\n}) => async (dispatch, getState) => {\n  const { data, loading, error, shouldRefresh } = getState()[reduxKey][columnName] || {};\n  if ((data || loading) && !shouldRefresh) return; // 👈 Already loading or loaded — skip!\n\n  dispatch(actions.fetchStart({name: columnName}));\n\n  try {\n    const result = await runQuery({dispatch, key: sqlKey, query});\n    const transformedResult = resultTransformer(result);\n    dispatch(actions.fetchSuccess({name: columnName, ...transformedResult}));\n    const {cnt_all } = transformedResult || {};\n    if (cnt_all) {\n      dispatch(totalCountAction(cnt_all));\n    }\n  } catch (err) {\n    console.error(`error fetching baseline column stats: ${columnName}}`, err);\n    dispatch(actions.fetchError({error: err.message, name: columnName}));\n  }\n};\n\n\nexport const useBaselineColumnStats = (columnName) => {\n  const dispatch = useDispatch();\n  const actions = baselineColumnStatsSlice.actions;\n  const {query, resultTransformer} = useColumnStatsQuery({columnName, applyFilters: false});\n\n  const reduxKey = 'baselineColumnStats';\n  const sqlKey = `baseStats-${columnName}`;\n  const { data, loading, error, shouldRefresh } = useSelector(state => state[reduxKey][columnName]) || {};\n\n  const shouldInit = isMissing(data) && !loading && !error && !isMissing(query);\n\n  useEffect(() => {\n    if (shouldInit || shouldRefresh) {\n      dispatch(fetchColumnStatsData({\n        columnName, actions, sqlKey, reduxKey, query, resultTransformer,\n        totalCountAction: updateCountBaseline\n      }));\n    }\n  }, [dispatch, shouldInit, shouldRefresh, columnName, query, actions, sqlKey, reduxKey, resultTransformer]);\n\n   return {data, loading, error, sqlKey};\n\n}\n\nexport const useFilteredColumnStats = (columnName) => {\n  const dispatch = useDispatch();\n  const actions = filteredColumnStatsSlice.actions;\n  const {hasFilters, allFiltersSql} = useFilters();\n  const {query, resultTransformer} = useColumnStatsQuery({columnName, applyFilters: true});\n\n\n  const reduxKey = 'filteredColumnStats';\n  const sqlKey = `fltStats-${columnName}`;\n  const baselineStats = useBaselineColumnStats(columnName);\n  const baseSqlRecord = useSelector(state => state.sql[baselineStats.sqlKey]);\n  const { data, loading, error, shouldRefresh } = useSelector(state => state[reduxKey][columnName]) || {};\n\n  const shouldInit = isMissing(data) && !loading && !error && !isMissing(query) && !isMissing(baselineStats.data);\n\n  useEffect(() => {\n    if (shouldInit || shouldRefresh) {\n      if (!hasFilters) {\n        dispatch(actions.fetchSuccess(baselineStats.data));\n        dispatch(updateSqlRecord({key: sqlKey, records: baseSqlRecord}));\n        dispatch(updateCountFiltered(baselineStats.data.cnt_all));\n      } else {\n        dispatch(fetchColumnStatsData({\n          columnName, actions, sqlKey, reduxKey, query, resultTransformer,\n          totalCountAction: updateCountFiltered\n        }));\n      }\n    }\n  }, [dispatch, shouldInit, shouldRefresh, columnName, hasFilters, allFiltersSql, query, actions, sqlKey, reduxKey, baselineStats.data, baseSqlRecord, resultTransformer]);\n\n   return {data, loading, error, sqlKey};\n}\n","import { useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nexport const useDerivedColumn = (columnName) => {\n  const derivedColumns = useSelector(state => state.derivedColumns);\n  const dC = _.find(derivedColumns, (col) => col.name === columnName);\n  return dC;\n}\n\nexport const useDerivedColumnMeta = (columnName) => {\n  const dC = useDerivedColumn(columnName);\n  if (dC) {\n    return {\n      name: columnName, isDerived: true,\n      isString: true, cellDataType: 'string',\n    };\n  }\n  return null;\n}\n\nexport const useDerivedColumnPreference = (columnName) => {\n  const dC = useDerivedColumn(columnName);\n  if (dC) {\n    return {\n      renderType: dC.renderType,\n    };\n  }\n  return null;\n}","import { useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { toSqlCondition } from '@/utils/sql/sql';\n\nconst useFilters = () => {\n    const parsedState = useSelector(createSelector([\n        (state) => state.agColDefs.baselineFilters,\n        (state) => state.agColDefs.filters,\n        (state) => state.agColDefs.extraFilter || '',\n    ], (baselineFilters, filters, extraFilter) => {\n        const baselineFiltersSql = toSqlCondition(baselineFilters) || 'TRUE';\n        const filtersSql = toSqlCondition(filters) || 'TRUE';\n        const allFiltersSql = `(${baselineFiltersSql}) AND (${filtersSql})`;\n        return {\n            baselineFilters,\n            filters,\n            extraFilter,\n            hasFilters: !_.isEmpty(filters) || extraFilter !== '',\n            baselineFiltersSql,\n            filtersSql,\n            allFiltersSql,\n        };\n    }));\n\n\n    return parsedState;\n};\n\nexport default useFilters;","import { useSelector } from 'react-redux';\nimport { createTheme } from '@mui/material/styles';\n\n\nconst useMUITheme = () => {\n  const mode = useSelector((state) => state.settings.mode) || 'light';\n  const baseFontSize = useSelector((state) => state.settings.baseFontSize);\n  const isDarkMode = mode === 'dark';\n\n  return createTheme({\n    typography: {\n      fontSize: baseFontSize,\n    },\n    palette: {\n      mode: mode,\n      primary: {\n        main: '#1976d2',\n        light: '#42a5f5',\n        dark: '#1565c0',\n        contrastText: '#fff'\n      },\n      highlight: {\n        main: '#E3D026',\n        light: '#E9DB5D',\n        dark: '#A29415',\n        contrastText: '#242105',\n      },\n      plotFill: isDarkMode ? 'SteelBlue' : 'SkyBlue',\n      text: {\n        primary: isDarkMode ? '#E0E0E0' : '#212121',\n        secondary: isDarkMode ? '#A0A0A0' : '#5F6368',\n        tertiary: isDarkMode ? '#4C4C4E' : '#B6B9BD',\n      },\n      borderColor: isDarkMode ? '#4C4C4E' : '#B6B9BD',\n      background: {\n        paper: isDarkMode ? '#000000' : '#FFFFFF',\n        card: isDarkMode ? '#1C1C1E' : 'Snow',\n        pinned: isDarkMode ? '#2A2E3A' : 'LightGray',\n        justClicked: isDarkMode ? '#3A3A26' : 'LightYellow',\n      },\n    },\n  });\n}\n\nexport default useMUITheme;","export default {title:'SenseTableSettings',type:'object',properties:{enableDebugging:{type:'boolean',description:'Enable debugging mode','default':false},licenseKey:{type:'string',description:'License key for the application','default':'free|trial'},baseFontSize:{type:'number',description:'Base font size','default':12,minimum:10,maximum:20,step:1},jsonViewCollectionLimit:{type:'number',description:'Limit of the number of items to expand by default in the JSON view. For efficiency, we don\\'t expand all items by default.','default':20,minimum:10,maximum:100,step:5},thresholdCategorical:{type:'number',description:'Threshold for number of unique values to consider a column as categorical','default':100,minimum:10,maximum:1000,step:10},histogramNumberOfBins:{type:'number',description:'Number of bins for histogram plots. Note that we may slightly adjust the number to make bins look nicely rounded.','default':50,minimum:30,maximum:100,step:10},tableMaxRowHeight:{type:'number',description:'Maximum height of a row in the table','default':60,minimum:48,maximum:200,step:4},heightOfColumnDistribution:{type:'number',description:'Height of the distribution plot in table column header','default':32,minimum:24,maximum:128,step:4},tableDefaultColumnWidth:{type:'number',description:'Default width of the column in the table','default':150,minimum:100,maximum:800,step:10},galleryItemSize:{type:'number',description:'Size of the image in the gallery','default':180,minimum:100,maximum:600,step:10},heatmapNormalizeColor:{type:'string',description:'How do you want to normalize the color of the heatmap?','default':'none','enum':['none','per_row','per_column']},bubblePlotMaxMarkerSize:{type:'number',description:'Maximum size of the marker in the bubble plot','default':20,minimum:5,maximum:50,step:1},bubblePlotOpacity:{type:'number',description:'Opacity of the bubble plot','default':0.5,minimum:0.1,maximum:1,step:0.1},folderNavigationShowFileInfo:{type:'string',description:'How do you want to show the file info in the folder navigation?','default':'size','enum':['size','lastModifiedRelative','lastModifiedDateTime','none']},folderBrowserDefaultRootFolder:{type:'string',description:'The default root folder to start the folder browser from','default':'~'},folderBrowserShowHiddenFiles:{type:'boolean',description:'Show hidden files in the folder browser','default':false},folderBrowserListLimit:{type:'number',description:'Limit the number of items in the folder browser','default':100,minimum:10,maximum:1000,step:10},folderBrowserPeekIntoSubfolders:{type:'string',description:'How do you want to peek into subfolders in the folder browser?','default':'none','enum':['none','count_by_extension','images']},folderBrowserImageSize:{type:'number',description:'Size of the image in the folder browser','default':100,minimum:50,maximum:600,step:10},folderBrowserImageCropSquare:{type:'boolean',description:'Crop the image in the folder browser to a square','default':true},boxPlotSortBy:{type:'string',description:'How do you want to sort the boxplot?','default':'max','enum':['min','max','avg','q50','std','skewness']}}};","import SettingsSchema from '@/settings.schema.yaml';\nimport { useInitSettings } from '@/hooks/useApiData';\nimport { isMissing } from '@/utils/helpers';\nimport { useSelector } from 'react-redux';\n\nconst useSetting = (settingKey) => {\n    const {data: initSettings} = useInitSettings();\n    const schema = SettingsSchema.properties[settingKey];\n    const value = useSelector((state) => state.settings[settingKey]);\n\n    if (isMissing(initSettings)) {\n        return {};\n    }\n\n    if (isMissing(schema)) {\n        throw new Error(`No schema record for ${settingKey}. There may be a typo.`);\n    }\n    if (isMissing(value)) {\n        throw new Error(`The developer forgot to set the default value for ${settingKey} in settingsSlice.js or Python settings.py`);\n    }\n\n    return {schema, initValue: initSettings[settingKey], value};\n}\n\nexport default useSetting;","import { sqlElements } from '@/utils/sql/sql';\nimport _ from 'lodash';\nimport { setRowDataSource } from './viewingSlice';\nimport { runQuery } from '@/utils/api';\nimport { initialState } from '@/store/dataSlice';\nimport { rowDataSlice } from '@/store/dataSlice';\nimport { evaluateAllExpressionsForAllRows } from '@/store/derivedColumnsSlice';\nimport { batchProxyUrlApi } from '@/utils/api';\nimport { pickColumnsByRenderTypeList } from '@/hooks/useColumnPreference';\nimport { RENDER_TYPES } from '@/constants';\n\nconst proxyAllUrlsInRowData = async ({getState, rowData}) => {\n  // Sign get urls for rowData\n  const urlColumns = pickColumnsByRenderTypeList({state: getState(), renderTypeList: [\n    RENDER_TYPES.IMAGE_URL, RENDER_TYPES.VIDEO_URL\n  ]});\n  const promises =  _.map(urlColumns, col => {\n    const urls = _.map(rowData, r => r[col]);\n    return batchProxyUrlApi({urls});\n  });\n  const proxiedUrls = await Promise.all(promises);\n  const urlDataMap = _.zipObject(urlColumns, proxiedUrls);\n  _.map(rowData, (r, i) => {\n    _.map(urlColumns, (col) => {\n      r[col] = urlDataMap[col][i];\n    });\n  });\n  return rowData;\n}\n\nexport const fetchRowData = () => async (dispatch, getState) => {\n  const { data, loading, error, shouldRefresh } = getState().rowData || initialState;\n  if ((data || loading || error) && !shouldRefresh) return; // 👈 Already loading or loaded — skip!\n\n  dispatch(rowDataSlice.actions.fetchStart());\n\n  try {\n    const elements = sqlElements(getState());\n\n    const sql = `SELECT * ${elements.from} ${elements.where} ${elements.order} ${elements.pagination}`;\n    const rawRowData = await runQuery({dispatch, key: 'rowData', query: sql});\n ///   const rowData = rawRowData;\n    const rowData = await proxyAllUrlsInRowData({getState, rowData: rawRowData});\n\n    // Add derived columns\n    const derivedColumns = getState().derivedColumns;\n    const enrichedRowData = await evaluateAllExpressionsForAllRows({derivedColumns, rowData});\n\n    dispatch(rowDataSlice.actions.fetchSuccess(enrichedRowData));\n    dispatch(setRowDataSource('Table'));\n\n  } catch (err) {\n    if (err.stack) {\n      console.error('Stack trace:', err.stack);\n    }\n    dispatch(rowDataSlice.actions.fetchError(err.message));\n  }\n};\n\nexport const fetchRandomRowData = ({source}) => async (dispatch, getState) => {\n  const { data, loading, error, shouldRefresh } = getState().rowData || initialState;\n  if ((data || loading || error) && !shouldRefresh) return; // 👈 Already loading or loaded — skip!\n\n  dispatch(rowDataSlice.actions.fetchStart());\n\n  try {\n    const {from, where} = sqlElements(getState());\n    const pageSize = getState().viewing.pagination.pageSize;\n    const sampleCondition = getState().viewing.sampleCondition || 'True';\n\n    const sql = `\n    SELECT *\n    FROM (SELECT * ${from} ${where} AND (${sampleCondition}))\n    USING SAMPLE RESERVOIR(${pageSize} ROWS);\n    `;\n    const rawRowData = await runQuery({dispatch, key: 'samples', query: sql});\n    const rowData = await proxyAllUrlsInRowData({getState, rowData: rawRowData});\n\n    // Add derived columns\n    const derivedColumns = getState().derivedColumns;\n    const enrichedRowData = await evaluateAllExpressionsForAllRows({derivedColumns, rowData});\n\n    dispatch(rowDataSlice.actions.fetchSuccess(enrichedRowData));\n    dispatch(setRowDataSource(source));\n  } catch (err) {\n    console.error(err);\n    dispatch(rowDataSlice.actions.fetchError(err.message));\n  }\n\n}","import _ from 'lodash';\nimport { Typography, Box } from '@mui/material';\nimport React from 'react';\n\nexport const highlightMatch = (str, search) => {\n    if (!search) {\n        return <Typography sx={{color: 'inherit', bgcolor: 'transparent'}} className='truncate'>{str}</Typography>;\n    } else if (!str.includes(search)) {\n        return <Typography sx={{color: 'inherit', bgcolor: 'transparent'}} className='truncate'>{str}</Typography>;\n    } else {\n        const regex = new RegExp(`(${search})`, 'ig');\n        const parts = str.split(regex);\n\n        return (\n          <Box sx={{display: 'flex', flexDirection: 'row', gap: 0}}>\n            {parts.map((part, index) =>\n              part.toLowerCase() === search.toLowerCase() ? (\n                <Typography key={index} sx={{bgcolor: 'warning.main', color: 'warning.contrastText'}} className='truncate'>{part}</Typography>\n              ) : (\n                <Typography key={index} sx={{color: 'inherit', bgcolor: 'transparent'}} className='truncate'>{part}</Typography>\n              )\n            )}\n          </Box>\n        );\n    }\n}\n\nexport const truncateText = (text, maxWidth = 100) => {\n    const s = String(text);\n    const maxNumChars = maxWidth / 7; // A rough estimate of the number of characters for given width\n    return s.length > maxNumChars ? s.substring(0, maxNumChars) + '.' : s;\n}\n\n\nfunction charPrefixSimilarity(a, b) {\n  const len = Math.min(a.length, b.length);\n  let common = 0;\n\n  for (let i = 0; i < len; i++) {\n    if (a[i] === b[i]) {\n      common++;\n    } else {\n      break;\n    }\n  }\n\n  const totalLen = Math.max(a.length, b.length);\n  return common / totalLen;\n}\n\n\nfunction commonPrefix(strings) {\n  if (!strings.length) return '';\n\n  const shortest = _.minBy(strings, s => s.length);\n\n  let i = 0;\n  while (\n    i < shortest.length &&\n    _.every(strings, s => s[i] === shortest[i])\n  ) {\n    i++;\n  }\n\n  return shortest.slice(0, i);\n}\n\nexport function clusterByPrefix(strings, threshold = 0.6) {\n  if (!strings || strings.length === 0) {\n    return {};\n  }\n\n  const visited = new Set();\n  const clusters = [];\n\n  for (let i = 0; i < strings.length; i++) {\n    if (visited.has(i)) continue;\n    const cluster = [strings[i]];\n    visited.add(i);\n\n    for (let j = i + 1; j < strings.length; j++) {\n      if (visited.has(j)) continue;\n      const sim = charPrefixSimilarity(strings[i], strings[j]);\n      if (sim >= threshold) {\n        cluster.push(strings[j]);\n        visited.add(j);\n      }\n    }\n\n    clusters.push(cluster);\n  }\n  const groups = _.filter(clusters, g => g.length > 1);\n  const clusterMapping = _(strings).map(s => [s, '~ungrouped~']).fromPairs().value();\n  _.forEach(groups, (group, index) => {\n    const prefix = commonPrefix(group);\n    _.forEach(group, s => {\n      clusterMapping[s] = `${prefix}*`;\n    });\n  });\n  return clusterMapping;\n}","import { isMissing } from '@/utils/helpers';\n\n\nexport function numberValueFormatter (params) {\n    return isMissing(params.value) ? '' : `${params.value.toLocaleString()}`;\n}\n\nexport function percentValueFormatter (params) {\n    return isMissing(params.value) ? '' : `${params.value.toLocaleString()}%`;\n}\n\nexport const COL_DEF_NUMBER = (muiTheme) => ({\n    valueFormatter: numberValueFormatter,\n    cellStyle: {\n        textAlign: 'right',\n        fontFamily: 'monospace',\n        fontSize: muiTheme.typography.fontSize,\n    }\n});\n\nexport const COL_DEF_PERCENT = (muiTheme) => ({\n    valueFormatter: percentValueFormatter,\n    cellStyle: {\n        textAlign: 'right',\n        fontFamily: 'monospace',\n        fontSize: muiTheme.typography.fontSize,\n    }\n});\n\n\nexport const buildProgressBarRenderer = ({min, max, bgColor='#4caf50', isPercent=false, muiTheme}) => {\n    const ProgressBarRenderer = (params) => {\n      if (isMissing(params.value)) return null;\n      const value = params.value;\n      const percentage = 100 * Math.max(0, Math.min(1, (value - min) / (max - min)));\n      const valStr = value.toLocaleString();\n      return (\n        <div style={{\n          position: 'relative',\n          height: '100%',\n          width: '100%',\n          backgroundColor: 'transparent',\n          borderColor: muiTheme.palette.borderColor,\n          borderWidth: 1,\n          borderStyle: 'solid',\n        }}>\n          <div style={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            width: `${percentage}%`,\n            backgroundColor: bgColor,\n            opacity: 0.6,\n            borderRadius: 2,\n          }} />\n          <div style={{\n            position: 'relative',\n            paddingLeft: 4,\n            paddingRight: 4,\n            fontWeight: 500,\n            fontSize: muiTheme.typography.fontSize,\n            fontFamily: 'monospace',\n            color: 'inherit',\n            zIndex: 1,\n          }}>\n            {isPercent ? `${valStr}%` : valStr}\n          </div>\n        </div>\n      );\n    };\n    return ProgressBarRenderer;\n};\n\n\n\n\n\n","// Convert string to a consistent hash number between 0-1\nconst stringToHash = (str) => {\n    // Using FNV-1a hash algorithm for better distribution\n    let hash = 0x811c9dc5; // FNV offset basis\n    for (let i = 0; i < str.length; i++) {\n      hash ^= str.charCodeAt(i);\n      hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n    }\n    return Math.abs(hash) / (2 ** 32); // Normalize to 0-1\n  };\n\n// Generate visually distinct colors using HSL color space\nexport const stringToColor = (input) => {\n    const str = String(input);\n    if (str === 'null') return {'color': '#ffffff', 'backgroundColor': '#000000'};\n    if (str === 'others') return {'color': '#000000', 'backgroundColor': '#808080'};\n\n    const hue = stringToHash(str) * 360; // Use hash for hue (0-360)\n    const saturation = 70 + stringToHash(str.slice(1)) * 20; // 70-90%\n    const lightness = 45 + stringToHash(str.slice(2)) * 10; // 45-55%\n\n    // Convert HSL to Hex\n    const h = hue / 360;\n    const s = saturation / 100;\n    const l = lightness / 100;\n\n    const hue2rgb = (p, q, t) => {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    };\n\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    const r = Math.round(hue2rgb(p, q, h + 1/3) * 255);\n    const g = Math.round(hue2rgb(p, q, h) * 255);\n    const b = Math.round(hue2rgb(p, q, h - 1/3) * 255);\n\n    // Calculate luminance to determine contrast\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    const color = luminance > 0.5 ? '#000000' : '#ffffff';\n\n    const backgroundColor = '#' + [r, g, b].map(x => {\n      const hex = x.toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }).join('');\n    return {color, backgroundColor};\n  };\n\n","import { SvgIcon } from '@mui/material';\nimport React from 'react';\n\nconst TextIcon = React.forwardRef(({text, color = 'inherit', fontSize = 'inherit', ...props}, ref) => {\n    return (\n        <SvgIcon {...props} viewBox=\"0 0 64 64\" color={color} fontSize={fontSize} ref={ref}>\n            <text\n                x=\"50%\"\n                y=\"50%\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"middle\"\n                fontSize=\"36\"\n                fontFamily=\"monospace\"\n                fill=\"currentColor\"\n            >\n            {text}\n            </text>\n            <line x1=\"0\" y1=\"64\" x2=\"64\" y2=\"64\" stroke=\"currentColor\" strokeWidth=\"12\"/>\n        </SvgIcon>\n    );\n});\n\nTextIcon.displayName = 'TextIcon';\n\nexport const SQLIcon = React.forwardRef(({...props}, ref) => {\n    return <TextIcon text=\"SQL\" {...props} ref={ref} />;\n});\n\nSQLIcon.displayName = 'SQLIcon';\n\nexport const JSONIcon = React.forwardRef(({...props}, ref) => {\n    return <TextIcon text=\"JSON\" {...props} ref={ref} />;\n});\n\nJSONIcon.displayName = 'JSONIcon';\n\n\nexport const LayoutIconSideBySide = React.forwardRef(({color = 'inherit', fontSize = 'medium', ...props}, ref) => {\n    return (\n        <SvgIcon {...props} viewBox=\"30 30 220 200\" color={color} fontSize={fontSize} ref={ref}>\n            <path d=\"M184 67C192.837 67 200 74.1634 200 83V167C200 175.837 192.837 183 184 183H66C57.1634 183 50 175.837 50 167V83C50 74.1634 57.1634 67 66 67H184ZM67 167H117V83H67V167ZM134 83V167H184V83H134Z\" fill=\"currentColor\"/>\n        </SvgIcon>\n    );\n});\n\nLayoutIconSideBySide.displayName = 'LayoutIconSideBySide';\n\nexport const LayoutIconThreeColumns = React.forwardRef(({color = 'inherit', fontSize = 'medium', ...props}, ref) => {\n    return (\n        <SvgIcon {...props} viewBox=\"30 30 220 200\" color={color} fontSize={fontSize} ref={ref}>\n            <path d=\"M184 67C192.837 67 200 74.1634 200 83V167C200 175.837 192.837 183 184 183H66C57.1634 183 50 175.837 50 167V83C50 74.1634 57.1634 67 66 67H184ZM67 167H89V83H67V167ZM105 133V167H148V133H105ZM164 167H186V83H164V167ZM105 117H148V83H105V117Z\" fill=\"currentColor\"/>\n        </SvgIcon>\n    );\n});\n\nLayoutIconThreeColumns.displayName = 'LayoutIconThreeColumns';\n\n\nexport const LayoutIconTwoColumns = React.forwardRef(({color = 'inherit', fontSize = 'medium', ...props}, ref) => {\n    return (\n        <SvgIcon {...props} viewBox=\"30 30 220 200\" color={color} fontSize={fontSize} ref={ref}>\n            <path d=\"M184 67C192.837 67 200 74.1634 200 83V167C200 175.837 192.837 183 184 183H66C57.1634 183 50 175.837 50 167V83C50 74.1634 57.1634 67 66 67H184ZM67 167H89V83H67V167ZM105 133V167H184V133H105ZM105 117H184V83H105V117Z\" fill=\"currentColor\"/>\n        </SvgIcon>\n    );\n});\n\nLayoutIconTwoColumns.displayName = 'LayoutIconTwoColumns';","\nexport const SX_TEXT_HOVER = {\n    color: 'text.secondary',\n    '&:hover': {\n        color: 'text.primary',\n    }\n};\n\nexport const SX_WIDTH_100 = {\n    overflow: 'hidden',\n    boxSizing: 'border-box',\n    width: '100%',\n    maxWidth: '100%',\n    minWidth: '0px',\n}\n\nexport const SX_BORDER = {\n    border: '1px solid',\n    borderColor: 'divider',\n    borderRadius: 1,\n    boxShadow: 1,\n}\n\nexport const SX_CARD = {\n    ...SX_BORDER,\n    boxShadow: 3,\n    backgroundColor: 'background.card',\n    padding: 1,\n}","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\n\ndayjs.extend(relativeTime);\n\nexport const timeAgo = (time) => {\n  return dayjs(time).fromNow();\n}\n\nexport const formatTime = (time) => {\n  return dayjs(time).format('YYYY-MM-DD HH:mm:ss');\n}","import { every } from 'lodash';\nimport path from 'path-browserify';\nimport { RENDER_TYPES } from '@/constants';\n\nexport const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg', '.ico'];\nexport const tableExtensions = ['.csv', '.tsv', '.json', '.parquet', '.feather', '.arrow'];\n\nexport const isImage = (filePath) => {\n   const ext = path.extname(filePath);\n   return imageExtensions.includes(ext);\n};\n\nexport const isTable = (filePath) => {\n   const ext = path.extname(filePath);\n   return tableExtensions.includes(ext);\n};\n\nexport const isImageUrl = (str) => {\n  if (!str || typeof str !== 'string') return false;\n\n  // Check if string ends with common image extensions\n\n  const lowerStr = str.toLowerCase();\n\n  // Check if it's a URL pattern and ends with image extension\n  const urlPattern = /^(\\w+?:\\/\\/|\\/)/i;\n  return urlPattern.test(str) && imageExtensions.some(ext => lowerStr.endsWith(ext));\n};\n\n\nexport const isJsonString = (str) => {\n  if (!str || typeof str !== 'string') return false;\n  try {\n    JSON.parse(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n\nexport const decideRenderType = (exampleValues) => {\n  if (exampleValues.length === 0) {\n    return RENDER_TYPES.TEXT;\n  } else if (every(exampleValues, (v) => isImageUrl(v))) {\n    return RENDER_TYPES.IMAGE_URL;\n  } else if (every(exampleValues, (v) => isJsonString(v))) {\n    return RENDER_TYPES.JSON;\n  } else {\n    return RENDER_TYPES.TEXT;\n  }\n}","export const zIndex = {\n    base: 0,\n    header: 10,\n    dropdown: 100,\n    tooltip: 200,\n    modal: 300,\n    popover: 400,\n    toast: 500,\n    alwaysOnTop: 99999999,\n};"],"names":["ColumnHideIcon","React","_ref","columnName","hide","dispatch","useDispatch","isHidden","_jsx","BooleanIconButton","iconOff","VisibilityOffIcon","iconOn","VisibilityIcon","tooltipOn","tooltipOff","value","onClick","updateDef","field","name","displayName","PIN_ICONS","_ref$hide","pinned","activeStyle","_objectSpread","SX_TEXT_HOVER","opacity","color","icons","left","PushPinIcon","sx","transform","right","no","PushPinOutlinedIcon","ToggleColumnPinIcon","_ref2","icon","nextValue","MyIconButton","disabled","DropdownColumnPinIcon","_ref3","choices","label","IconDropdown","title","selectedValue","onChange","newPinned","RenderTypeIcon","meta","useSingleColumnMeta","pref","useSingleColumnPreference","cardinalityData","useCardinality","data","baseFontSize","useSetting","thresholdCategorical","useSelector","state","settings","isMissing","CircularProgress","size","renderType","canBeCategorical","cntD","_","isDerived","isNumeric","RENDER_TYPES","concat","_toConsumableArray","isString","isBoolean","isDatetime","isPrimitive","Object","keys","ICONS_FOR_RENDER_TYPE","candidate","CircleOutlinedIcon","newRenderType","updateColumnPreference","setEqual","baselineColumnStatsSlice","filteredColumnStatsSlice","IconColorMode","mode","LightModeOutlinedIcon","DarkModeOutlinedIcon","IconButton","updateSettings","children","fontSize","IconChangeFontSize","change","newFontSize","Math","min","max","IconFontSizeUp","TextIncreaseOutlinedIcon","IconFontSizeDown","TextDecreaseOutlinedIcon","BottomIconJsonViewingSettings","BottomIconCard","height","DataObjectOutlinedIcon","SliderInSettings","settingKey","b64urlToBytes","b64url","b64","replace","length","binary","atob","Uint8Array","from","ch","charCodeAt","error","console","etc","sha512","arguments","verifyLicense","_asyncToGenerator","_regeneratorRuntime","_callee","licenseKey","actualDomain","invalidLicense","_licenseKey$split","_licenseKey$split2","signature","publicKey","messageCode","messageBytes","signatureBytes","publicKeyBytes","_JSON$parse","domain","url_prefix","valid_until","dateNow","validUntilDate","errors","_context","prev","next","window","location","hostname","abrupt","license","includes","split","_slicedToArray","verify","sent","JSON","parse","Date","push","pathname","startsWith","stop","_x","apply","LicenseInfo","infoList","key","TitledList","items","IconLicense","_useState","useState","open","setOpen","_useState2","setErrors","_useState3","licenseFailed","setLicenseFailed","_useState4","setLicense","handleClose","useEffect","performVerify","_yield$verifyLicense","KeyIcon","Box","display","flexDirection","gap","width","_jsxs","Dialog","onClose","DialogTitle","DialogContent","SectionHeader","map","index","Typography","my","DialogActions","MyButton","IconEnableDebugging","BugReportOutlinedIcon","enableDebugging","VerticalDivider","Divider","orientation","flexItem","BottomSection","_Fragment","flex","alignItems","BottomStatus","k","v","_ref2$maxWidth","maxWidth","copied","setCopied","MyTooltip","className","cursor","navigator","clipboard","writeText","setTimeout","SectionSettings","borderTop","borderColor","justifyContent","HEIGHT_BOTTOM_BAR","px","py","NextLink","href","SENSE_TABLE_PAGE","target","src","alt","style","minWidth","_ref$transformOriginH","transformOriginHorizontal","_ref$width","_ref$height","_ref$initMaximized","initMaximized","_ref$color","styledIcon","ClickCard","trigger","tooltip","anchorVertical","anchorHorizontal","transformOriginVertical","JsonBox","obj","OpenUrlButton","url","OpenInNewOutlinedIcon","AutoLink","proxyUrl","proxyedUrl","variant","fontFamily","ModuleRegistry","AllCommunityModule","BasicTable","initRowData","_ref$overridingColDef","overridingColDefs","_ref$overridingDefaul","overridingDefaultColDef","_ref$overridingGridOp","overridingGridOptions","agGridTheme","useAGGridTheme","rowData","setRowData","gridRef","useRef","defaultColDef","useMemo","sortable","resizable","autoHeight","cellRenderer","params","String","MiniJsonBox","columnNames","item","columnDefs","headerName","onGridReady","useCallback","api","sizeColumnsToFit","handleGridSizeChanged","handleRowDataUpdated","AGGridResponsiveContainer","AgGridReact","domLayout","ref","theme","onGridSizeChanged","pagination","onRowDataUpdated","_ref$tooltip","_ref$anchorVertical","_ref$anchorHorizontal","_ref$flex","_ref$transformOriginV","anchorEl","setAnchorEl","isMaximized","setIsMaximized","triggerElement","event","currentTarget","stopPropagation","cardStyle","margin","top","position","padding","Popover","anchorOrigin","vertical","horizontal","transformOrigin","slotProps","paper","Card","boxShadow","backgroundColor","CardHeader","action","CloseFullscreenIcon","OpenInFullIcon","CloseIcon","CardContent","p","overflowY","IconCard","_ref2$tooltip","_ref2$iconSize","iconSize","_ref2$height","HelpCard","HelpOutlineIcon","WarningCard","_ref4","WarningAmberIcon","InfoCard","_ref5","InfoOutlinedIcon","SettingsCard","_ref6","_ref6$height","SettingsIcon","_ref2$tooltipOn","_ref2$tooltipOff","_ref3$onClick","_ref3$disabled","_ref3$iconSize","_ref3$tooltip","_ref3$sx","button","MyCheckbox","checked","_ref5$disabled","_ref5$maxWidth","cb","Checkbox","e","lb","noWrap","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","FormControlLabel","control","MyDropdown","options","_ref6$onChange","_ref6$width","_ref6$myKey","myKey","FormControl","InputLabel","Select","MenuProps","zIndex","option","MenuItem","MyTypeaheadDropdown","_ref7","_ref7$multiple","multiple","Autocomplete","newValue","renderInput","TextField","MyTextField","_ref9","onValueChange","_ref9$type","type","_ref9$monospace","monospace","_ref9$sx","_ref9$color","input","spellCheck","MyNumberField","_ref10","_ref11","_ref11$color","_ref11$variant","_ref11$size","_ref11$startIcon","startIcon","Button","textTransform","whiteSpace","CopyToClipboardButton","_ref12","ContentPasteOutlinedIcon","_$find","iconLabel","selectedIcon","c","popoverContent","RadioGroup","Radio","SX_CARD","ImageBox","_ref$size","_ref$cropSquare","cropSquare","_ref$showUrl","showUrl","imageStyle","objectFit","maxHeight","valueRenderer","raw","Array","isArray","fontStyle","jsonString","stringify","showType","setShowType","sorted","setSorted","jsonViewCollectionLimit","Paper","overflow","TitleIcon","SortByAlphaIcon","JSONTree","hideRoot","collectionLimit","undefined","sortObjectKeys","tableMaxRowHeight","CellRightClickCard","KeyChip","Chip","borderRadius","bgcolor","ShortcutRow","descriptions","TableRow","TableCell","textAlign","Stack","direction","spacing","i","description","KeyboardShortcutsTable","TableContainer","component","Table","TableBody","marginTop","SqlCard","_sql$runtime","sqlKey","sql","SQLIcon","TextWithAddon","text","addon","StatusChip","status","ChipList","timeAgo","lastUpdated","runtime","toFixed","ReadOnlySQL","query","running","success","FloatingRightContainer","muiTheme","useMUITheme","alpha","palette","background","card","RowBoxes","validChildren","filter","child","trim","flexWrap","border","_ref2$placement","placement","content","Tooltip","arrow","enterDelay","mt","gutterBottom","TextSegments","_ref4$variant","segments","seg","_ref5$minWidth","_ref5$minHeight","minHeight","MiniParagraph","mb","_ref8","CodeMirror","extensions","editable","oneDark","basicSetup","lineNumbers","foldGutter","List","ListItem","ListItemText","primary","secondary","BorderedBox","_useFilters","useFilters","filters","extraFilter","details","hasFilters","ft","parseFilterItem","ArrowRightAltIcon","FilteredCount","countBaseline","countFiltered","_ref$addColor","addColor","_ref$isPercentage","isPercentage","stringToColor","colorBox","showArrow","mr","toLocaleString","FiltersArrow","OpenFolderInNewTabButton","itemId","rootFolder","folderBrowserRootFolder","ROUTES","pathJoin","OpenTableInNewTabButton","fullPath","format","path","RefreshFolderButton","RefreshIcon","updateChildren","CustomLabel","isDir","lastModified","showFileInfo","folderNavigationShowFileInfo","isHovered","setIsHovered","getFileInfo","filesize","formatTime","SX_WIDTH_100","onMouseEnter","onMouseLeave","FolderOutlinedIcon","flexGrow","CustomTreeItem","props","useTreeItemModel","TreeItem","slots","onDoubleClick","toggleItemExpansion","id","BreadCrumbLink","Link","underline","SX_BORDER","Breadcrumbs","setViewingItemId","segment","isLast","slice","join","FolderNavHelpCard","_objectDestructuringEmpty","NorthOutlinedIcon","SouthOutlinedIcon","WestOutlinedIcon","EastOutlinedIcon","FolderNavControls","viewingItemId","folderBrowser","PanelControlsWrapper","DropdownInSettings","shortLabel","CheckboxInSettings","extraChange","setExpandedItems","useInitSettings","expandedItems","apiRef","useTreeViewApiRef","treeData","current","setItemSelection","keepExistingSelection","shouldBeSelected","rootParent","pathDirname","viewItem","locateItem","mx","pathBasename","m","RichTreeView","onExpandedItemsChange","nodeIds","onItemClick","expansionTrigger","onItemExpansionToggle","isExpanded","onItemSelectionToggle","isSelected","onItemFocus","photoList","imageSize","folderBrowserImageSize","folderBrowserImageCropSquare","getFileUrl","loading","bottom","countFolder","countFiles","countBy","it","records","entries","folder","FolderPeekItem","createSelector","peekIntoSubfolders","folderBrowserPeekIntoSubfolders","ChildrenStats","imageSamples","isImage","ImageList","cols","ImageListItem","aspectRatio","FolderCardItem","columnCount","columnGap","rowGap","gridTemplateRows","breakInside","marginBottom","viewingItem","hasParquet","hasImage","some","ext","imageExtensions","viewAsOptions","viewAs","viewFolderAs","setViewFolderAs","BreadCrumbsNav","ViewAlbum","FolderPeek","mainView","_React$useState","_React$useState2","setContent","_React$useState3","_React$useState4","isLoading","setIsLoading","fetch","then","res","err","extensionMap","python","markdown","YAML","NumberCell","valueStr","StringCell","overflowWrap","fetchParquetMeta","dataFile","column_name","cellStyle","column_type","wordBreak","cntAll","cntNull","previewCsv","ViewImage","TextContentViewer","ParquetPreview","CsvPreview","FolderViewer","FileViewer","HorizontalSplitBox","_ref$initLeftWidth","initLeftWidth","leftWidth","setLeftWidth","containerWidth","setContainerWidth","containerRef","updateContainerWidth","clientWidth","resizeObserver","ResizeObserver","observe","disconnect","getPixelWidth","percentage","parseFloat","currentPixelWidth","onMouseDown","startX","clientX","startPixelWidth","onMouseMove","delta","newPixelWidth","updateWidth","document","addEventListener","onMouseUp","removeEventListener","FolderBrowser","defaultRootFolder","reduxRootFolder","userRequestedRootFolder","useSearchParams","get","hasTreeData","FolderNav","FolderItemPreview","ShareOutlinedIcon","BackHandOutlinedIcon","HelpOutlineOutlinedIcon","TopSpeedDial","_useSelector","toast","message","severity","autoHideDuration","reason","hideToast","Snackbar","Alert","bottomBar","mounted","setMounted","shouldBlock","handleBeforeUnload","preventDefault","returnValue","useLeavePageConfirmation","ThemeProvider","CssBaseline","Toast","_ref$extraChange","_ref$shortLabel","_useSetting","schema","initValue","_defineProperty","labelElement","changeValue","idx","_ref$horizontal","infoIcon","InfoOutlineIcon","Slider","setValue","minimum","maximum","step","valueLabelDisplay","MyTreeMap","columnStats","setClickedId","cnt_values","cnt_all","chartData","filteredData","cnt","CustomizedContent","x","y","fill","plotFill","stroke","strokeWidth","textAnchor","dominantBaseline","typography","textOverflow","truncateText","TreeMapTooltip","active","payload","fontWeight","ResponsiveContainer","Treemap","isAnimationActive","MyBarChart","_ref$showBrush","showBrush","_ref$onRangeChange","onRangeChange","bin","onBrushChange","startIndex","endIndex","startValue","endValue","BarTooltip","BarChart","barGap","barCategoryGap","XAxis","dataKey","scale","YAxis","Bar","Brush","tickFormatter","travellerWidth","tickerFormat","tickCount","updateSelection","including","gridApi","forEachNode","node","targetValue","setSelected","EnumFilterTable","bufferFilters","setBufferFilters","_state$baselineColumn","baselineColumnStats","_state$filteredColumn","filteredColumnStats","baselineData","_filteredData$cnt_val","filteredCnt","coalesce","find","baseline_cnt","filtered_cnt","percent","clickedId","ensureNodeVisible","ensureClickedValueIsVisible","colDefs","COL_DEF_PERCENT","buildProgressBarRenderer","isPercent","COL_DEF_NUMBER","valueGetter","onSelectionChanged","source","getSelectedNodes","newIncluding","getRowId","getRowStyle","light","rowSelection","headerCheckboxSelection","checkboxSelection","selectionColumnDef","NullPie","heightOfColumnDistribution","useFilteredColumnStats","nullPercentage","cnt_null","nullStatsData","PieChart","pointerEvents","Pie","innerRadius","outerRadius","paddingAngle","nameKey","entry","_stringToColor","Cell","StatsCount","baseData","useBaselineColumnStats","hasNull","NullFilterRadio","filterNull","setFilterNull","FormLabel","row","reduxFilter","agColDefs","FilterAltIcon","FilterAltOutlinedIcon","removeColumnFilterAndRefreshData","FilterCardBottomButtons","cancelChanges","applyFilters","paddingTop","ColumnFilterIcon","EnumFilter","_baselineColumnStats$","reduxFilters","allValues","initialBufferFilters","null","filterType","setColumnFilterAndRefreshData","handleClickedIdChangeInTreeMap","cachedSetBufferFilters","newBufferFilters","handleNullChange","HistogramFilter","_useSelector2","_statsData$bin3","_statsData$bin4","statsData","reduxRange","range","reduxFilterNull","defaultRange","_reduxRange$","_statsData$bin","_reduxRange$2","_statsData$bin2","keyBarChart","setKeyBarChart","onCancelChanges","rangeMinWarning","TextFilter","contains","MiniTextFilter","reduxContains","filterContains","setFilterContains","hiddenLabel","Boolean","onKeyDown","onBlur","CellWithDistribution","miniVisual","mainVisual","_ref$cardHeight","cardHeight","duckdbType","CellWithQuickFilter","quickFilter","mainFilter","clickCard","TextCell","ColumnStatsCell","colPref","colMeta","allNull","ErrorIcon","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","onContextMenu","IFrameVisualizationCell","_ref$name","_ref$colDef","colDef","largeSize","TopButtons","showCopy","_ref$showCopy","_ICONS_FOR_RENDER_TYP","TextFieldsIcon","NumbersIcon","CategoryOutlinedIcon","ImageOutlinedIcon","VideoCameraBackOutlinedIcon","BrushIcon","LinkIcon","_ref$noCellPadding","noCellPadding","fontAwesomeIcons","iconOverrides","family","cssImports","weight","asc","desc","none","cellTextColor","headerBackgroundColor","headerTextColor","selectedRowBackgroundColor","cellHorizontalPaddingScale","cellVerticalPaddingScale","themeAlpine","colorSchemeDark","colorSchemeLight","withPart","withParams","DUCKDB_TYPES","INTEGER","BOOLEAN","FLOAT","STRING","DATETIME","parseValue","typeShortcuts","valueString","isInteger","parseInt","isFloat","parseColumnMeta","normalizedType","toUpperCase","normalizeType","agType","computeTypeShortcuts","singleValue","fromPairs","tableExpr","metaExpr","conditionExcludeListDict","queryStructColumns","structColumnsData","structColumns","allColumnsExpr","runQuery","transformResult","fetchCsvMeta","_callee2","_context2","_x2","useApiData","selector","shouldWait","initialState","shouldRefresh","dataIsNull","useAllColumnsMeta","_callee3","getState","_data$","_getState$dataFile","fileFormat","categoricalThreshold","fetcher","_data","initialOrder","countRows","primitiveColumns","parsedData","_context3","columnMeta","columnMetaSlice","parquet","csv","matchDerivedColumns","forEach","col","addDerivedColumn","t0","_x3","_x4","_useAllColumnsMeta","dC","useDerivedColumnMeta","useRowData","useColumnDefs","fetchRowData","useBoxPlotData","boxPlotColumns","fetchBoxPlotData","boxPlot","useBubblePlotData","bubblePlotXColumn","bubblePlotYColumn","xStatsData","xBin","yStatsData","yBin","fetchBubblePlotData","bubblePlot","useHeatMapData","heatmapXColumn","heatmapYColumn","fetchHeatMap","heatMap","useHistogramData","histogramColumn","histogramStatsData","fetchHistogramData","histogram","response","initSettings","initSettingsSlice","API_PREFIX","json","actions","cardinalitySlice","sanitizeName","cardinality","shouldInit","inferCardinality","fetchSuccess","approxCntD","maxCntDPerGroup","isPlainEncoding","result","fetchStart","fetchError","fetchCardinalityData","ImageBoxCell","MenuRow","ListItemIcon","hasFilter","MenuList","GridViewOutlinedIcon","galleryCaptionColumn","FilterAltOffOutlinedIcon","ExpandableTextCell","contentRef","isOverflowed","setIsOverflowed","isJustClicked","viewing","justClickedColumn","maxRowHeight","checkOverflow","el","scrollHeight","clientHeight","CellRightClickMenu","JsonBoxCell","AGCell","_props$data","isTopRow","derivedColumns","initialColumnDefs","cellDataType","derivedColumnDefs","allColumnDefs","setColumnDefs","useDefaultColDef","unSortIcon","floatingFilter","paddingBottom","headerTemplate","main","tertiary","_params$data","isPinned","column","getPinned","usePadding","useExpandedColumnDefs","allRenderTypes","useAllRenderTypes","d","cellRendererSelector","_params$data2","componentParams","cellRendererParams","headerComponentParams","template","columnPreference","colPrefs","regularTypes","colName","derivedTypes","useNumberColumns","renderTypeDict","useDerivedColumnPreference","isCategorical","exampleValues","decideRenderType","recommendRenderType","setColumnPreference","pickColumnsByRenderTypeList","renderTypeList","allTypes","columnHistogramQuery","filteredColumnTableExpr","histogramNumberOfBins","columnCategoryQuery","useColumnStatsQuery","_ref$applyFilters","baselineFiltersSql","allFiltersSql","filterSql","resultTransformer","_result$bin","round_to","padItems","cntValues","_result$find","r","sum","cnt_not_null","fetchColumnStatsData","reduxKey","totalCountAction","transformedResult","_useColumnStatsQuery","updateCountBaseline","_useFilters2","_useColumnStatsQuery2","baselineStats","baseSqlRecord","updateCountFiltered","updateSqlRecord","useDerivedColumn","baselineFilters","toSqlCondition","filtersSql","isDarkMode","createTheme","dark","contrastText","highlight","justClicked","properties","tableDefaultColumnWidth","galleryItemSize","heatmapNormalizeColor","bubblePlotMaxMarkerSize","bubblePlotOpacity","folderBrowserDefaultRootFolder","folderBrowserShowHiddenFiles","folderBrowserListLimit","boxPlotSortBy","SettingsSchema","Error","proxyAllUrlsInRowData","urlColumns","promises","proxiedUrls","urlDataMap","urls","batchProxyUrlApi","Promise","all","elements","rawRowData","enrichedRowData","rowDataSlice","sqlElements","where","order","evaluateAllExpressionsForAllRows","setRowDataSource","stack","fetchRandomRowData","_sqlElements","pageSize","sampleCondition","_x5","highlightMatch","str","search","regex","RegExp","parts","part","toLowerCase","s","maxNumChars","substring","charPrefixSimilarity","a","b","len","common","commonPrefix","strings","shortest","clusterByPrefix","threshold","visited","Set","clusters","has","cluster","add","j","sim","groups","g","clusterMapping","group","prefix","numberValueFormatter","percentValueFormatter","valueFormatter","_ref$bgColor","bgColor","_ref$isPercent","valStr","borderWidth","borderStyle","paddingLeft","paddingRight","stringToHash","hash","abs","pow","h","l","hue2rgb","q","t","round","hex","toString","TextIcon","_ref$fontSize","_objectWithoutProperties","_excluded","SvgIcon","viewBox","x1","y1","x2","y2","_extends","LayoutIconSideBySide","_ref4$color","_ref4$fontSize","_excluded2","LayoutIconThreeColumns","_ref5$color","_ref5$fontSize","_excluded3","LayoutIconTwoColumns","_ref6$color","_ref6$fontSize","_excluded4","boxSizing","dayjs","relativeTime","time","fromNow","filePath","every","lowerStr","test","endsWith","isImageUrl","isJsonString","base","header","dropdown","modal","popover","alwaysOnTop"],"sourceRoot":""}