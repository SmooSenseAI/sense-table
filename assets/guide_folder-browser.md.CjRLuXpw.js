import{_ as t,C as l,c as n,o as d,a2 as s,G as o,j as a,a as i}from"./chunks/framework.CYTMIbkx.js";const b=JSON.parse('{"title":"Folder Browser as a mini Catelog","description":"","frontmatter":{},"headers":[],"relativePath":"guide/folder-browser.md","filePath":"guide/folder-browser.md","lastUpdated":1757947514000}'),f={name:"guide/folder-browser.md"};function p(w,e,m,u,v,c){const r=l("ThemedImage");return d(),n("div",null,[e[0]||(e[0]=s('<h1 id="folder-browser-as-a-mini-catelog" tabindex="-1">Folder Browser as a mini Catelog <a class="header-anchor" href="#folder-browser-as-a-mini-catelog" aria-label="Permalink to &quot;Folder Browser as a mini Catelog&quot;">​</a></h1><p>Data Catelog is very useful when you want to discover and overview your data, but it is often maintained by a separate SRE team, inflexible to change and difficult to customize.</p><p>SenseTable empowers you to directly use File System as a mini catelog. Benefits:</p><ul><li>It is very fast to get started and flexible to make changes.</li><li>Most of LLMs natively know how to access file systems.</li><li>Cost effective. No need to pay for dedicated servers and databases unless it is needed.</li></ul><h2 id="markdown-description-of-a-folder" tabindex="-1">Markdown description of a folder <a class="header-anchor" href="#markdown-description-of-a-folder" aria-label="Permalink to &quot;Markdown description of a folder&quot;">​</a></h2><p>You can optionally add <code>readme.md</code> to a folder and get it displayed when you preview the folder.</p>',6)),o(r,{src:"/images/folder_browser/markdown_readme.jpg"}),e[1]||(e[1]=s('<div class="warning custom-block"><p class="custom-block-title">Caveats of case sensitivity</p><p>On macOS the file system is case-insensitive, so any upper/lower case of <code>Readme.md</code> or <code>README.MD</code> would work.</p><p>However S3 is case sensitive, so we need to exactly use <code>readmd.md</code> as the file name.</p></div><h2 id="preview-sub-folders" tabindex="-1">Preview sub folders <a class="header-anchor" href="#preview-sub-folders" aria-label="Permalink to &quot;Preview sub folders&quot;">​</a></h2><p>SenseTable allows you to preview subfolders and reveal one additional layer within nested structures.</p>',3)),o(r,{src:"/images/folder_browser/preview_folder.jpg"}),e[2]||(e[2]=a("h2",{id:"preview-images-and-videos",tabindex:"-1"},[i("Preview images and videos "),a("a",{class:"header-anchor",href:"#preview-images-and-videos","aria-label":'Permalink to "Preview images and videos"'},"​")],-1)),o(r,{src:"/images/folder_browser/preview_images.jpg"}),e[3]||(e[3]=a("h2",{id:"preview-parquet-files",tabindex:"-1"},[i("Preview parquet files "),a("a",{class:"header-anchor",href:"#preview-parquet-files","aria-label":'Permalink to "Preview parquet files"'},"​")],-1)),e[4]||(e[4]=a("p",null,"Parquet files store their metadata in a dedicated footer at the end of the file. Combined with S3’s support for HTTP Range requests, this allows us to preview Parquet files by fetching only a few kilobytes — even when the full file is many gigabytes in size.",-1)),e[5]||(e[5]=a("p",null,[i("Below is an example of previewing a "),a("strong",null,"100-million-row, 8.43 GB"),i(" Parquet file with minimal data transfer in only "),a("strong",null,"one second"),i(".")],-1)),o(r,{src:"/images/folder_browser/preview_parquet.jpg"}),e[6]||(e[6]=a("h2",{id:"preview-csv-files",tabindex:"-1"},[i("Preview csv files "),a("a",{class:"header-anchor",href:"#preview-csv-files","aria-label":'Permalink to "Preview csv files"'},"​")],-1)),e[7]||(e[7]=a("p",null,"CSV is not efficient but due to it simplicity it is still widely used. SenseTable also support efficiently previewing csv file by only fetching the first few dozen rows.",-1)),e[8]||(e[8]=a("p",null,[i("Below is an example of previewing a "),a("strong",null,"856 MB"),i(" file in only "),a("strong",null,"a few seconds"),i(".")],-1)),o(r,{src:"/images/folder_browser/preview_csv.jpg"}),e[9]||(e[9]=a("h2",{id:"preview-json",tabindex:"-1"},[i("Preview json "),a("a",{class:"header-anchor",href:"#preview-json","aria-label":'Permalink to "Preview json"'},"​")],-1)),e[10]||(e[10]=a("p",null,"We provide a built-in json viewer specially optimized for large data. You can interactively expand/collapse and copy whole or part of the data.",-1)),o(r,{src:"/images/folder_browser/preview_json.jpg"})])}const h=t(f,[["render",p]]);export{b as __pageData,h as default};
