name: Deploy Documentation

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: docs

      - name: Build documentation
        run: npm run docs:build
        working-directory: docs

      - name: Configure AWS CLI for R2
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          aws-secret-access-key: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          aws-region: auto
          endpoint-url: ${{ secrets.CLOUDFLARE_R2_ENDPOINT }}

      - name: Deploy to Cloudflare R2
        run: |
          aws s3 sync docs/.vitepress/dist s3://${{ secrets.CLOUDFLARE_R2_BUCKET }} \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "*.html" \
            --include "*.html" \
            --cache-control "public, max-age=0, no-cache"
        env:
          AWS_ENDPOINT_URL: ${{ secrets.CLOUDFLARE_R2_ENDPOINT }}

      - name: Invalidate Cloudflare Cache
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"purge_everything": true}'
        if: success()
